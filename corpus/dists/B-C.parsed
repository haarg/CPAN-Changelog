{
  "preamble" => "-*- change-log -*-\n\tStarted on CPAN with B-C-1.04_12\n\tThe Perl compiler was in CORE from alpha4 until Perl 5.9.4\n\tand worked quite fine with Perl 5.6 and 5.8",
  "raw_preamble" => "-*- change-log -*-\n\tStarted on CPAN with B-C-1.04_12\n\tThe Perl compiler was in CORE from alpha4 until Perl 5.9.4\n\tand worked quite fine with Perl 5.6 and 5.8\n\n",
  "releases" => [
    {
      "date" => "2014-02-11",
      "entries" => [
        {
          "line" => 7,
          "raw" => "        * C: reset PL_stack_sp on init (was one too far). no effects on code.\n",
          "style" => "*",
          "text" => "C: reset PL_stack_sp on init (was one too far). no effects on code."
        },
        {
          "line" => 8,
          "raw" => "        * t/issue281.t: fix wrong test (\$[ vs \$])\n\n",
          "style" => "*",
          "text" => "t/issue281.t: fix wrong test (\$[ vs \$])"
        }
      ],
      "line" => 6,
      "note" => "rurban",
      "raw" => "1.45\t2014-02-11 rurban\n",
      "raw_date" => "2014-02-11",
      "version" => "1.45"
    },
    {
      "date" => "2014-02-10",
      "entries" => [
        {
          "line" => 11,
          "raw" => "        added adjusted CORE testsuite for 5.14. passes for 5.14.4-nt, not for 5.18.2-nt\n",
          "style" => "",
          "text" => "added adjusted CORE testsuite for 5.14. passes for 5.14.4-nt, not for 5.18.2-nt"
        },
        {
          "line" => 12,
          "raw" => "\t(cPanel code_monkeys)\n",
          "style" => "",
          "text" => "(cPanel code_monkeys)"
        },
        {
          "entries" => [
            {
              "line" => 14,
              "raw" => "\t  - global destruction (use lexicals!),\n",
              "style" => "-",
              "text" => "global destruction (use lexicals!),"
            },
            {
              "line" => 15,
              "raw" => "\t  - attribute handlers,\n",
              "style" => "-",
              "text" => "attribute handlers,"
            },
            {
              "line" => 16,
              "raw" => "\t  - compile-time perlio layers\n\n",
              "style" => "-",
              "text" => "compile-time perlio layers"
            }
          ],
          "line" => 13,
          "raw" => "\tstill missing in general are:\n",
          "style" => "",
          "text" => "still missing in general are:"
        },
        {
          "line" => 18,
          "raw" => "        * C: Fix -O3 with ~ and ~~ formatstrings (#277)\n\tFix SvLEN and PV ptr for empty shared hash keys (#272)\n        Use the natural \@dl_modules boot order, just put attributes to the front (#259)\n\tStore cop_hints to support lexical numeric hints pragmas,\n          esp. use bytes and use open attributes\n          (fixes #81 #152 #174 #176 #180 #185 #224 #235 #238 #241 #245 #253 #255 #256 #277)\n        Skip saving defined(&cv) subs (#96)\n        Fix format STDOUT/STDERR (#238, #239, #277, #284, #285, #283)\n        Save now empty bodyless subs if they exist, for signal handlers,\n          prototypes declarations and cvrefs (#251, #159, #235, #246, #270, #271, #275, #279)\n        Fix PVMG PV overwriting the RV, overload sub (#273)\n",
          "style" => "*",
          "text" => "C: Fix -O3 with ~ and ~~ formatstrings (#277) Fix SvLEN and PV ptr for empty shared hash keys (#272) Use the natural \@dl_modules boot order, just put attributes to the front (#259) Store cop_hints to support lexical numeric hints pragmas, esp. use bytes and use open attributes (fixes #81 #152 #174 #176 #180 #185 #224 #235 #238 #241 #245 #253 #255 #256 #277) Skip saving defined(&cv) subs (#96) Fix format STDOUT/STDERR (#238, #239, #277, #284, #285, #283) Save now empty bodyless subs if they exist, for signal handlers, prototypes declarations and cvrefs (#251, #159, #235, #246, #270, #271, #275, #279) Fix PVMG PV overwriting the RV, overload sub (#273)"
        },
        {
          "line" => 29,
          "raw" => "\t* CC (1.14): Skip saving non-existing methods analog to B::C 1.43_06 (CC test 50)\n",
          "style" => "*",
          "text" => "CC (1.14): Skip saving non-existing methods analog to B::C 1.43_06 (CC test 50)"
        },
        {
          "line" => 30,
          "raw" => "\t* perlcc (2.17): Accept -A for -DALLOW_PERL_OPTIONS\n",
          "style" => "*",
          "text" => "perlcc (2.17): Accept -A for -DALLOW_PERL_OPTIONS"
        },
        {
          "line" => 31,
          "raw" => "\t* t/testc.sh: Accept -A for -DALLOW_PERL_OPTIONS\n\n",
          "style" => "*",
          "text" => "t/testc.sh: Accept -A for -DALLOW_PERL_OPTIONS"
        }
      ],
      "line" => 10,
      "note" => "rurban",
      "raw" => "1.44\t2014-02-10 rurban\n",
      "raw_date" => "2014-02-10",
      "version" => "1.44"
    },
    {
      "date" => "2014-01-15",
      "entries" => [
        {
          "line" => 34,
          "raw" => "\tnew 5.16, and partial 5.18, 5.20 and windows support.\n",
          "style" => "",
          "text" => "new 5.16, and partial 5.18, 5.20 and windows support."
        },
        {
          "line" => 35,
          "raw" => "        Many more fixes and testcases.\n",
          "style" => "",
          "text" => "Many more fixes and testcases."
        },
        {
          "line" => 36,
          "raw" => "        Bytecode is still broken on 5.18, esp non-threaded. 5.20 looks pretty good though.\n\n",
          "style" => "",
          "text" => "Bytecode is still broken on 5.18, esp non-threaded. 5.20 looks pretty good though."
        },
        {
          "line" => 38,
          "raw" => "        * C: Fix -u<module> without file extension.\n\tWith hek do not drop FAKE, only for const pv.\n\tFixed \$\$ (\$PID) to be dynamic, issue 108. Thanks to flexvault for reporting this.\n        Fixed double precision to 16 digits. The nbody shootout test passes now.\n        Fixed refcounts of *ENV, issue 111.\n        Fixed wrong boot_ arg for the xs version check with --staticxs\n        Better fix for overwriting of \@ARGV <O3, test c_argv:1 and c_allow_opts.t:1\n        Fixed refinition warnings of XS CONSTSUB. Ignore them as they are\n          loaded later.\n        Add \$dlmodule::VERSION as 2nd arg to boot_\$dlmodule resp. \$dlmodule::bootstrap\n          to get rid of the pesky Invalid version format error in xs_version_bootcheck\n          if the \$VERSION had already version magic attached. (no testcase, hard to repro)\n        perl 5.16.0 shipped a slightly broken B without cop_stashlen. As workaround\n          we do not support utf8 stashes nor null bytes in stashes on 5.16.0 threaded.\n        Fixed Null COP storage for 5.16 and 5.17\n        Fix amagic_generation which was removed with 5.17\n        Fix ALLOW_PERL_OPTIONS: add -e behind all processed options, not before\n        Fixed HvAUX init. Previously only with magic hashes, now on all OOK hashes (OOK+SHAREKEYS)\n          e.g. %warning::Bits\n        Added support for new PADLIST type since 5.17.4 (with xpadl_id) and 5.17.6 (without)\n        \$^X returns now the real executable name, not just perl or perl.exe\n        Adjust COW string lengths to hold the COW_REFCNT byte at the end\n        Fix unicode string CUR and LEN (#142, #162)\n        Fix unicode hashkeys (HEK) mostly (#200), but not yet testc.sh 2001 (compile-time\n          stored utf8 heks)\n        Save HvTOTALKEYS at run-time as max added to the number of run-time added keys (#178)\n        Fix UV uvuformat on 32bit -Duse64bitint (#145)\n        op_pmreplstart is now run-time initialized >= 5.10 (#160)\n        Fixed special usage of magic vars \@-,\@+,%+,\$-,\$! (#90)\n        Fixed wrong REGEXP length for compiled QR data (#143)\n        Fixed wrong -O3 comparison of strings to numbers (#138,#141, branch new-cog), unified\n          PV handling, disabled -fcog replaced by -O3 -fconst-strings\n        Fixed NUL-byte handling in strings by using B::SV->PV instead of PVX (#237)\n        Storing now bareword filehandles (#148,#149)\n        Do not create GvGP at all. This also removes the need for newGP() (Windows/AIX)\n        use Config does not include B anymore, Internals::V now in __ANON__ package\n        Fixed handling of empty - not successfully autoloaded - CVs (#235, #159, ...)\n          by storing the SV and XPVCV but ignoring it and defer to run-time get_cv()\n        Unify handling of static and dynamic strings, use ptr_undef throughout instead\n          of NULL vs &PL_sv_undef (save_pv_or_rv => savesym, cur, len, pv, static)\n        Restore \$^H, the numeric value of global warnings flags (#193,#207,#243)\n        Restore more missing globals: \${^UNICODE} \${^UTF8LOCALE} \$; \$\\ \$, \$/ \$\" \$|\n          \$^A \$^L \$: \$^H \$^R \$% \$- \$= if set in a BEGIN block or via cmdline (#256,#231)\n        Restore even deprecated vars \$] \$# \$* (#171)\n        Fix HvAUX memory corruption, accessing HvAUX beyond HE fields, esp. with threaded perls.\n          Initialize now HvAUX backref and mro_meta fields.\n        Do not boot internal core XS packages twice, refer to internal XS functions dynamically\n          and do not link to them. Fixes fix Windows/AIX with strict linking.\n        Defer dynaloaded GvCV initialization after dl_init()\n        Fixed storage of non-special lexical warnings (#258 warnsize-i258)\n\tFixed storage of shared heks, support IsCOW_hek (i.e. method names)\n        Support new ReANY since 5.17.6 (#258 reg_temp_copy)\n        Support stash symtab magic for PMf_ONCE m?? and reset (#188)\n        Fixed POSIX overflow constants warnings for DBL_MAX,DBL_MIN,LONG_MIN,LONG_MAX (#262)\n        Support user-defined static_ext modules, which are already booted from core.\n        Add more DynaLoader::dl_debug output (set PERL_DL_DEBUG=1)\n        Enforce -ffold on an ucfirst op or \$INC{'unicore/To/Title.pl'} (#242)\n        Mark empty but overloaded packages (#172). This is merely workaround for reduced testcases.\n        Set PadnamelistMAXNAMED(comppad_name) needed since 5.19.3 for eval string (#268)\n        Add new option -fno-delete-pkg to control if to ignore compiler-only dependent packages,\n          compiler-independent packages are now always saved. Save those package names at Makefile.PL\n          in \@B::C::Flags::deps.\n\n",
          "style" => "*",
          "text" => "C: Fix -u<module> without file extension. With hek do not drop FAKE, only for const pv. Fixed \$\$ (\$PID) to be dynamic, issue 108. Thanks to flexvault for reporting this. Fixed double precision to 16 digits. The nbody shootout test passes now. Fixed refcounts of *ENV, issue 111. Fixed wrong boot_ arg for the xs version check with --staticxs Better fix for overwriting of \@ARGV <O3, test c_argv:1 and c_allow_opts.t:1 Fixed refinition warnings of XS CONSTSUB. Ignore them as they are loaded later. Add \$dlmodule::VERSION as 2nd arg to boot_\$dlmodule resp. \$dlmodule::bootstrap to get rid of the pesky Invalid version format error in xs_version_bootcheck if the \$VERSION had already version magic attached. (no testcase, hard to repro) perl 5.16.0 shipped a slightly broken B without cop_stashlen. As workaround we do not support utf8 stashes nor null bytes in stashes on 5.16.0 threaded. Fixed Null COP storage for 5.16 and 5.17 Fix amagic_generation which was removed with 5.17 Fix ALLOW_PERL_OPTIONS: add -e behind all processed options, not before Fixed HvAUX init. Previously only with magic hashes, now on all OOK hashes (OOK+SHAREKEYS) e.g. %warning::Bits Added support for new PADLIST type since 5.17.4 (with xpadl_id) and 5.17.6 (without) \$^X returns now the real executable name, not just perl or perl.exe Adjust COW string lengths to hold the COW_REFCNT byte at the end Fix unicode string CUR and LEN (#142, #162) Fix unicode hashkeys (HEK) mostly (#200), but not yet testc.sh 2001 (compile-time stored utf8 heks) Save HvTOTALKEYS at run-time as max added to the number of run-time added keys (#178) Fix UV uvuformat on 32bit -Duse64bitint (#145) op_pmreplstart is now run-time initialized >= 5.10 (#160) Fixed special usage of magic vars \@-,\@+,%+,\$-,\$! (#90) Fixed wrong REGEXP length for compiled QR data (#143) Fixed wrong -O3 comparison of strings to numbers (#138,#141, branch new-cog), unified PV handling, disabled -fcog replaced by -O3 -fconst-strings Fixed NUL-byte handling in strings by using B::SV->PV instead of PVX (#237) Storing now bareword filehandles (#148,#149) Do not create GvGP at all. This also removes the need for newGP() (Windows/AIX) use Config does not include B anymore, Internals::V now in __ANON__ package Fixed handling of empty - not successfully autoloaded - CVs (#235, #159, ...) by storing the SV and XPVCV but ignoring it and defer to run-time get_cv() Unify handling of static and dynamic strings, use ptr_undef throughout instead of NULL vs &PL_sv_undef (save_pv_or_rv => savesym, cur, len, pv, static) Restore \$^H, the numeric value of global warnings flags (#193,#207,#243) Restore more missing globals: \${^UNICODE} \${^UTF8LOCALE} \$; \$\\ \$, \$/ \$\" \$| \$^A \$^L \$: \$^H \$^R \$% \$- \$= if set in a BEGIN block or via cmdline (#256,#231) Restore even deprecated vars \$] \$# \$* (#171) Fix HvAUX memory corruption, accessing HvAUX beyond HE fields, esp. with threaded perls. Initialize now HvAUX backref and mro_meta fields. Do not boot internal core XS packages twice, refer to internal XS functions dynamically and do not link to them. Fixes fix Windows/AIX with strict linking. Defer dynaloaded GvCV initialization after dl_init() Fixed storage of non-special lexical warnings (#258 warnsize-i258) Fixed storage of shared heks, support IsCOW_hek (i.e. method names) Support new ReANY since 5.17.6 (#258 reg_temp_copy) Support stash symtab magic for PMf_ONCE m?? and reset (#188) Fixed POSIX overflow constants warnings for DBL_MAX,DBL_MIN,LONG_MIN,LONG_MAX (#262) Support user-defined static_ext modules, which are already booted from core. Add more DynaLoader::dl_debug output (set PERL_DL_DEBUG=1) Enforce -ffold on an ucfirst op or \$INC{'unicore/To/Title.pl'} (#242) Mark empty but overloaded packages (#172). This is merely workaround for reduced testcases. Set PadnamelistMAXNAMED(comppad_name) needed since 5.19.3 for eval string (#268) Add new option -fno-delete-pkg to control if to ignore compiler-only dependent packages, compiler-independent packages are now always saved. Save those package names at Makefile.PL in \@B::C::Flags::deps."
        },
        {
          "line" => 101,
          "raw" => "        * perlcc (2.14): new option --dryrun, -v5 does not -Dsp,-v\n         new option -f passthru to C and CC\n",
          "style" => "*",
          "text" => "perlcc (2.14): new option --dryrun, -v5 does not -Dsp,-v new option -f passthru to C and CC"
        },
        {
          "line" => 103,
          "raw" => "        * perlcc (2.15): fixed default --spawn: use waitpid which was broken for parallel builds.\n        fixed warning Prototype mismatch: sub main::gettimeofday: none vs () at perlcc line 261\n        improved --version\n        added --perlopts to handle -DALLOW_PERL_OPTIONS\n",
          "style" => "*",
          "text" => "perlcc (2.15): fixed default --spawn: use waitpid which was broken for parallel builds. fixed warning Prototype mismatch: sub main::gettimeofday: none vs () at perlcc line 261 improved --version added --perlopts to handle -DALLOW_PERL_OPTIONS"
        },
        {
          "line" => 107,
          "raw" => "        * perlcc (2.16): changed output name rules:\n        Without given output file name we use the name of the input file (in the subdir)\n        or with -e a.out resp. a.exe and a randomized intermediate C filename.\n        If the input file is an absolute path on non-windows systems use the basename.\n",
          "style" => "*",
          "text" => "perlcc (2.16): changed output name rules: Without given output file name we use the name of the input file (in the subdir) or with -e a.out resp. a.exe and a randomized intermediate C filename. If the input file is an absolute path on non-windows systems use the basename."
        },
        {
          "line" => 111,
          "raw" => "\t* CC (1.13): Use the B::C integer and double precision logic (ivx, nvx).\n        Fixed double precision to 16 digits. The nbody shootout is now 2x faster than perl.\n        Added optimizations: -fno-magic, -fno-autovivify, -faelem\n        Detect \"no autovivification;\" pragma.\n        New -fno-taint, -fomit_taint is deprecated\n        Fix amagic_generation which was removed with 5.17\n        Use new perl6 type names: int, num, str. double and string are deprecated.\n",
          "style" => "*",
          "text" => "CC (1.13): Use the B::C integer and double precision logic (ivx, nvx). Fixed double precision to 16 digits. The nbody shootout is now 2x faster than perl. Added optimizations: -fno-magic, -fno-autovivify, -faelem Detect \"no autovivification;\" pragma. New -fno-taint, -fomit_taint is deprecated Fix amagic_generation which was removed with 5.17 Use new perl6 type names: int, num, str. double and string are deprecated."
        },
        {
          "line" => 118,
          "raw" => "\t* Bytecode (1.14): fixed require and op_first, issue 97\n\tFixed regex_pad offset in threaded perls >= 5.11, issue 68.\n        New type B::PAD isa B::AV (PADLIST for 5.17.5),\n        New bytecodes newpadlx, padl_name, padl_sym (PADLIST for 5.17.5)\n        Fixed CvGV_set causing Attempt to free unreferenced scalar in push_begin (42,43)\n        Fixed -Do (peek ops)\n        Renamed option -f to -F for files.\n        Fixed READONLY magic and restricted hashes, issue 98\n        Support IsCOW xpvshared strings (>=5.18)\n        Fixed wrong xpvshared logic (5.10-5.17), issue 138\n        Optimized away 0=default op and gp flags and pointers\n        Optimized away default sv_refcnt=1 (GV not), and skip redundant bytecodes\n        Set PadnamelistMAXNAMED(comppad_name) needed since 5.19.3 for eval string (#268)\n\n",
          "style" => "*",
          "text" => "Bytecode (1.14): fixed require and op_first, issue 97 Fixed regex_pad offset in threaded perls >= 5.11, issue 68. New type B::PAD isa B::AV (PADLIST for 5.17.5), New bytecodes newpadlx, padl_name, padl_sym (PADLIST for 5.17.5) Fixed CvGV_set causing Attempt to free unreferenced scalar in push_begin (42,43) Fixed -Do (peek ops) Renamed option -f to -F for files. Fixed READONLY magic and restricted hashes, issue 98 Support IsCOW xpvshared strings (>=5.18) Fixed wrong xpvshared logic (5.10-5.17), issue 138 Optimized away 0=default op and gp flags and pointers Optimized away default sv_refcnt=1 (GV not), and skip redundant bytecodes Set PadnamelistMAXNAMED(comppad_name) needed since 5.19.3 for eval string (#268)"
        },
        {
          "line" => 132,
          "raw" => "\t* ByteLoader (0.10): set sv_refcnt to 1 in newsv to skip most defaults\n",
          "style" => "*",
          "text" => "ByteLoader (0.10): set sv_refcnt to 1 in newsv to skip most defaults"
        },
        {
          "line" => 133,
          "raw" => "        * Assembler (1.11): allow \"newpadlx 0\"\n",
          "style" => "*",
          "text" => "Assembler (1.11): allow \"newpadlx 0\""
        },
        {
          "line" => 134,
          "raw" => "        * Disassembler (1.12): use B::Concise op_flags and private_flags\n",
          "style" => "*",
          "text" => "Disassembler (1.12): use B::Concise op_flags and private_flags"
        },
        {
          "line" => 135,
          "raw" => "\t* Stash (1.03): fix compilation for 5.8.8 and below: gv_fetchsv missing\n",
          "style" => "*",
          "text" => "Stash (1.03): fix compilation for 5.8.8 and below: gv_fetchsv missing"
        },
        {
          "line" => 136,
          "raw" => "\t* t/perldoc.t: perlcc fails with 5.8 because Cwd disturbs the\n\t  fragile method package finder for File::Spec. Use cc_harness.\n\n",
          "style" => "*",
          "text" => "t/perldoc.t: perlcc fails with 5.8 because Cwd disturbs the fragile method package finder for File::Spec. Use cc_harness."
        }
      ],
      "line" => 33,
      "note" => "rurban",
      "raw" => "1.43\t2014-01-15 rurban\n",
      "raw_date" => "2014-01-15",
      "version" => "1.43"
    },
    {
      "date" => "2012-02-01",
      "entries" => [
        {
          "line" => 140,
          "raw" => "        stable up to 5.14\n\n",
          "style" => "",
          "text" => "stable up to 5.14"
        },
        {
          "line" => 142,
          "raw" => "\t* C: Improved finding methods in parent classes (Warning: method not found),\n\tSave \@ISA of those child classes.\n\tRe-implement and simplify my_share_hek, now in terms of share_hek.\n\t  PL_strtab hack gone. This fixed the shared_hek destruction\n\t  problems.\n\tTurn off CvDYNFILE needed since 5.15.4, use static CvFILE. (DateTime)\n",
          "style" => "*",
          "text" => "C: Improved finding methods in parent classes (Warning: method not found), Save \@ISA of those child classes. Re-implement and simplify my_share_hek, now in terms of share_hek. PL_strtab hack gone. This fixed the shared_hek destruction problems. Turn off CvDYNFILE needed since 5.15.4, use static CvFILE. (DateTime)"
        },
        {
          "line" => 148,
          "raw" => "\t* perlcc: perlcc -stash does not hang anymore, renabled t/e_perlcc.t -stash section\n",
          "style" => "*",
          "text" => "perlcc: perlcc -stash does not hang anymore, renabled t/e_perlcc.t -stash section"
        },
        {
          "line" => 149,
          "raw" => "\t* Stash (1.02): '-xs' does not load B anymore.\n\t  Now in seperate directory Stash\n",
          "style" => "*",
          "text" => "Stash (1.02): '-xs' does not load B anymore. Now in seperate directory Stash"
        },
        {
          "line" => 151,
          "raw" => "\t* Stash/Stash.xs: new with CvIsXSUB() to get rid of B, polluting the stashes.\n",
          "style" => "*",
          "text" => "Stash/Stash.xs: new with CvIsXSUB() to get rid of B, polluting the stashes."
        },
        {
          "line" => 152,
          "raw" => "\t* Stash/Makefile.PL: new\n",
          "style" => "*",
          "text" => "Stash/Makefile.PL: new"
        },
        {
          "line" => 153,
          "raw" => "\t* Bytecode (1.13): support shared hek (42,43)\n",
          "style" => "*",
          "text" => "Bytecode (1.13): support shared hek (42,43)"
        },
        {
          "line" => 154,
          "raw" => "\t* ByteLoader (0.09), ByteLoader/bytecode.h, bytecode.pl: support shared hek (42,43),\n\t  added xpvshared\n",
          "style" => "*",
          "text" => "ByteLoader (0.09), ByteLoader/bytecode.h, bytecode.pl: support shared hek (42,43), added xpvshared"
        },
        {
          "line" => 156,
          "raw" => "\t* t/issue95.t: added, isa methods not found\n\n",
          "style" => "*",
          "text" => "t/issue95.t: added, isa methods not found"
        }
      ],
      "line" => 139,
      "note" => "rurban",
      "raw" => "1.42\t2012-02-01 rurban\n",
      "raw_date" => "2012-02-01",
      "version" => "1.42"
    },
    {
      "date" => "2012-01-30",
      "entries" => [
        {
          "line" => 159,
          "raw" => "\t* t/modules.t: Fixed syntax error\n\n",
          "style" => "*",
          "text" => "t/modules.t: Fixed syntax error"
        }
      ],
      "line" => 158,
      "note" => "rurban",
      "raw" => "1.41\t2012-01-30 rurban\n",
      "raw_date" => "2012-01-30",
      "version" => "1.41"
    },
    {
      "date" => "2012-01-30",
      "entries" => [
        {
          "line" => 162,
          "raw" => "\tstatic PerlIO Layers (e.g. __DATA__)\n\n",
          "style" => "",
          "text" => "static PerlIO Layers (e.g. __DATA__)"
        },
        {
          "line" => 164,
          "raw" => "\t* C: fixed deferred %INC, %INC is now stored and cleaned up at the end.\n\tImproved __DATA__ handle  as PerlIO layer, PerlIO::scalar now\n\t  loaded static (test 15).\n\tDefer eval section after dl_init (e.g. for PerlIO::scalar) (test 15)\n\tCheck for XSLoader now at the very end (test 27)\n\tFixed MUTABLE_CV for 5.10.0\n\tImproved 5.8 method lifting for not-found methods a bit (5.8. perldoc.t)\n",
          "style" => "*",
          "text" => "C: fixed deferred %INC, %INC is now stored and cleaned up at the end. Improved __DATA__ handle  as PerlIO layer, PerlIO::scalar now loaded static (test 15). Defer eval section after dl_init (e.g. for PerlIO::scalar) (test 15) Check for XSLoader now at the very end (test 27) Fixed MUTABLE_CV for 5.10.0 Improved 5.8 method lifting for not-found methods a bit (5.8. perldoc.t)"
        },
        {
          "line" => 171,
          "raw" => "\t* Bytecode: fixed test 22\n\t  Cannot locate object method \"fileno\" via package \"IO::File\"\n",
          "style" => "*",
          "text" => "Bytecode: fixed test 22 Cannot locate object method \"fileno\" via package \"IO::File\""
        },
        {
          "line" => 173,
          "raw" => "\t* Makefile.PL: readonly \$lib fix for MSWin32\n",
          "style" => "*",
          "text" => "Makefile.PL: readonly \$lib fix for MSWin32"
        },
        {
          "line" => 174,
          "raw" => "\t* t/testc.sh: silence ulimit -m warnings + errors\n\n",
          "style" => "*",
          "text" => "t/testc.sh: silence ulimit -m warnings + errors"
        }
      ],
      "line" => 161,
      "note" => "rurban",
      "raw" => "1.40\t2012-01-30 rurban\n",
      "raw_date" => "2012-01-30",
      "version" => "1.40"
    },
    {
      "date" => "2012-01-25",
      "entries" => [
        {
          "line" => 177,
          "raw" => "\t* C: improved eval AUTOLOAD, avoid some POSIX and Storable .al compile-time\n\t  side-effects such as creating files and dirs. First try loading\n\t  .al files, only then eval the dangerous AUTOLOAD.\n",
          "style" => "*",
          "text" => "C: improved eval AUTOLOAD, avoid some POSIX and Storable .al compile-time side-effects such as creating files and dirs. First try loading .al files, only then eval the dangerous AUTOLOAD."
        },
        {
          "line" => 180,
          "raw" => "\t* Makefile.PL: typo in -fav-init2 independent_comalloc detection.\n\tAdded LICENSE key, META and the files were not enough to please pause.\n\n",
          "style" => "*",
          "text" => "Makefile.PL: typo in -fav-init2 independent_comalloc detection. Added LICENSE key, META and the files were not enough to please pause."
        }
      ],
      "line" => 176,
      "note" => "rurban",
      "raw" => "1.39\t2012-01-25 rurban\n",
      "raw_date" => "2012-01-25",
      "version" => "1.39"
    },
    {
      "date" => "2012-01-24",
      "entries" => [
        {
          "line" => 184,
          "raw" => "\t* t/issue93.t: fixed syntax error\n\n",
          "style" => "*",
          "text" => "t/issue93.t: fixed syntax error"
        }
      ],
      "line" => 183,
      "note" => "rurban",
      "raw" => "1.38\t2012-01-24 rurban\n",
      "raw_date" => "2012-01-24",
      "version" => "1.38"
    },
    {
      "date" => "2012-01-24",
      "entries" => [
        {
          "line" => 187,
          "raw" => "\tEnabled copy-on-grow strings >= 5.10.\n",
          "style" => "",
          "text" => "Enabled copy-on-grow strings >= 5.10."
        },
        {
          "line" => 188,
          "raw" => "\tSave %main:: stashes w/o -fno-stash. Switched to git, added github mirror\n",
          "style" => "",
          "text" => "Save %main:: stashes w/o -fno-stash. Switched to git, added github mirror"
        },
        {
          "line" => 189,
          "raw" => "\tFixed hashes and share_hek, when mixed compiled and load-time for >5.8.\n\n",
          "style" => "",
          "text" => "Fixed hashes and share_hek, when mixed compiled and load-time for >5.8."
        },
        {
          "line" => 191,
          "raw" => "\tStability: This release is the first which passes almost all tests and\n",
          "style" => "",
          "text" => "Stability: This release is the first which passes almost all tests and"
        },
        {
          "line" => 192,
          "raw" => "\tis used in production with --staticxs -O3, but copy-on-grow hek's and\n",
          "style" => "",
          "text" => "is used in production with --staticxs -O3, but copy-on-grow hek's and"
        },
        {
          "line" => 193,
          "raw" => "\tfurther logical improvements (deferred %INC cleanup) fail so far, so it's\n",
          "style" => "",
          "text" => "further logical improvements (deferred %INC cleanup) fail so far, so it's"
        },
        {
          "line" => 194,
          "raw" => "\tstill considered unstable.\n\n",
          "style" => "",
          "text" => "still considered unstable."
        },
        {
          "line" => 196,
          "raw" => "\t* C: save stashes optionally with -fstash, but only values which are also\n\t  stashes to avoid a second walker besides savecv, and thus do not\n\t  walk into unneeded territory; B::STASHGV (46, issue 79)\n\tNew -fno-stash with -O2 to omit stashes which are rarely needed.\n\tFixed vulnerability to oCERT-2011-003 style DOS attacks. Do not\n\t  pre-compute hashes for hv_store(), use fresh random hash seed.\n\t  But shared_hek() has a limited API which does not allow this.\n\tUNIVERSAL methods were not correctly stored, which led to method not\n\t  found at run-time errors.\n\tNew debug option -Dr \"runtime\" to add debug output to the .c code (as in CC)\n\tNew option -Upackage to skip package, mark_skip()\n\tRe-implemented sharepvn via share_hek() and SvLEN=0 (issue 71),\n\t  Special FAKE+READONLY handling: LEN = 0 if pv_copy_on_grow or shared_hek.\n\t  Fixed !SvIsCOW_shared_hash + FAKE+READONLY conflict (test 13, issue 82).\n\t  Shared COW hashkeys which are optimized to static const strings\n\t  may not be marked as IsCOW (remove SVf_FAKE).\n\tRe-implemented CORE share_hek with hash=0\n\t  Otherwise shared HEK's (post-5.10) come up with duplicate entries\n\t  for the same keys; one compile-time created and one run-time created with\n\t  a different random hash seed. E.g. observed by such warnings\n\t  \"Prototype mismatch: sub bytes::length (_) vs (_)\"\n\tAdded Internals::hv_clear_placeholders XS name exception, similar\n\t  to version:: (issue 83)\n\tStore CV prototypes, issue 81 and issue 84 for empty () vs NULL prototypes.\n\tFixed 5.15.2 hang at hfree_next_entry (issue 78)\n\tDefer writing of READONLY hash keys since 5.15 (issue 88)\n\tEnable -fcog copy-on-grow with static strings for >= 5.10\n\tImproved Errno vs. *main::! and Tie::Hash::NamedCapture vs\n\t  *main::+  / - logic (issue 90)\n\tUpdated version XS methods, default to noop for (...\n\tStrip version object overload from XS packages (issue 91), XS needs plain PVs\n\tDo not initialize CONSTSUB XS methods twice, boot does it for us\n\tPass proper cv to XS boot_\$name, fixes boot of\n\t  Tie::Hash::NamedCapture (issue 86)\n\tFixed share_hek strings with -O1 (test 13)\n\tFixed bootstrapping the XS/core part of attributes,\n\t  thereby fixed threads tests 41-43.\n\tFixed most 5.8.[45] problems by ignoring aelemfast SPECIAL pads.\n\tFixed magic -> PTR when SV (>5.6)\n\tMoved -fsave-sig-hash from -O3 to -O0. You need -fno-save-sig-hash\n\t  to disable it.\n        Removed -fno-stash from -O2, -fno-stash is now the default. You\n\t  need -fstash to add stashes. It caused not understood problems.\n\tFixed saving %SIG signals and more -2 SV magic (issue 92)\n\tAdjusted IO logic, was erronously skipped (issue 59)\n\tinc_cleanup: save only those %INC keys which are stored.\n\tSave ext/mro only if the ext mro methods were loaded, and\n\t  utf8_heavy.pl similarly.\n\tForce loading of -u arguments to avoid runtime loading.\n\tCall boot_core_PerlIO, mro, UNIVERSAL and xsutils.\n\tWarn on unsavable IO objects from BEGIN blocks.\n\t  Fixed >&STD... handles (issue 93),\n\t  i.e. Test::Builder, Test::NoWarnings and parts of the core testing.\n\t  See http://blogs.perl.org/users/rurban/2012/01/what-to-avoid-in-begin-blocks.html\n\tAdd B::COP::stashflags workaround, >5.15.4 threaded.\n\tAdd fix for lost PL_regex_pad, 5.15 threaded.\n",
          "style" => "*",
          "text" => "C: save stashes optionally with -fstash, but only values which are also stashes to avoid a second walker besides savecv, and thus do not walk into unneeded territory; B::STASHGV (46, issue 79) New -fno-stash with -O2 to omit stashes which are rarely needed. Fixed vulnerability to oCERT-2011-003 style DOS attacks. Do not pre-compute hashes for hv_store(), use fresh random hash seed. But shared_hek() has a limited API which does not allow this. UNIVERSAL methods were not correctly stored, which led to method not found at run-time errors. New debug option -Dr \"runtime\" to add debug output to the .c code (as in CC) New option -Upackage to skip package, mark_skip() Re-implemented sharepvn via share_hek() and SvLEN=0 (issue 71), Special FAKE+READONLY handling: LEN = 0 if pv_copy_on_grow or shared_hek. Fixed !SvIsCOW_shared_hash + FAKE+READONLY conflict (test 13, issue 82). Shared COW hashkeys which are optimized to static const strings may not be marked as IsCOW (remove SVf_FAKE). Re-implemented CORE share_hek with hash=0 Otherwise shared HEK's (post-5.10) come up with duplicate entries for the same keys; one compile-time created and one run-time created with a different random hash seed. E.g. observed by such warnings \"Prototype mismatch: sub bytes::length (_) vs (_)\" Added Internals::hv_clear_placeholders XS name exception, similar to version:: (issue 83) Store CV prototypes, issue 81 and issue 84 for empty () vs NULL prototypes. Fixed 5.15.2 hang at hfree_next_entry (issue 78) Defer writing of READONLY hash keys since 5.15 (issue 88) Enable -fcog copy-on-grow with static strings for >= 5.10 Improved Errno vs. *main::! and Tie::Hash::NamedCapture vs *main::+  / - logic (issue 90) Updated version XS methods, default to noop for (... Strip version object overload from XS packages (issue 91), XS needs plain PVs Do not initialize CONSTSUB XS methods twice, boot does it for us Pass proper cv to XS boot_\$name, fixes boot of Tie::Hash::NamedCapture (issue 86) Fixed share_hek strings with -O1 (test 13) Fixed bootstrapping the XS/core part of attributes, thereby fixed threads tests 41-43. Fixed most 5.8.[45] problems by ignoring aelemfast SPECIAL pads. Fixed magic -> PTR when SV (>5.6) Moved -fsave-sig-hash from -O3 to -O0. You need -fno-save-sig-hash to disable it. Removed -fno-stash from -O2, -fno-stash is now the default. You need -fstash to add stashes. It caused not understood problems. Fixed saving %SIG signals and more -2 SV magic (issue 92) Adjusted IO logic, was erronously skipped (issue 59) inc_cleanup: save only those %INC keys which are stored. Save ext/mro only if the ext mro methods were loaded, and utf8_heavy.pl similarly. Force loading of -u arguments to avoid runtime loading. Call boot_core_PerlIO, mro, UNIVERSAL and xsutils. Warn on unsavable IO objects from BEGIN blocks. Fixed >&STD... handles (issue 93), i.e. Test::Builder, Test::NoWarnings and parts of the core testing. See http://blogs.perl.org/users/rurban/2012/01/what-to-avoid-in-begin-blocks.html Add B::COP::stashflags workaround, >5.15.4 threaded. Add fix for lost PL_regex_pad, 5.15 threaded."
        },
        {
          "line" => 252,
          "raw" => "\t* CC (1.12): allow overriding of -f<opt> B::C flags.\n\tSkip internal packages with mark_skip (fixes cc_o2 tests).\n\tMove -ftype-attr from -O2 to -O1.\n\tAlways define int, double and string package versions, parallel to types.\n",
          "style" => "*",
          "text" => "CC (1.12): allow overriding of -f<opt> B::C flags. Skip internal packages with mark_skip (fixes cc_o2 tests). Move -ftype-attr from -O2 to -O1. Always define int, double and string package versions, parallel to types."
        },
        {
          "line" => 256,
          "raw" => "\t* Bytecode (1.12): detect Tie::Hash::NamedCapture (issue 90) -\n\t  works only partially.\n\tFixed >&STD... handles (issue 93)\n\tSupport -d debugging without -MOd\n",
          "style" => "*",
          "text" => "Bytecode (1.12): detect Tie::Hash::NamedCapture (issue 90) - works only partially. Fixed >&STD... handles (issue 93) Support -d debugging without -MOd"
        },
        {
          "line" => 260,
          "raw" => "\t* Stackobj (1.00_03): add UL or L to overlong integers. doubles\n\t  not yet\n",
          "style" => "*",
          "text" => "Stackobj (1.00_03): add UL or L to overlong integers. doubles not yet"
        },
        {
          "line" => 262,
          "raw" => "\t* perlcc (2.13): added options -O[1-4], -u, -U, --Wc, --Wl, --version,\n\tKeep cfile if output is empty.\n\tChange -o output C file directory and name with -S or -c:\n\t  Before in current directory, now in -o directory.\n\t  Before with input name, now with -o name.\n\tAdd -rpath for all --staticxs libs if supported.\n\tChanged verbosity levels and output wording.\n",
          "style" => "*",
          "text" => "perlcc (2.13): added options -O[1-4], -u, -U, --Wc, --Wl, --version, Keep cfile if output is empty. Change -o output C file directory and name with -S or -c: Before in current directory, now in -o directory. Before with input name, now with -o name. Add -rpath for all --staticxs libs if supported. Changed verbosity levels and output wording."
        },
        {
          "line" => 269,
          "raw" => "\t* bytecode.pl: added xio_ifp\n",
          "style" => "*",
          "text" => "bytecode.pl: added xio_ifp"
        },
        {
          "line" => 270,
          "raw" => "\t* bytecode.h: added BSET_xio_ifp\n",
          "style" => "*",
          "text" => "bytecode.h: added BSET_xio_ifp"
        },
        {
          "line" => 271,
          "raw" => "\t* META.yml: remove from MANIFEST and repo, let make dist\n\t  autogenerate it.\n",
          "style" => "*",
          "text" => "META.yml: remove from MANIFEST and repo, let make dist autogenerate it."
        },
        {
          "line" => 273,
          "raw" => "\t* t/test.pl, t/TESTS: changed test 46 (Exporter:: and other stashes in\n\t  %main:: stash) to cover issue 79.\n\t  use Exporter; print q(ok) if %main::Exporter::\n",
          "style" => "*",
          "text" => "t/test.pl, t/TESTS: changed test 46 (Exporter:: and other stashes in %main:: stash) to cover issue 79. use Exporter; print q(ok) if %main::Exporter::"
        },
        {
          "line" => 276,
          "raw" => "\t* t/test.pl: use general comments with optional TODO. Before only TODO\n",
          "style" => "*",
          "text" => "t/test.pl: use general comments with optional TODO. Before only TODO"
        },
        {
          "line" => 277,
          "raw" => "\t* t/perldoc.t: fixed for 5.8 with manually adding -uFile::Spec -uIO::Handle\n",
          "style" => "*",
          "text" => "t/perldoc.t: fixed for 5.8 with manually adding -uFile::Spec -uIO::Handle"
        },
        {
          "line" => 278,
          "raw" => "\t* t/issue59.t, t/issue81.t, t/issue90.t, t/issue93.t: added\n\n",
          "style" => "*",
          "text" => "t/issue59.t, t/issue81.t, t/issue90.t, t/issue93.t: added"
        }
      ],
      "line" => 186,
      "note" => "rurban",
      "raw" => "1.37\t2012-01-24 rurban\n",
      "raw_date" => "2012-01-24",
      "version" => "1.37"
    },
    {
      "date" => "2011-10-19",
      "entries" => [
        {
          "line" => 281,
          "raw" => "\tlexical warnings and more 5.15 fixes\n",
          "style" => "",
          "text" => "lexical warnings and more 5.15 fixes"
        },
        {
          "line" => 282,
          "raw" => "\t* C: new B::LEXWARN, fixed representation of lexical warnings which was broken\n\t  since 8e01d9a6  5.8.9/5.9.4 (issue 76)\n\tAdded section free, use it for lexical cop_warnings (const STRLEN*)\n\t  (TODO: static PV, HEK + COPs)\n\tWorkaround for utf8::SWASHNEW adjusted to 5.15\n\tPAD* sv flags changed in 5.15.3\n\tXSLoader API changed (HEK in caller i.e.): had to add a\n\t  XSLoader::load_file for [perl #101336] >= 5.15.3,\n\t  also use mXPUSH for sp instead of 1-arg targ\n\tSet SvLEN=0 for static PVs to skip sv_clear (problem with 13)\n\tHandle overlarge negative 64bit ints, double not yet.\n\tMove -fwarn-sv from -O2 to -O1\n\tMove -fsave-data from -O3 to -O2\n\tCompile *main::DATA IO handle automatically (__DATA__), just package __DATA__\n\t  handles need -fsave-data (15)\n\tDie with 5.8.4/5.8.5 threaded with split->pushre on invalid\n\t  pmreplroot. This is a core B::walkoptree bug and can not be\n\t  easily fixed.\n\tTests 15 and 103 do not hang anymore, 15 and 29 pass mostly\n",
          "style" => "*",
          "text" => "C: new B::LEXWARN, fixed representation of lexical warnings which was broken since 8e01d9a6  5.8.9/5.9.4 (issue 76) Added section free, use it for lexical cop_warnings (const STRLEN*) (TODO: static PV, HEK + COPs) Workaround for utf8::SWASHNEW adjusted to 5.15 PAD* sv flags changed in 5.15.3 XSLoader API changed (HEK in caller i.e.): had to add a XSLoader::load_file for [perl #101336] >= 5.15.3, also use mXPUSH for sp instead of 1-arg targ Set SvLEN=0 for static PVs to skip sv_clear (problem with 13) Handle overlarge negative 64bit ints, double not yet. Move -fwarn-sv from -O2 to -O1 Move -fsave-data from -O3 to -O2 Compile *main::DATA IO handle automatically (__DATA__), just package __DATA__ handles need -fsave-data (15) Die with 5.8.4/5.8.5 threaded with split->pushre on invalid pmreplroot. This is a core B::walkoptree bug and can not be easily fixed. Tests 15 and 103 do not hang anymore, 15 and 29 pass mostly"
        },
        {
          "line" => 301,
          "raw" => "\t* C.xs: added -Dts support to runloop to check internal compiler\n\t  problems\n",
          "style" => "*",
          "text" => "C.xs: added -Dts support to runloop to check internal compiler problems"
        },
        {
          "line" => 303,
          "raw" => "\t* t/issue76.t: added\n\n",
          "style" => "*",
          "text" => "t/issue76.t: added"
        }
      ],
      "line" => 280,
      "note" => "rurban",
      "raw" => "1.36\t2011-10-19 rurban\n",
      "raw_date" => "2011-10-19",
      "version" => "1.36"
    },
    {
      "date" => "2011-10-02",
      "entries" => [
        {
          "line" => 306,
          "raw" => "\ttested from 5.6.2 until 5.15.3\n",
          "style" => "",
          "text" => "tested from 5.6.2 until 5.15.3"
        },
        {
          "line" => 307,
          "raw" => "\t* C: allow debugging without -MOd=C\n\timprove package_pv detection for methods, two more tests.\n\tdetect previously missing packages within the main sourcefile\n\t  (50,35,72,73)\n\t-O1 now includes also -fav-init2 and -fppaddr, which are all\n\t  stable. -O2 string handling (-fro-inc) still unstable.\n\tadded B::REGEXP::save for \\\$qr (Encode::Alias), issue 71. Still\n\t  not fully fixed. Encode::Alias unusable.\n\tfixed empty HV assertions since 5.15, new HV default keys = 7\n\t  (3,4,36), but still unsolved 5.15 problem with endless loop in\n\t  Perl_hfree_next_entry hv.c:1716 (3,4,36)\n\tworkaround 5.15.2 inability to walk with from %INC deleted\n\t  stashes, also workaround adding already deleted DynaLoader.\n\tCORE patch [perl #100138] for new 5.15.2-5.15.3 DynaLoader XS_INTERNAL\n\t  problem required (16,29,44,45). Fixed with 5.15.4\n\t  0001-Export-DynaLoader-symbols-from-libperl-again.patch\n\tuse proper PL_envgv for *main::ENV which is inited in perl_parse\n\t  (fixes e.g. CGI apps using run-time values, not compile-time)\n",
          "style" => "*",
          "text" => "C: allow debugging without -MOd=C improve package_pv detection for methods, two more tests. detect previously missing packages within the main sourcefile (50,35,72,73) -O1 now includes also -fav-init2 and -fppaddr, which are all stable. -O2 string handling (-fro-inc) still unstable. added B::REGEXP::save for \\\$qr (Encode::Alias), issue 71. Still not fully fixed. Encode::Alias unusable. fixed empty HV assertions since 5.15, new HV default keys = 7 (3,4,36), but still unsolved 5.15 problem with endless loop in Perl_hfree_next_entry hv.c:1716 (3,4,36) workaround 5.15.2 inability to walk with from %INC deleted stashes, also workaround adding already deleted DynaLoader. CORE patch [perl #100138] for new 5.15.2-5.15.3 DynaLoader XS_INTERNAL problem required (16,29,44,45). Fixed with 5.15.4 0001-Export-DynaLoader-symbols-from-libperl-again.patch use proper PL_envgv for *main::ENV which is inited in perl_parse (fixes e.g. CGI apps using run-time values, not compile-time)"
        },
        {
          "line" => 325,
          "raw" => "\t* CC (1.11): allow debugging without -MOd=CC\n\tTry to jump from last to unknown label, put labels also onto cxstack.\n\tFixed cc_last.t test 4, jump out of anonsub, but not across C\n\t  functions yet (this is disallowed in C, need to split).\n",
          "style" => "*",
          "text" => "CC (1.11): allow debugging without -MOd=CC Try to jump from last to unknown label, put labels also onto cxstack. Fixed cc_last.t test 4, jump out of anonsub, but not across C functions yet (this is disallowed in C, need to split)."
        },
        {
          "line" => 329,
          "raw" => "\t* C.xs: added B::REGEXP::EXTFLAGS (missing from B).\n",
          "style" => "*",
          "text" => "C.xs: added B::REGEXP::EXTFLAGS (missing from B)."
        },
        {
          "line" => 330,
          "raw" => "\t* perlcc (2.12): omit also inc_version_list dirs from perlcc as\n\t  leaving them in could lead to unexpected crashes\n",
          "style" => "*",
          "text" => "perlcc (2.12): omit also inc_version_list dirs from perlcc as leaving them in could lead to unexpected crashes"
        },
        {
          "line" => 332,
          "raw" => "\t* t/cc_last.t: Fixed test 2. This works compiled and uncompiled,\n\t  but the returned errcode is not compared. Skip if so.\n",
          "style" => "*",
          "text" => "t/cc_last.t: Fixed test 2. This works compiled and uncompiled, but the returned errcode is not compared. Skip if so."
        },
        {
          "line" => 334,
          "raw" => "\t* t/TESTS: add all 5 possible method/sub calls to test 35 =>01234.\n\t  See http://blogs.perl.org/users/rurban/2011/06/how-perl-calls-subs-and-methods.html\n",
          "style" => "*",
          "text" => "t/TESTS: add all 5 possible method/sub calls to test 35 =>01234. See http://blogs.perl.org/users/rurban/2011/06/how-perl-calls-subs-and-methods.html"
        },
        {
          "line" => 336,
          "raw" => "\t* t/stash.t: fixed 5.8.8 stashes (overload, threads, ...)\n",
          "style" => "*",
          "text" => "t/stash.t: fixed 5.8.8 stashes (overload, threads, ...)"
        },
        {
          "line" => 337,
          "raw" => "\t* t/issue71.t: added, but not fixed yet\n",
          "style" => "*",
          "text" => "t/issue71.t: added, but not fixed yet"
        },
        {
          "line" => 338,
          "raw" => "\t* ramblings/*.patches: CORE patches added and recommended in README.\n",
          "style" => "*",
          "text" => "ramblings/*.patches: CORE patches added and recommended in README."
        },
        {
          "line" => 339,
          "raw" => "\t* ramblings/blogs-debugging-article[1-4].pod: added to MANIFEST.\n",
          "style" => "*",
          "text" => "ramblings/blogs-debugging-article[1-4].pod: added to MANIFEST."
        },
        {
          "line" => 340,
          "raw" => "\t* perlcompile.pod, perloptree.pod: improved.\n",
          "style" => "*",
          "text" => "perlcompile.pod, perloptree.pod: improved."
        },
        {
          "line" => 341,
          "raw" => "\t* ramblings/yapceu_2010.pod: added.\n\n",
          "style" => "*",
          "text" => "ramblings/yapceu_2010.pod: added."
        }
      ],
      "line" => 305,
      "note" => "rurban",
      "raw" => "1.35\t2011-10-02 rurban\n",
      "raw_date" => "2011-10-02",
      "version" => "1.35"
    },
    {
      "date" => "2011-06-12",
      "entries" => [
        {
          "line" => 344,
          "raw" => "\t* Makefile.PL: fixed make install < 5.13.7\n",
          "style" => "*",
          "text" => "Makefile.PL: fixed make install < 5.13.7"
        },
        {
          "line" => 345,
          "raw" => "\t* issue24.t, test.pl, bytecode.t: TODO more failing tests from cpantesters\n\n",
          "style" => "*",
          "text" => "issue24.t, test.pl, bytecode.t: TODO more failing tests from cpantesters"
        }
      ],
      "line" => 343,
      "note" => "rurban",
      "raw" => "1.34\t2011-06-12 rurban\n",
      "raw_date" => "2011-06-12",
      "version" => "1.34"
    },
    {
      "date" => "2011-06-12",
      "entries" => [
        {
          "line" => 348,
          "raw" => "\t* Makefile.PL: fixed make install > 5.13.7\n",
          "style" => "*",
          "text" => "Makefile.PL: fixed make install > 5.13.7"
        },
        {
          "line" => 349,
          "raw" => "\t* test.pl, bytecode.t: TODO more failing tests from cpantesters\n",
          "style" => "*",
          "text" => "test.pl, bytecode.t: TODO more failing tests from cpantesters"
        },
        {
          "line" => 350,
          "raw" => "\t* stash.t: fixed freebsd test 4\n\n",
          "style" => "*",
          "text" => "stash.t: fixed freebsd test 4"
        }
      ],
      "line" => 347,
      "note" => "rurban",
      "raw" => "1.33\t2011-06-12 rurban\n",
      "raw_date" => "2011-06-12",
      "version" => "1.33"
    },
    {
      "date" => "2011-06-10",
      "entries" => [
        {
          "line" => 353,
          "raw" => "        more darwin and package scan fixes, Bytecode -i includeall.\n",
          "style" => "",
          "text" => "more darwin and package scan fixes, Bytecode -i includeall."
        },
        {
          "line" => 354,
          "raw" => "\tall top100 modules can be now be compiled on most perls\n\n",
          "style" => "",
          "text" => "all top100 modules can be now be compiled on most perls"
        },
        {
          "line" => 356,
          "raw" => "\t* Bytecode.pm (1.11): fixed const xsub xsubany ptr >=5.10 <5.14 (27).\n\tsave_cq => save_begin+save_init_end: moved push_begin upfront for the same\n\t  init order (44).\n\tadd CVf_CVGV_RC flag (refcount) on CV with no backref magic, e.g. END (48)\n\tadded option -i includeall which adds no BEGIN require ops, but adds\n\t  all included symbols.\n\tbetter BEGIN block \@INC manipulation detection (33)\n\tprint newsvx flags if -S or Comment\n\tprint hex IV < 8 as int with -S\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.11): fixed const xsub xsubany ptr >=5.10 <5.14 (27). save_cq => save_begin+save_init_end: moved push_begin upfront for the same init order (44). add CVf_CVGV_RC flag (refcount) on CV with no backref magic, e.g. END (48) added option -i includeall which adds no BEGIN require ops, but adds all included symbols. better BEGIN block \@INC manipulation detection (33) print newsvx flags if -S or Comment print hex IV < 8 as int with -S"
        },
        {
          "line" => 365,
          "raw" => "\t* C.pm (1.32): check PERL_TRACK_MEMPOOL for AV malloc (25).\n\tfixed init chunk splitting for CV and -fav-init2, if >10000 lines.\n\tfixed overlarge AvFILL=3 of endav. Undefined subroutine &main:: (48)\n\tfixed shared GPs on typeglob assignment. do not gp_free shared GPs,\n\t  just set them once.\n\tadded try_isa before try_autoload. use mro::get_linear_isa instead of \@ISA\n\tmark_package force: detect and fix already discarded packages which\n\t  are brought back in directly or by someone else's \@ISA. (e.g. Sub::Name\n\t  needs DynaLoader::dl_load_flags)\n\timproved method_named package search, still not exact though (LWP)\n\tadd manually compiled packages to %INC to avoid a runtime require\n\tspecial case Config detection, AUTOLOAD = launcher, included by Dynaloader\n\tadded -Ds to print all sub names\n\tdo not compile any B::C subs, esp. our %SIG handler\n\tadd our own Internals::V as it is not exported by libperl\n\tinc the REFCNT of stashes (Path::Class)\n",
          "style" => "*",
          "text" => "C.pm (1.32): check PERL_TRACK_MEMPOOL for AV malloc (25). fixed init chunk splitting for CV and -fav-init2, if >10000 lines. fixed overlarge AvFILL=3 of endav. Undefined subroutine &main:: (48) fixed shared GPs on typeglob assignment. do not gp_free shared GPs, just set them once. added try_isa before try_autoload. use mro::get_linear_isa instead of \@ISA mark_package force: detect and fix already discarded packages which are brought back in directly or by someone else's \@ISA. (e.g. Sub::Name needs DynaLoader::dl_load_flags) improved method_named package search, still not exact though (LWP) add manually compiled packages to %INC to avoid a runtime require special case Config detection, AUTOLOAD = launcher, included by Dynaloader added -Ds to print all sub names do not compile any B::C subs, esp. our %SIG handler add our own Internals::V as it is not exported by libperl inc the REFCNT of stashes (Path::Class)"
        },
        {
          "line" => 381,
          "raw" => "\t* Assembler.pm (1.10): archflag bit 2 for MULTPLICITY\n",
          "style" => "*",
          "text" => "Assembler.pm (1.10): archflag bit 2 for MULTPLICITY"
        },
        {
          "line" => 382,
          "raw" => "\t* Disassembler.pm (1.10): archflag bit 2 for MULTPLICITY\n\tuse longsize resp. ivsize from .plc not from perl\n\tprint newsvx flags\n\tprint hex IV < 8 as int\n",
          "style" => "*",
          "text" => "Disassembler.pm (1.10): archflag bit 2 for MULTPLICITY use longsize resp. ivsize from .plc not from perl print newsvx flags print hex IV < 8 as int"
        },
        {
          "line" => 386,
          "raw" => "\t* ByteLoader (0.08): support archflag 2 MULTPLICITY,\n\t[perl #86186] force binary IO for __DATA__ handles, which changed\n\t  in core with 5.14\n",
          "style" => "*",
          "text" => "ByteLoader (0.08): support archflag 2 MULTPLICITY, [perl #86186] force binary IO for __DATA__ handles, which changed in core with 5.14"
        },
        {
          "line" => 389,
          "raw" => "\t* bytecode.pl: support m for MULTIPLICITY (yet unused)\n",
          "style" => "*",
          "text" => "bytecode.pl: support m for MULTIPLICITY (yet unused)"
        },
        {
          "line" => 390,
          "raw" => "\t* Makefile.PL: move cc_runtime.h installation to make install step\n\t  (sudo). Tested ok on darwin gcc, does use -I. internally.\n",
          "style" => "*",
          "text" => "Makefile.PL: move cc_runtime.h installation to make install step (sudo). Tested ok on darwin gcc, does use -I. internally."
        },
        {
          "line" => 392,
          "raw" => "\t* cc_runtime.h: renamed from cc_runtime514.h\n",
          "style" => "*",
          "text" => "cc_runtime.h: renamed from cc_runtime514.h"
        },
        {
          "line" => 393,
          "raw" => "\t* cc_harness: fixed darwin coredir\n",
          "style" => "*",
          "text" => "cc_harness: fixed darwin coredir"
        },
        {
          "line" => 394,
          "raw" => "\t* perlcc (2.11): fixed darwin coredir.\n\tomit darwin linking to dynamic .bundle - generate .a via libtool\n",
          "style" => "*",
          "text" => "perlcc (2.11): fixed darwin coredir. omit darwin linking to dynamic .bundle - generate .a via libtool"
        },
        {
          "line" => 396,
          "raw" => "\t* TESTS: removed END block from test 28, only test run-time require (fixed 28)\n\tadded 48 for previous test 28 END block lexvar del_backref failure\n\tadded 49 for m//i blowup and -fno-fold testing\n\tadded 50 empty \@ISA issue 64\n",
          "style" => "*",
          "text" => "TESTS: removed END block from test 28, only test run-time require (fixed 28) added 48 for previous test 28 END block lexvar del_backref failure added 49 for m//i blowup and -fno-fold testing added 50 empty \@ISA issue 64"
        },
        {
          "line" => 400,
          "raw" => "\t* assembler.t: fix for hex->int IV roundtrips\n\n",
          "style" => "*",
          "text" => "assembler.t: fix for hex->int IV roundtrips"
        }
      ],
      "line" => 352,
      "note" => "rurban",
      "raw" => "1.32\t2011-06-10 rurban\n",
      "raw_date" => "2011-06-10",
      "version" => "1.32"
    },
    {
      "date" => "2011-03-21",
      "entries" => [
        {
          "line" => 403,
          "raw" => "\tmultiplicity support and more darwin fixes\n\n",
          "style" => "",
          "text" => "multiplicity support and more darwin fixes"
        },
        {
          "line" => 405,
          "raw" => "\t* C.pm (1.31): replace \$ITHREADS by \$MULTI (darwin),\n\tmy_perl_destruct: disable CopFILE_set NULL and CopSTASHPV_set NULL\n        on \$MULTI, PL_sv_yes|no special on MULTI\n",
          "style" => "*",
          "text" => "C.pm (1.31): replace \$ITHREADS by \$MULTI (darwin), my_perl_destruct: disable CopFILE_set NULL and CopSTASHPV_set NULL on \$MULTI, PL_sv_yes|no special on MULTI"
        },
        {
          "line" => 408,
          "raw" => "\t* CC.pm (1.10): replace \$ITHREADS by \$MULTI (darwin)\n",
          "style" => "*",
          "text" => "CC.pm (1.10): replace \$ITHREADS by \$MULTI (darwin)"
        },
        {
          "line" => 409,
          "raw" => "\t* t/test.pl, issue34.t, issue35.t: -ofile => -o file (darwin cc)\n",
          "style" => "*",
          "text" => "t/test.pl, issue34.t, issue35.t: -ofile => -o file (darwin cc)"
        },
        {
          "line" => 410,
          "raw" => "        * cc_harness: -Wl,--warn-once invalid on darwin gcc\n",
          "style" => "*",
          "text" => "cc_harness: -Wl,--warn-once invalid on darwin gcc"
        },
        {
          "line" => 411,
          "raw" => "        * log.modules: encode MULTI without threads as -m\n\n",
          "style" => "*",
          "text" => "log.modules: encode MULTI without threads as -m"
        }
      ],
      "line" => 402,
      "note" => "rurban",
      "raw" => "1.31\t2011-03-21 rurban\n",
      "raw_date" => "2011-03-21",
      "version" => "1.31"
    },
    {
      "date" => "2011-03-06",
      "entries" => [
        {
          "line" => 414,
          "raw" => "\tdbmopen, cc_runtime.h, perlcc, --staticxs\n\n",
          "style" => "",
          "text" => "dbmopen, cc_runtime.h, perlcc, --staticxs"
        },
        {
          "line" => 416,
          "raw" => "\t* C.pm (1.30): support dbmopen, fixes issue 24.\n\tfixed xpvmgsect (was xpvsect) !-fcog < 5.10 (YAML, test 41,42,43).\n\tfixed m//i since 5.13.10: swash_init(\"utf8::Cased\").\n\tfixed method_common package_pv detection in most cases.\n\t  still two cases open, without tests. PADOP GV NULL 0x20000, GV RV 0x40802.\n\tfixed method_named with >= 1 arg, checking for const PV package_pv (test 35)\n\tsupport GvCV_set and GvGP_set introduced with 5.13.10. [RT#65630]\n\timplement -staticxs for perlcc --staticxs\n\t  either link to found static libs or link to shared lib with\n\t  fixed LD_LIBRARY_PATH/PATH (nyi in C, just perlcc).\n\toptimize -fav-init use_av_undef_speedup &PL_sv_undef initialization (again).\n\treserved -mPackagename (NYI)\n\tadded verbose(),module() for CC.\n\timplement outline of -m module, name detection missing.\n\tadded -fno-fold recommended since 5.13.9 to omit the huge utf8 tables.\n\tadded -fno-warnings, recommended since 5.13.5.\n\tadded special workaround for Scalar::Util bootstrapping which did not detect\n\t  List::Util, since it is not in its ISA, only required. need a better scan.\n\t  fixes test 44.\n\tinit XS within Od.\n\tprevent autoloaded STDERR printing on non-debugging perls (e.g. \"Storablelogcarp\").\n",
          "style" => "*",
          "text" => "C.pm (1.30): support dbmopen, fixes issue 24. fixed xpvmgsect (was xpvsect) !-fcog < 5.10 (YAML, test 41,42,43). fixed m//i since 5.13.10: swash_init(\"utf8::Cased\"). fixed method_common package_pv detection in most cases. still two cases open, without tests. PADOP GV NULL 0x20000, GV RV 0x40802. fixed method_named with >= 1 arg, checking for const PV package_pv (test 35) support GvCV_set and GvGP_set introduced with 5.13.10. [RT#65630] implement -staticxs for perlcc --staticxs either link to found static libs or link to shared lib with fixed LD_LIBRARY_PATH/PATH (nyi in C, just perlcc). optimize -fav-init use_av_undef_speedup &PL_sv_undef initialization (again). reserved -mPackagename (NYI) added verbose(),module() for CC. implement outline of -m module, name detection missing. added -fno-fold recommended since 5.13.9 to omit the huge utf8 tables. added -fno-warnings, recommended since 5.13.5. added special workaround for Scalar::Util bootstrapping which did not detect List::Util, since it is not in its ISA, only required. need a better scan. fixes test 44. init XS within Od. prevent autoloaded STDERR printing on non-debugging perls (e.g. \"Storablelogcarp\")."
        },
        {
          "line" => 437,
          "raw" => "\t* CC.pm (1.09): support dbmopen, issue 24 failing due to XSLoader (test 45)\n\tno pp_name shortnames in embed.h since 5.13.9, use Perl_pp_name(aTHX).\n\timplemented dorassign, fixes issue 45.\n\tfixed XSLoader detection, moved use_xsloader to save_unused_subs()\n\tskip duplicate cc(pp_sub_*) functions (freebsd 45)\n\tadded missing END block code (test 28).\n\tadded B::C::verbose on -v\n\t  fixed B::C::verbose crash by adding B::FAKEOP::fake_ppaddr.\n\t  fixed compile_stats\n\trenamed -n module_name to init_name.\n\tcheck and set -f options from C also.\n\timplement outline of -m module, name detection missing.\n\tadded option -fno-name-magic.\n\tadded experimental option -ftype-attr.\n\tadded TYPES pod section.\n\tadded pod for some funcs: load_pad, cc_queue, label.\n\toption -strict only used with DEBUGGING perls.\n\tbe less chatty with compiling bblocks.\n\tlight layout cleanup of generated code sections.\n\tadded Vishal Bhatia <vishal at deja.com> to AUTHORS.\n",
          "style" => "*",
          "text" => "CC.pm (1.09): support dbmopen, issue 24 failing due to XSLoader (test 45) no pp_name shortnames in embed.h since 5.13.9, use Perl_pp_name(aTHX). implemented dorassign, fixes issue 45. fixed XSLoader detection, moved use_xsloader to save_unused_subs() skip duplicate cc(pp_sub_*) functions (freebsd 45) added missing END block code (test 28). added B::C::verbose on -v fixed B::C::verbose crash by adding B::FAKEOP::fake_ppaddr. fixed compile_stats renamed -n module_name to init_name. check and set -f options from C also. implement outline of -m module, name detection missing. added option -fno-name-magic. added experimental option -ftype-attr. added TYPES pod section. added pod for some funcs: load_pad, cc_queue, label. option -strict only used with DEBUGGING perls. be less chatty with compiling bblocks. light layout cleanup of generated code sections. added Vishal Bhatia <vishal at deja.com> to AUTHORS."
        },
        {
          "line" => 457,
          "raw" => "\t* Bytecode.pm (1.10): support dbmopen, fixes issue 24.\n\tre-added -m, compile as module to .pmc\n\tstore AV elems for non-tied AV->MAGICAL >5.6 (i.e. \@ISA, ...) (new test 47).\n\t-DA: limcheck PV.\n\tverbosity: added nice1 (condense elements).\n\t  name SV indices also.\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.10): support dbmopen, fixes issue 24. re-added -m, compile as module to .pmc store AV elems for non-tied AV->MAGICAL >5.6 (i.e. \@ISA, ...) (new test 47). -DA: limcheck PV. verbosity: added nice1 (condense elements). name SV indices also."
        },
        {
          "line" => 463,
          "raw" => "\t* Byteloader: support GvCV_set introduced with 5.13.10 [RT#65630]\n",
          "style" => "*",
          "text" => "Byteloader: support GvCV_set introduced with 5.13.10 [RT#65630]"
        },
        {
          "line" => 464,
          "raw" => "\t* perlcc (2.10): fixed -B -r, -B output and run bytecode.\n\timplement --staticxs to workaround DynaLoader problems. use it in t/modules.t\n\t  add sopath to PATH on -r. Without -r the sofile should be symlinked so that the\n\t  process can find it.\n\timplement --shared and --static, --shared fails on strawberry due to core problems.\n\timplemented getopts bundling: -ScO -e'bla' -v4 -oa is now possible.\n\tdisabled some old single-minus switches: -testsuite, -time, -log, ...\n\t  requires now double-minus --testsuite, --time, --log, ...\n\t  kept legacy handling only for -Wb=.. and -stash.\n\tfixed -B -e'oneliner'.\n\tfixed -B \@ARGV, no duplication of \@ARGV, c_argv.t 3.\n\tre-added -m|--sharedlib for Bytecode and C (NYI).\n\tprint C and CC filtered compiler output.\n\t-v5 adds -v to the compiler options.\n\t-v6 adds -Dfull to the compiler options.\n\tsupport -Wb= for -B.\n\tfixed -Br for 5.6: add -MByteLoader.\n",
          "style" => "*",
          "text" => "perlcc (2.10): fixed -B -r, -B output and run bytecode. implement --staticxs to workaround DynaLoader problems. use it in t/modules.t add sopath to PATH on -r. Without -r the sofile should be symlinked so that the process can find it. implement --shared and --static, --shared fails on strawberry due to core problems. implemented getopts bundling: -ScO -e'bla' -v4 -oa is now possible. disabled some old single-minus switches: -testsuite, -time, -log, ... requires now double-minus --testsuite, --time, --log, ... kept legacy handling only for -Wb=.. and -stash. fixed -B -e'oneliner'. fixed -B \@ARGV, no duplication of \@ARGV, c_argv.t 3. re-added -m|--sharedlib for Bytecode and C (NYI). print C and CC filtered compiler output. -v5 adds -v to the compiler options. -v6 adds -Dfull to the compiler options. support -Wb= for -B. fixed -Br for 5.6: add -MByteLoader."
        },
        {
          "line" => 481,
          "raw" => "\t* Stash (1.01): add option xs to print xs modules with -x prefix.\n\tusable via -MO=Stash also.\n\tnew option -D for debugging.\n\tomit PerlIO::Layer.\n\tadded pod\n",
          "style" => "*",
          "text" => "Stash (1.01): add option xs to print xs modules with -x prefix. usable via -MO=Stash also. new option -D for debugging. omit PerlIO::Layer. added pod"
        },
        {
          "line" => 486,
          "raw" => "\t* Disassembler (1.08): 5.6: fix ldop comments.\n\tadd op_type names, add \@svnames, add indices, add ldspecsvx type.\n",
          "style" => "*",
          "text" => "Disassembler (1.08): 5.6: fix ldop comments. add op_type names, add \@svnames, add indices, add ldspecsvx type."
        },
        {
          "line" => 488,
          "raw" => "\t* Assembler (0.10): print more flags (as hex) and indices.\n\tbetter limcheck diagnostics (op,sv,pv).\n",
          "style" => "*",
          "text" => "Assembler (0.10): print more flags (as hex) and indices. better limcheck diagnostics (op,sv,pv)."
        },
        {
          "line" => 490,
          "raw" => "\t* cc_runtime514.h: removed from CORE with 5.13.9. [RT#65628]\n\t  If so, cp it back. You might need sudo cp. (unchecked)\n\t  Renamed not to pollute tests with older perls.\n\t  Expanded PERL_MAGIC_taint 't' for 5.6.\n",
          "style" => "*",
          "text" => "cc_runtime514.h: removed from CORE with 5.13.9. [RT#65628] If so, cp it back. You might need sudo cp. (unchecked) Renamed not to pollute tests with older perls. Expanded PERL_MAGIC_taint 't' for 5.6."
        },
        {
          "line" => 494,
          "raw" => "\t* C.xs: added experimental method_cv for the hash-only case, untested.\n",
          "style" => "*",
          "text" => "C.xs: added experimental method_cv for the hash-only case, untested."
        },
        {
          "line" => 495,
          "raw" => "\t* t/modules.t: try --staticxs first, try crosscheck without perlcc.\n",
          "style" => "*",
          "text" => "t/modules.t: try --staticxs first, try crosscheck without perlcc."
        },
        {
          "line" => 496,
          "raw" => "\t* t/issue24.t: added.\n",
          "style" => "*",
          "text" => "t/issue24.t: added."
        },
        {
          "line" => 497,
          "raw" => "\t* t/issue45.t: fixed and added 3 more tests.\n",
          "style" => "*",
          "text" => "t/issue45.t: fixed and added 3 more tests."
        },
        {
          "line" => 498,
          "raw" => "\t* t/e_perlcc.t: added to test the new option handling.\n",
          "style" => "*",
          "text" => "t/e_perlcc.t: added to test the new option handling."
        },
        {
          "line" => 499,
          "raw" => "\t* t/testc.sh, t/TESTS: fixed wrong test 39 for 5.8, added 47, 104 (reset), 105 (type-attr).\n",
          "style" => "*",
          "text" => "t/testc.sh, t/TESTS: fixed wrong test 39 for 5.8, added 47, 104 (reset), 105 (type-attr)."
        },
        {
          "line" => 500,
          "raw" => "\t* t/testplc.sh: added 47.\n",
          "style" => "*",
          "text" => "t/testplc.sh: added 47."
        },
        {
          "line" => 501,
          "raw" => "\t* t/stash.t: rewritten. allow 5.6, use Test::More, more stable\n",
          "style" => "*",
          "text" => "t/stash.t: rewritten. allow 5.6, use Test::More, more stable"
        },
        {
          "line" => 502,
          "raw" => "\t* t/todomod.pl: added. interactive tool to check log.modules reports and fix TODOs\n",
          "style" => "*",
          "text" => "t/todomod.pl: added. interactive tool to check log.modules reports and fix TODOs"
        },
        {
          "line" => 503,
          "raw" => "\t* status_upd: recommend and fix ./status_upd -f -q -d\n\t  -q -d prints only the actual tests\n",
          "style" => "*",
          "text" => "status_upd: recommend and fix ./status_upd -f -q -d -q -d prints only the actual tests"
        },
        {
          "line" => 505,
          "raw" => "\t* Changes: added more missing history ca. 1997-2000.\n\n",
          "style" => "*",
          "text" => "Changes: added more missing history ca. 1997-2000."
        }
      ],
      "line" => 413,
      "note" => "rurban",
      "raw" => "1.30\t2011-03-06 rurban\n",
      "raw_date" => "2011-03-06",
      "version" => "1.30"
    },
    {
      "date" => "2011-01-08",
      "entries" => [
        {
          "line" => 508,
          "raw" => "\timprove dl_init\n\n",
          "style" => "",
          "text" => "improve dl_init"
        },
        {
          "line" => 510,
          "raw" => "\t* C.pm (1.29):\n\tuse DynaLoader::bootstrap_inherit, fixes dl_init when the module has no ISA\n\t  DynaLoader. eg. Test::Harness with Time::HiRes\n\timproved CopFILE detection as context for dl_init (test 29)\n\tfix cop_warning cast warnings\n\tprint debug messages for beginav and endav\n\tprotect against undefined strings, and % in regex\n\tprotect against undefined gvcv->GV->EGV (Spiffy)\n\tlatefree r-magic regex strings >5.10, fixes a couple of modules\n",
          "style" => "*",
          "text" => "C.pm (1.29): use DynaLoader::bootstrap_inherit, fixes dl_init when the module has no ISA DynaLoader. eg. Test::Harness with Time::HiRes improved CopFILE detection as context for dl_init (test 29) fix cop_warning cast warnings print debug messages for beginav and endav protect against undefined strings, and % in regex protect against undefined gvcv->GV->EGV (Spiffy) latefree r-magic regex strings >5.10, fixes a couple of modules"
        },
        {
          "line" => 519,
          "raw" => "\t* t/modules.pm: subset use 10 not 11 modules. run tests with -O1\n\tless TODO tests, esp for 5.13\n",
          "style" => "*",
          "text" => "t/modules.pm: subset use 10 not 11 modules. run tests with -O1 less TODO tests, esp for 5.13"
        },
        {
          "line" => 521,
          "raw" => "\t* t/modules.t: fixed binary detection on non-windows (a.out)\n",
          "style" => "*",
          "text" => "t/modules.t: fixed binary detection on non-windows (a.out)"
        },
        {
          "line" => 522,
          "raw" => "\t* ByteLoader: fixed -Dt for GV\n\n",
          "style" => "*",
          "text" => "ByteLoader: fixed -Dt for GV"
        }
      ],
      "line" => 507,
      "note" => "rurban",
      "raw" => "1.29\t2011-01-08 rurban\n",
      "raw_date" => "2011-01-08",
      "version" => "1.29"
    },
    {
      "date" => "2010-12-31",
      "entries" => [
        {
          "line" => 525,
          "raw" => "\tfixed XSLoader, pmflags, CV and most named methods for 5.14\n\n",
          "style" => "",
          "text" => "fixed XSLoader, pmflags, CV and most named methods for 5.14"
        },
        {
          "line" => 527,
          "raw" => "\t* Bytecode.pm (1.09):\n\tfixed cv_gv and push_begin del_backref problem (27, ...) > 5.13\n\tspecial cased op_pmflags: U32 needed since 5.13 (PMf_BASE_SHIFT)\n\t  Fixes op_pmflags since 5.12 ((3..4,27..29,31,33), esp. pp_subst\n\tstart for Windows 5.12 cop_store_label workaround: Labels disabled for now.\n\t  Failed to include CORE hv.c: too large.\n\t  mingw\t5.12 compiles now again and passes all but 21,33,42..44\n\tFixed entrytry with Bytecode >= 5.12:\n\t  ck_eval upgrades the UNOP entertry to a LOGOP, but B gets us just a\n\t  B::OP (BASEOP)\n\tadd BEGIN { push|unshift \@INC } parts of blocks (test 33)\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.09): fixed cv_gv and push_begin del_backref problem (27, ...) > 5.13 special cased op_pmflags: U32 needed since 5.13 (PMf_BASE_SHIFT) Fixes op_pmflags since 5.12 ((3..4,27..29,31,33), esp. pp_subst start for Windows 5.12 cop_store_label workaround: Labels disabled for now. Failed to include CORE hv.c: too large. mingw\t5.12 compiles now again and passes all but 21,33,42..44 Fixed entrytry with Bytecode >= 5.12: ck_eval upgrades the UNOP entertry to a LOGOP, but B gets us just a B::OP (BASEOP) add BEGIN { push|unshift \@INC } parts of blocks (test 33)"
        },
        {
          "line" => 538,
          "raw" => "\t* Byteloader (0.07):\n\tSupport new CvSTASH_set.\n\tBasic op_pmflags U16/U32 support. No version conversion yet.\n\tBSET_gv_fetchpvn_flags: new for empty constant prototypes (fails on 64bit only)\n",
          "style" => "*",
          "text" => "Byteloader (0.07): Support new CvSTASH_set. Basic op_pmflags U16/U32 support. No version conversion yet. BSET_gv_fetchpvn_flags: new for empty constant prototypes (fails on 64bit only)"
        },
        {
          "line" => 542,
          "raw" => "\t* C.pm: add -fno-destruct (with -O3) with a minimal perl_destruct,\n\t  (re-enables -fcog >= 5.10),\n\tadd -fro-inc (with -O2) readonly INC and curpad strings,\n\tadd -fconst-strings (with -O3) const readonly strings\n\t  and const more other fixed strings,\n\tdo not boot static core packages (utf8, re, ...),\n\tfixed -O2/-fav-init2: store at wrong avchunk index,\n\tinitialise CopFILE and CopSTASHPV static with ITHREADS\n\timproved 5.13 method_named package detection (first and pmreplroot),\n\t  in endav still failing (Test::Deep)\n\tfixed overwritten CvSTART for 5.13.x\n\tdo not cog/const nullify vars in END blocks\n\tdisallow CONST->op_first with CONST_BARE. fixes ExtUtils::Install\n\tbetter XSLoader::load detection: aliases and defined in END blocks\n\tsave XSLoader::load GV (test 46 and modules)\n\tbootstrap also static core packages\n\tadd ptr_undef instead of NULL initialization non-threaded\n\tfix many cast warnings\n\tfix AV fill +1\n\trequired to run C.xs runloop to find PMOPs for QRs\n\tFixed entrytry >= 5.12 as in Bytecode:\n\t  ck_eval upgrades the UNOP entertry to a LOGOP,\n\t  but B gets us just a B::OP (BASEOP)\n\tFixed XSLoader, loading dynamic modules works now (test 45),\n\t  had to set the .pm path in the calling context.\n",
          "style" => "*",
          "text" => "C.pm: add -fno-destruct (with -O3) with a minimal perl_destruct, (re-enables -fcog >= 5.10), add -fro-inc (with -O2) readonly INC and curpad strings, add -fconst-strings (with -O3) const readonly strings and const more other fixed strings, do not boot static core packages (utf8, re, ...), fixed -O2/-fav-init2: store at wrong avchunk index, initialise CopFILE and CopSTASHPV static with ITHREADS improved 5.13 method_named package detection (first and pmreplroot), in endav still failing (Test::Deep) fixed overwritten CvSTART for 5.13.x do not cog/const nullify vars in END blocks disallow CONST->op_first with CONST_BARE. fixes ExtUtils::Install better XSLoader::load detection: aliases and defined in END blocks save XSLoader::load GV (test 46 and modules) bootstrap also static core packages add ptr_undef instead of NULL initialization non-threaded fix many cast warnings fix AV fill +1 required to run C.xs runloop to find PMOPs for QRs Fixed entrytry >= 5.12 as in Bytecode: ck_eval upgrades the UNOP entertry to a LOGOP, but B gets us just a B::OP (BASEOP) Fixed XSLoader, loading dynamic modules works now (test 45), had to set the .pm path in the calling context."
        },
        {
          "line" => 567,
          "raw" => "\t* CC.pm (1.08): many fixes\n\tuse new B::C optimizations, new -DF\n\tfixed issue 31 also run C.xs runloop to find PMOPs for QRs,\n\tfixed issue 35 same variable name in different scope (Heinz Knutzen),\n\tfixed issue 36 panic: leaveloop, no cxstack (Heinz Knutzen)\n\tfixed issue 37 orassign (Heinz Knutzen)\n\tfixed issue 38 on and/or return value not just no/yes (Heinz Knutzen)\n\tfixed issue 39 Bizarre copy of ARRAY in leavesub (Heinz Knutzen)\n\tfixed issue 42 remove enter/leave from %no_stack (Heinz Knutzen)\n\tfixed issue 44 aelemfast missing for lexicals (Heinz Knutzen)\n\tfixed issue 47 anonsub in while (Heinz Knutzen)\n\tfixed issue 48 wrong truth value for array assignment in boolean\n\t  context (Heinz Knutzen)\n\tfixed issue 49 Can't \"last\" outside a loop block (Heinz Knutzen)\n\tfixed issue 51 errors on nested if statement with test on multiple variables\n\t   (Heinz Knutzen)\n\tfixed issue 52 errors on variable with numeric value used in second\n\t  expression of 'and' (Heinz Knutzen)\n\tadd labels for alternate ops (e.g. run-time jumps). Not sure yet if the\n\t  full alternate subtrees are saved. fixes test 32 (push_label, pop_label),\n\t  issue 46. resolve duplicate such labels.\n\thonor \$ENV{'PERLMODS'} (by cPanel)\n",
          "style" => "*",
          "text" => "CC.pm (1.08): many fixes use new B::C optimizations, new -DF fixed issue 31 also run C.xs runloop to find PMOPs for QRs, fixed issue 35 same variable name in different scope (Heinz Knutzen), fixed issue 36 panic: leaveloop, no cxstack (Heinz Knutzen) fixed issue 37 orassign (Heinz Knutzen) fixed issue 38 on and/or return value not just no/yes (Heinz Knutzen) fixed issue 39 Bizarre copy of ARRAY in leavesub (Heinz Knutzen) fixed issue 42 remove enter/leave from %no_stack (Heinz Knutzen) fixed issue 44 aelemfast missing for lexicals (Heinz Knutzen) fixed issue 47 anonsub in while (Heinz Knutzen) fixed issue 48 wrong truth value for array assignment in boolean context (Heinz Knutzen) fixed issue 49 Can't \"last\" outside a loop block (Heinz Knutzen) fixed issue 51 errors on nested if statement with test on multiple variables (Heinz Knutzen) fixed issue 52 errors on variable with numeric value used in second expression of 'and' (Heinz Knutzen) add labels for alternate ops (e.g. run-time jumps). Not sure yet if the full alternate subtrees are saved. fixes test 32 (push_label, pop_label), issue 46. resolve duplicate such labels. honor \$ENV{'PERLMODS'} (by cPanel)"
        },
        {
          "line" => 589,
          "raw" => "\t* Disassembler.pm (1.07): read over #! + use Bytecode .plc header.\n\tsupport pmflags\n",
          "style" => "*",
          "text" => "Disassembler.pm (1.07): read over #! + use Bytecode .plc header. support pmflags"
        },
        {
          "line" => 591,
          "raw" => "\t* Assembler.pm (1.09): support pmflags\n",
          "style" => "*",
          "text" => "Assembler.pm (1.09): support pmflags"
        },
        {
          "line" => 592,
          "raw" => "\t* perlcc (2.09): added cc time for --time.\n\tsame INC as in caller - omit duplicates\n",
          "style" => "*",
          "text" => "perlcc (2.09): added cc time for --time. same INC as in caller - omit duplicates"
        },
        {
          "line" => 594,
          "raw" => "\t* cc_harness: improve -Bstatic\n",
          "style" => "*",
          "text" => "cc_harness: improve -Bstatic"
        },
        {
          "line" => 595,
          "raw" => "\t* t/testc.sh: simplified. Fixed various wrong tests\n",
          "style" => "*",
          "text" => "t/testc.sh: simplified. Fixed various wrong tests"
        },
        {
          "line" => 596,
          "raw" => "\t* t/testm.sh: fixed UAC issues on Win7\n",
          "style" => "*",
          "text" => "t/testm.sh: fixed UAC issues on Win7"
        },
        {
          "line" => 597,
          "raw" => "\t* t/test.pl: new faster test functions for the new issues\n",
          "style" => "*",
          "text" => "t/test.pl: new faster test functions for the new issues"
        },
        {
          "line" => 598,
          "raw" => "\t* t/issue27.t: added (Reported by alexchorny, Apr 25, 2010)\n",
          "style" => "*",
          "text" => "t/issue27.t: added (Reported by alexchorny, Apr 25, 2010)"
        },
        {
          "line" => 599,
          "raw" => "\t* t/issue29.t: added (Reported by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue29.t: added (Reported by Heinz Knutzen)"
        },
        {
          "line" => 600,
          "raw" => "\t* t/issue31.t: added (Reported by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue31.t: added (Reported by Heinz Knutzen)"
        },
        {
          "line" => 601,
          "raw" => "\t* t/issue34.t: added (Reported by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue34.t: added (Reported by Heinz Knutzen)"
        },
        {
          "line" => 602,
          "raw" => "\t* t/issue35.t: added (Reported and partially fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue35.t: added (Reported and partially fixed by Heinz Knutzen)"
        },
        {
          "line" => 603,
          "raw" => "\t* t/issue36.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue36.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 604,
          "raw" => "\t* t/issue37.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue37.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 605,
          "raw" => "\t* t/issue38.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue38.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 606,
          "raw" => "\t* t/issue39.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue39.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 607,
          "raw" => "\t* t/issue42.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue42.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 608,
          "raw" => "\t* t/issue44.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue44.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 609,
          "raw" => "\t* t/issue45.t: added (Reported by Heinz Knutzen), dorassign missing\n",
          "style" => "*",
          "text" => "t/issue45.t: added (Reported by Heinz Knutzen), dorassign missing"
        },
        {
          "line" => 610,
          "raw" => "\t* t/issue46.t: added (Reported by Heinz Knutzen), fixed by r610\n",
          "style" => "*",
          "text" => "t/issue46.t: added (Reported by Heinz Knutzen), fixed by r610"
        },
        {
          "line" => 611,
          "raw" => "\t* t/issue47.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue47.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 612,
          "raw" => "\t* t/issue48.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue48.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 613,
          "raw" => "\t* t/issue49.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue49.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 614,
          "raw" => "\t* t/issue50.t: added (Reported by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue50.t: added (Reported by Heinz Knutzen)"
        },
        {
          "line" => 615,
          "raw" => "\t* t/issue51.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue51.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 616,
          "raw" => "\t* t/issue52.t: added (Reported and fixed by Heinz Knutzen)\n",
          "style" => "*",
          "text" => "t/issue52.t: added (Reported and fixed by Heinz Knutzen)"
        },
        {
          "line" => 617,
          "raw" => "\t* t/issue54.t: added and fixed\n\n",
          "style" => "*",
          "text" => "t/issue54.t: added and fixed"
        }
      ],
      "line" => 524,
      "note" => "rurban",
      "raw" => "1.28\t2010-12-31 rurban\n",
      "raw_date" => "2010-12-31",
      "version" => "1.28"
    },
    {
      "date" => "2010-07-30",
      "entries" => [
        {
          "line" => 620,
          "raw" => "\tFixed 1.26 CV regressions for 5.8 and 5.10\n\n",
          "style" => "",
          "text" => "Fixed 1.26 CV regressions for 5.8 and 5.10"
        },
        {
          "line" => 622,
          "raw" => "\t* C.pm: add -DF print stringified sv and op flags.\n\tfixed xpvio off-by-one error for 5.10 (test 29)\n\trewrote XPVCV forwards for >=5.10: (fails before)\n\t  1. only the SV is now forwarded, not the struct.\n\t  2. no duplicate SVs, the CV forward is just a link to one SV (#define CVIX)\n\tremoved wrong CVf_ANON check causing CV failures (test 9,10,12). 5.13.3 still failing\n\tfixed CV svsect for 5.8 and 5.10\n",
          "style" => "*",
          "text" => "C.pm: add -DF print stringified sv and op flags. fixed xpvio off-by-one error for 5.10 (test 29) rewrote XPVCV forwards for >=5.10: (fails before) 1. only the SV is now forwarded, not the struct. 2. no duplicate SVs, the CV forward is just a link to one SV (#define CVIX) removed wrong CVf_ANON check causing CV failures (test 9,10,12). 5.13.3 still failing fixed CV svsect for 5.8 and 5.10"
        },
        {
          "line" => 629,
          "raw" => "\t* Bytecode.pm (1.08): removed wrong CVf_ANON check causing CV failures (test 9,10,12,...)\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.08): removed wrong CVf_ANON check causing CV failures (test 9,10,12,...)"
        },
        {
          "line" => 630,
          "raw" => "\t* perlcc (2.08): added --time, support vprint -1\n",
          "style" => "*",
          "text" => "perlcc (2.08): added --time, support vprint -1"
        },
        {
          "line" => 631,
          "raw" => "\t* t/test.pl, t/bytecode.t: double check failing tests if it works uncompiled\n",
          "style" => "*",
          "text" => "t/test.pl, t/bytecode.t: double check failing tests if it works uncompiled"
        },
        {
          "line" => 632,
          "raw" => "\t* t/testc.sh: add -D- for no gcc warnings\n\tadded -f for testing single optimizations\n",
          "style" => "*",
          "text" => "t/testc.sh: add -D- for no gcc warnings added -f for testing single optimizations"
        },
        {
          "line" => 634,
          "raw" => "\t* t/testm.sh: add -D<args> flags for compiler debugging and link with -g\n\tadded -T for perlcc --time\n",
          "style" => "*",
          "text" => "t/testm.sh: add -D<args> flags for compiler debugging and link with -g added -T for perlcc --time"
        },
        {
          "line" => 636,
          "raw" => "\t* t/c_argv.t, script/perlcc: properly quote spaces in path of perl and `cwd`/blib\n",
          "style" => "*",
          "text" => "t/c_argv.t, script/perlcc: properly quote spaces in path of perl and `cwd`/blib"
        },
        {
          "line" => 637,
          "raw" => "\t* t/modules.t: add svn rev to B::C::Version\n\n",
          "style" => "*",
          "text" => "t/modules.t: add svn rev to B::C::Version"
        }
      ],
      "line" => 619,
      "note" => "rurban",
      "raw" => "1.27\t2010-07-30 rurban\n",
      "raw_date" => "2010-07-30",
      "version" => "1.27"
    },
    {
      "date" => "2010-07-26",
      "entries" => [
        {
          "line" => 640,
          "raw" => "\tStart of 5.14 support, CVs broken.\n\n",
          "style" => "",
          "text" => "Start of 5.14 support, CVs broken."
        },
        {
          "line" => 642,
          "raw" => "\t* C.pm: improve -fav-init performance if not usemymalloc: no\n\t  calloc, just direct libc malloc.\n\t-O2 uses -fav-init2, i.e. experimental independent_comalloc(),\n\t  -O1 uses now -fav-init (Nick Koston + Reini Urban)\n\tMark a package which is autoloaded from XS.\n\tFix autoloading of constants AKA const xsubcv via AUTOLOAD [test 27] (Nick Koston)\n\t5.13.3 support (xpv STASH, MAGIC, ... reorganization), but CVs still failing\n\tCheck CVf_ANON when setting cv->GV. Fixes anon subs.\n\tDo not call REGEXP IVX and NVX methods (since 5.11)\n",
          "style" => "*",
          "text" => "C.pm: improve -fav-init performance if not usemymalloc: no calloc, just direct libc malloc. -O2 uses -fav-init2, i.e. experimental independent_comalloc(), -O1 uses now -fav-init (Nick Koston + Reini Urban) Mark a package which is autoloaded from XS. Fix autoloading of constants AKA const xsubcv via AUTOLOAD [test 27] (Nick Koston) 5.13.3 support (xpv STASH, MAGIC, ... reorganization), but CVs still failing Check CVf_ANON when setting cv->GV. Fixes anon subs. Do not call REGEXP IVX and NVX methods (since 5.11)"
        },
        {
          "line" => 651,
          "raw" => "\t* bytecode.pl: CvGv_set since 5.13.3\n\tFixed byteorder 0x stripping causing wrong bget_swab on 64bit\n",
          "style" => "*",
          "text" => "bytecode.pl: CvGv_set since 5.13.3 Fixed byteorder 0x stripping causing wrong bget_swab on 64bit"
        },
        {
          "line" => 653,
          "raw" => "\t* B::C::Flags: new. added by Makefile.PL probing independent_comalloc()\n",
          "style" => "*",
          "text" => "B::C::Flags: new. added by Makefile.PL probing independent_comalloc()"
        },
        {
          "line" => 654,
          "raw" => "\t* CC.pm: the default -fno-slow-signals adds PERL_ASYNC_CHECK at\n\t  the same ops as with 5.13, a major improvement.\n",
          "style" => "*",
          "text" => "CC.pm: the default -fno-slow-signals adds PERL_ASYNC_CHECK at the same ops as with 5.13, a major improvement."
        },
        {
          "line" => 656,
          "raw" => "\t* Bytecode.pm (1.07), bytecode.pl: xpvav.xiv_u was removed with 5.13.2 but not\n\t  used anymore. read and set av_flags only until 5.12, compile only before 5.10\n\tCheck CVv_ANON when setting cv->GV. Fixes anon subs\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.07), bytecode.pl: xpvav.xiv_u was removed with 5.13.2 but not used anymore. read and set av_flags only until 5.12, compile only before 5.10 Check CVv_ANON when setting cv->GV. Fixes anon subs"
        },
        {
          "line" => 659,
          "raw" => "\t* bytecode.h: do not PM_SETRE with empty arg. fails since 5.13 debugging\n",
          "style" => "*",
          "text" => "bytecode.h: do not PM_SETRE with empty arg. fails since 5.13 debugging"
        },
        {
          "line" => 660,
          "raw" => "        * t/testc.sh, t/TESTS: fail test 44, change threads tests 41-43 to TODO\n",
          "style" => "*",
          "text" => "t/testc.sh, t/TESTS: fail test 44, change threads tests 41-43 to TODO"
        },
        {
          "line" => 661,
          "raw" => "\t* perlcc (2.07), cc_harness, t/test.pl: debian specific fixes for their broken\n\t  -lperl linker args for ExtUtils::Embed::ldopts.\n",
          "style" => "*",
          "text" => "perlcc (2.07), cc_harness, t/test.pl: debian specific fixes for their broken -lperl linker args for ExtUtils::Embed::ldopts."
        },
        {
          "line" => 663,
          "raw" => "\t* t/test.pl: Have complete c/cc TODO/SKIP status in one place.\n\tFixed killing hangling tests with IPC::Run.\n\tFixed new cc TODO.\n\tRun CC test 18 even not as AUTHOR\n",
          "style" => "*",
          "text" => "t/test.pl: Have complete c/cc TODO/SKIP status in one place. Fixed killing hangling tests with IPC::Run. Fixed new cc TODO. Run CC test 18 even not as AUTHOR"
        },
        {
          "line" => 667,
          "raw" => "\t* t/c*.t: make test 27 easier to debug (Nick Koston)\n        Added test 45 (Nick Koston)\n\n",
          "style" => "*",
          "text" => "t/c*.t: make test 27 easier to debug (Nick Koston) Added test 45 (Nick Koston)"
        }
      ],
      "line" => 639,
      "note" => "rurban",
      "raw" => "1.26\t2010-07-26 rurban\n",
      "raw_date" => "2010-07-26",
      "version" => "1.26"
    },
    {
      "date" => "2010-04-11",
      "entries" => [
        {
          "line" => 671,
          "raw" => "\t* C.pm: remove global my_perl, pass it properly around.\n",
          "style" => "*",
          "text" => "C.pm: remove global my_perl, pass it properly around."
        },
        {
          "line" => 672,
          "raw" => "\t* t/c*.t: added test 40 \\000 byte in PV failing on ori 5.6.2 (Nick Koston),\n\tadded more magic tests for shared vars - n,p,P magic: 39-43. 41 nyi\n",
          "style" => "*",
          "text" => "t/c*.t: added test 40 \\000 byte in PV failing on ori 5.6.2 (Nick Koston), added more magic tests for shared vars - n,p,P magic: 39-43. 41 nyi"
        },
        {
          "line" => 674,
          "raw" => "\t* t/modules.t: fix -t (run module tests), print header only on full test\n",
          "style" => "*",
          "text" => "t/modules.t: fix -t (run module tests), print header only on full test"
        },
        {
          "line" => 675,
          "raw" => "\t* t/modules.pm: do not test core or deprecated modules, esp. do not download perl\n\tAdded is_subset.\n",
          "style" => "*",
          "text" => "t/modules.pm: do not test core or deprecated modules, esp. do not download perl Added is_subset."
        },
        {
          "line" => 677,
          "raw" => "\t* t/testm.sh: implement -k\n",
          "style" => "*",
          "text" => "t/testm.sh: implement -k"
        },
        {
          "line" => 678,
          "raw" => "\t* t/testc.sh, t/TESTS: add 44 for weaken import and magic_killbackrefs #72922\n\n",
          "style" => "*",
          "text" => "t/testc.sh, t/TESTS: add 44 for weaken import and magic_killbackrefs #72922"
        }
      ],
      "line" => 670,
      "note" => "rurban",
      "raw" => "1.25\t2010-04-11 rurban\n",
      "raw_date" => "2010-04-11",
      "version" => "1.25"
    },
    {
      "date" => "2010-02-15",
      "entries" => [
        {
          "entries" => [
            {
              "line" => 682,
              "raw" => "\t  - valgrind is your friend.\n",
              "style" => "-",
              "text" => "valgrind is your friend."
            }
          ],
          "line" => 681,
          "raw" => "\t* C.pm: Fixed off by one array access in magic array init (34)\n",
          "style" => "*",
          "text" => "C.pm: Fixed off by one array access in magic array init (34)"
        },
        {
          "line" => 683,
          "raw" => "\tFixed aelemfast padsv access crash (Text::Tabs on freebsd7)\n",
          "style" => "",
          "text" => "Fixed aelemfast padsv access crash (Text::Tabs on freebsd7)"
        },
        {
          "line" => 684,
          "raw" => "\tFixed wrong stash names in gv_stashpv analog to gv_fetchpv\n\t  (Text-Tabs+Wrap t/dandv.t)\n",
          "style" => "",
          "text" => "Fixed wrong stash names in gv_stashpv analog to gv_fetchpv (Text-Tabs+Wrap t/dandv.t)"
        },
        {
          "line" => 686,
          "raw" => "\t* t/testm.sh: implement -s without log file\n",
          "style" => "*",
          "text" => "t/testm.sh: implement -s without log file"
        },
        {
          "line" => 687,
          "raw" => "\t* t/modules.pm: export skip_modules, silence module scanning STDERR\n\n",
          "style" => "*",
          "text" => "t/modules.pm: export skip_modules, silence module scanning STDERR"
        }
      ],
      "line" => 680,
      "note" => "rurban",
      "raw" => "1.24\t2010-02-15 rurban\n",
      "raw_date" => "2010-02-15",
      "version" => "1.24"
    },
    {
      "date" => "2010-02-14",
      "entries" => [
        {
          "line" => 690,
          "raw" => "\t* t/testm.sh: chmod +x\n",
          "style" => "*",
          "text" => "t/testm.sh: chmod +x"
        },
        {
          "line" => 691,
          "raw" => "\t* t/modules.t: fix \$have_IPC_Run\n\n",
          "style" => "*",
          "text" => "t/modules.t: fix \$have_IPC_Run"
        }
      ],
      "line" => 689,
      "note" => "rurban",
      "raw" => "1.23\t2010-02-14 rurban\n",
      "raw_date" => "2010-02-14",
      "version" => "1.23"
    },
    {
      "date" => "2010-02-14",
      "entries" => [
        {
          "line" => 694,
          "raw" => "\tTested with ActivePerl 5.10.0\n\n",
          "style" => "",
          "text" => "Tested with ActivePerl 5.10.0"
        },
        {
          "line" => 696,
          "raw" => "\t* bytecode.h: unshare_hek exception for WIN32, not only MINGW\n",
          "style" => "*",
          "text" => "bytecode.h: unshare_hek exception for WIN32, not only MINGW"
        },
        {
          "line" => 697,
          "raw" => "\t* t/modules.t: Added list of to be skipped modules, which cycle endlessly.\n\tImprove todo message.\n",
          "style" => "*",
          "text" => "t/modules.t: Added list of to be skipped modules, which cycle endlessly. Improve todo message."
        },
        {
          "line" => 699,
          "raw" => "\t* t/testm.sh: add option -s \"install skipped modules\"\n",
          "style" => "*",
          "text" => "t/testm.sh: add option -s \"install skipped modules\""
        },
        {
          "line" => 700,
          "raw" => "\t* Makefile.PL, cc_harness, perlcc: fix ldflags for ActivePerl 5.10.0\n\t  for MSVC6 (ccversion 12) -opt:ref,icf leads to invalid outfile \"pt:ref,icf\"\n",
          "style" => "*",
          "text" => "Makefile.PL, cc_harness, perlcc: fix ldflags for ActivePerl 5.10.0 for MSVC6 (ccversion 12) -opt:ref,icf leads to invalid outfile \"pt:ref,icf\""
        },
        {
          "line" => 702,
          "raw" => "\t* c+cc test 29 fails on 5.10 randomly. Make it a TODO\n\n",
          "style" => "*",
          "text" => "c+cc test 29 fails on 5.10 randomly. Make it a TODO"
        }
      ],
      "line" => 693,
      "note" => "rurban",
      "raw" => "1.22\t2010-02-14 rurban\n",
      "raw_date" => "2010-02-14",
      "version" => "1.22"
    },
    {
      "date" => "2010-02-14",
      "entries" => [
        {
          "line" => 705,
          "raw" => "\t* C.pm: Add missing Nullop for CC on 5.11.4 (cc 12).\n\tTest 38 passes\n\n",
          "style" => "*",
          "text" => "C.pm: Add missing Nullop for CC on 5.11.4 (cc 12). Test 38 passes"
        }
      ],
      "line" => 704,
      "note" => "rurban",
      "raw" => "1.21\t2010-02-14 rurban\n",
      "raw_date" => "2010-02-14",
      "version" => "1.21"
    },
    {
      "date" => "2010-02-14",
      "entries" => [
        {
          "line" => 709,
          "raw" => "\t* C.pm: #define PERL_CORE broke Null macros on 5.11.4. Define those.\n\n",
          "style" => "*",
          "text" => "C.pm: #define PERL_CORE broke Null macros on 5.11.4. Define those."
        }
      ],
      "line" => 708,
      "note" => "rurban",
      "raw" => "1.20\t2010-02-14 rurban\n",
      "raw_date" => "2010-02-14",
      "version" => "1.20"
    },
    {
      "date" => "2010-02-13",
      "entries" => [
        {
          "line" => 712,
          "raw" => "\tAlmost fixed evaltry (12) with proper cop_seq setup, just solaris and debian\n",
          "style" => "",
          "text" => "Almost fixed evaltry (12) with proper cop_seq setup, just solaris and debian"
        },
        {
          "line" => 713,
          "raw" => "\tfail sometimes. Tested ok with strawberry 5.10.1\n\n",
          "style" => "",
          "text" => "fail sometimes. Tested ok with strawberry 5.10.1"
        },
        {
          "line" => 715,
          "raw" => "\t* C.pm: fixed evaltry (test 12) mostly, NVX was shared with 2 xpad_cop_seq ints\n\t  which accidently just worked before 1.17 with %s, but not after changing\n\t  to the %g representation.\n\tIgnore unused random (overlong) xpviv IV, causing\n\t  \"warning: this decimal constant is unsigned only in ISO C90\"\n\tDefer rv => cv to run-time < 5.10. Fixes ExtUtils::Install\n\tDefer xpvmg->pv init to run-time < 5.10. Fixes MooseX::Types\n\tCheck for NV inf. Fixes compilation of DateTime\n\tDefined PERL_CORE: Fxied Windows problems with setjmp undef'ed in XSUB.h\n\tAdded Win32 workaround for missing PL_do_undump\n\tStripped perl_ prefix from perl_get_cv, perl_call_pv, perl_call_method\n",
          "style" => "*",
          "text" => "C.pm: fixed evaltry (test 12) mostly, NVX was shared with 2 xpad_cop_seq ints which accidently just worked before 1.17 with %s, but not after changing to the %g representation. Ignore unused random (overlong) xpviv IV, causing \"warning: this decimal constant is unsigned only in ISO C90\" Defer rv => cv to run-time < 5.10. Fixes ExtUtils::Install Defer xpvmg->pv init to run-time < 5.10. Fixes MooseX::Types Check for NV inf. Fixes compilation of DateTime Defined PERL_CORE: Fxied Windows problems with setjmp undef'ed in XSUB.h Added Win32 workaround for missing PL_do_undump Stripped perl_ prefix from perl_get_cv, perl_call_pv, perl_call_method"
        },
        {
          "line" => 726,
          "raw" => "\t* CC.pm (1.07): added -fslow-signals.\n\tDisabled inlined pp_enter: Fails on empty cxstack.\n\tBacked out inlining of enterloop: GIMME_V fails on freebsd7\n\tRemove strawberry PerlProc_setjmp definition, #define PERL_CORE fixed that\n",
          "style" => "*",
          "text" => "CC.pm (1.07): added -fslow-signals. Disabled inlined pp_enter: Fails on empty cxstack. Backed out inlining of enterloop: GIMME_V fails on freebsd7 Remove strawberry PerlProc_setjmp definition, #define PERL_CORE fixed that"
        },
        {
          "line" => 730,
          "raw" => "\t* Bytecode.pm (1.06): same NVX => xpad_cop_seq fix as in C.pm, added 2 new\n\t  bytecodes (cop_seq_low, cop_seq_high), fixed tests 9,10,12. Passes\n\t  all tests > 5.6 now.\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.06): same NVX => xpad_cop_seq fix as in C.pm, added 2 new bytecodes (cop_seq_low, cop_seq_high), fixed tests 9,10,12. Passes all tests > 5.6 now."
        },
        {
          "line" => 733,
          "raw" => "\t* bytecode.pl: added cop_seq_low (155), cop_seq_high (156) instead of xnv.\n\t  No conversion code for loading older bytecode needed, but fragile (double => 2 int)\n",
          "style" => "*",
          "text" => "bytecode.pl: added cop_seq_low (155), cop_seq_high (156) instead of xnv. No conversion code for loading older bytecode needed, but fragile (double => 2 int)"
        },
        {
          "line" => 735,
          "raw" => "\t* t/modules.t: refactored by Todd Rinaldo (toddr). 4*tests per module:\n\t  -s a, exitcode 0, ok, no warnings on stderr\n",
          "style" => "*",
          "text" => "t/modules.t: refactored by Todd Rinaldo (toddr). 4*tests per module: -s a, exitcode 0, ok, no warnings on stderr"
        },
        {
          "line" => 737,
          "raw" => "\t* t/TESTS: added 38, failing on CC (Nick Koston).\n\tadded 39, failing everywhere.\n",
          "style" => "*",
          "text" => "t/TESTS: added 38, failing on CC (Nick Koston). added 39, failing everywhere."
        },
        {
          "line" => 739,
          "raw" => "\t* t/test.pl: refactor: Try to timeout on all tests (compiler and exec) if\n\t  IPC::Run is installed\n",
          "style" => "*",
          "text" => "t/test.pl: refactor: Try to timeout on all tests (compiler and exec) if IPC::Run is installed"
        },
        {
          "line" => 741,
          "raw" => "\t* MANIFEST, *.pod: Moved conference pods to ramblings,\n\tremoved lib/B/Asmdata.pm again, added t/qr_loaded_module.pm\n",
          "style" => "*",
          "text" => "MANIFEST, *.pod: Moved conference pods to ramblings, removed lib/B/Asmdata.pm again, added t/qr_loaded_module.pm"
        },
        {
          "line" => 743,
          "raw" => "\t* t/testm.sh, t/modules.pm: added, -t not working yet though\n",
          "style" => "*",
          "text" => "t/testm.sh, t/modules.pm: added, -t not working yet though"
        },
        {
          "line" => 744,
          "raw" => "\t* t/b.t: \$[ => \$]\n\n",
          "style" => "*",
          "text" => "t/b.t: \$[ => \$]"
        }
      ],
      "line" => 711,
      "note" => "rurban",
      "raw" => "1.19\t2010-02-13 rurban\n",
      "raw_date" => "2010-02-13",
      "version" => "1.19"
    },
    {
      "date" => "2010-02-06",
      "entries" => [
        {
          "line" => 747,
          "raw" => "\tevaltry (test 12) still broken on most systems.\n\n",
          "style" => "",
          "text" => "evaltry (test 12) still broken on most systems."
        },
        {
          "line" => 749,
          "raw" => "\t* C.pm, C.xs: fixed r-magic for 5.6 (ExtUtils::Install,\n\t  File::Temp, Template::Stash). need tests for run-time checks (33).\n\t  5.6 misses MG->pregcomp\n",
          "style" => "*",
          "text" => "C.pm, C.xs: fixed r-magic for 5.6 (ExtUtils::Install, File::Temp, Template::Stash). need tests for run-time checks (33). 5.6 misses MG->pregcomp"
        },
        {
          "line" => 752,
          "raw" => "\t* t/modules.t: check for a.out (test from toddr)\n",
          "style" => "*",
          "text" => "t/modules.t: check for a.out (test from toddr)"
        },
        {
          "line" => 753,
          "raw" => "\t* Makefile.PL: create lib/B/Asmdata.pm beforehand (toddr)\n",
          "style" => "*",
          "text" => "Makefile.PL: create lib/B/Asmdata.pm beforehand (toddr)"
        },
        {
          "line" => 754,
          "raw" => "\t* ByteLoader: fixed duplicate + missing bl_header for bsd and Darwin\n\t  (test from toddr)\n",
          "style" => "*",
          "text" => "ByteLoader: fixed duplicate + missing bl_header for bsd and Darwin (test from toddr)"
        },
        {
          "line" => 756,
          "raw" => "\t* test 37 added - AV self-refs, analog to HVs (never failed, just to\n\t  be sure).\n\tRemoved -qq from 5.6 tests.\n\n",
          "style" => "*",
          "text" => "test 37 added - AV self-refs, analog to HVs (never failed, just to be sure). Removed -qq from 5.6 tests."
        }
      ],
      "line" => 746,
      "note" => "rurban",
      "raw" => "1.18\t2010-02-06 rurban\n",
      "raw_date" => "2010-02-06",
      "version" => "1.18"
    },
    {
      "date" => "2010-02-03",
      "entries" => [
        {
          "line" => 761,
          "raw" => "\tFixed now most module failures, non-threaded at least: bootstrap was in\n",
          "style" => "",
          "text" => "Fixed now most module failures, non-threaded at least: bootstrap was in"
        },
        {
          "line" => 762,
          "raw" => "\tthe way. strawberry perl fixes. Fixed test 29, broke evaltry test 12\n\n",
          "style" => "",
          "text" => "the way. strawberry perl fixes. Fixed test 29, broke evaltry test 12"
        },
        {
          "line" => 764,
          "raw" => "\t* C.pm: Added option -Dfull for all full debugging info, set all options.\n\tSkip saving XS bootstrap. Fixes most XS module failures. i.e.\n\t  Digest::MD5, Data::Dumper, ..\n\t  Fail: Attribute::Handlers, B::Hooks::EndOfScope, YAML, MooseX::Types\n\t  4 for 5.8.9-nt from the top100, and 3 for 5.11.4-nt: Attribute::Handlers,\n\t  File::Temp, ExtUtils::Install.\n\tFixed AV self-references causing endless loops, analog to HVs (test 27)\n\tFixed Getopt::Long crash with AV D magic (regdata),\n\t  save_magic returns now the magic types as string.\n\tFixed unescaped savere (test ExtUtils::Install).\n\tFixed GvSTASH \"initializer element is not constant\" (Test::Harness)\n\tFixed xrv_list \"initializer element is not constant\" (Class::MOP < 5.10)\n",
          "style" => "*",
          "text" => "C.pm: Added option -Dfull for all full debugging info, set all options. Skip saving XS bootstrap. Fixes most XS module failures. i.e. Digest::MD5, Data::Dumper, .. Fail: Attribute::Handlers, B::Hooks::EndOfScope, YAML, MooseX::Types 4 for 5.8.9-nt from the top100, and 3 for 5.11.4-nt: Attribute::Handlers, File::Temp, ExtUtils::Install. Fixed AV self-references causing endless loops, analog to HVs (test 27) Fixed Getopt::Long crash with AV D magic (regdata), save_magic returns now the magic types as string. Fixed unescaped savere (test ExtUtils::Install). Fixed GvSTASH \"initializer element is not constant\" (Test::Harness) Fixed xrv_list \"initializer element is not constant\" (Class::MOP < 5.10)"
        },
        {
          "line" => 776,
          "raw" => "\t* CC.pm (1.06): Added missing unexported definitions for MSWin32,\n\t  >=5.10: newGP, vivify_ref, prepare_SV_for_RV (tests 18, 29).\n\t  PerlProc_setjmp, PerlProc_longjmp (tests 12, 32).\n\tFixed cxinc for 5.11.0\n",
          "style" => "*",
          "text" => "CC.pm (1.06): Added missing unexported definitions for MSWin32, >=5.10: newGP, vivify_ref, prepare_SV_for_RV (tests 18, 29). PerlProc_setjmp, PerlProc_longjmp (tests 12, 32). Fixed cxinc for 5.11.0"
        },
        {
          "line" => 780,
          "raw" => "\t* t/bytecode.t: mixed up 32 with 33.\n",
          "style" => "*",
          "text" => "t/bytecode.t: mixed up 32 with 33."
        },
        {
          "line" => 781,
          "raw" => "\t* t/modules.t, t/top100: new module test, see also the log.modules*\n\t  results in the svn repo.\n",
          "style" => "*",
          "text" => "t/modules.t, t/top100: new module test, see also the log.modules* results in the svn repo."
        },
        {
          "line" => 783,
          "raw" => "\t* t/mymodules: added as reference, executed optionally.\n",
          "style" => "*",
          "text" => "t/mymodules: added as reference, executed optionally."
        },
        {
          "line" => 784,
          "raw" => "\t* script/cc_harness: ldopts -std if no -B<opt>\n\n",
          "style" => "*",
          "text" => "script/cc_harness: ldopts -std if no -B<opt>"
        }
      ],
      "line" => 760,
      "note" => "rurban",
      "raw" => "1.17\t2010-02-03 rurban\n",
      "raw_date" => "2010-02-03",
      "version" => "1.17"
    },
    {
      "date" => "2010-01-27",
      "entries" => [
        {
          "line" => 787,
          "raw" => "\tuse Moose and benchmark still fails. IO even a regression.\n\n",
          "style" => "",
          "text" => "use Moose and benchmark still fails. IO even a regression."
        },
        {
          "line" => 789,
          "raw" => "\t* C.pm: Fixed braces warning for empty xpvcv startfield (Nullany),\n\tregister int for warn_sv loop\n\tFixed hv init for magic hashes, pre-allocate array and xpvhv_aux. (test 34)\n\tFixed method_named (CPAN #53889, test 35) for B::C, better fix than for B::CC.\n\tAdded -DH for HV debuggging.\n\tFixed HV self-references causing endless loops, i.e. with use Moose, test 36.\n",
          "style" => "*",
          "text" => "C.pm: Fixed braces warning for empty xpvcv startfield (Nullany), register int for warn_sv loop Fixed hv init for magic hashes, pre-allocate array and xpvhv_aux. (test 34) Fixed method_named (CPAN #53889, test 35) for B::C, better fix than for B::CC. Added -DH for HV debuggging. Fixed HV self-references causing endless loops, i.e. with use Moose, test 36."
        },
        {
          "line" => 795,
          "raw" => "\t* CC.pm (1.05): added experimental -finline-ops. Always on. Can be removed if\n\t  it works okay for the new inlined versions.\n\tInlined pp_enter, pp_reset, pp_regcreset, pp_stringify.\n\tFixed pp_padsv DEREF for 5.10.\n\tDocumented test coverage for each op.\n\tFixed wrong \$PERL511 definition.\n\tAdded Opcodes support (no_stack), on CPAN as 0.01.\n\t  added pp_pushmark pp_break pp_continue to no_stack handling.\n\tFixed method_named (CPAN #53889, test 35) assuming there is only const\n\t  before method_named. No counter examples found so far.\n\tChanged new OBJ => OBJ->new\n\tMore curcop->write_back protection.\n",
          "style" => "*",
          "text" => "CC.pm (1.05): added experimental -finline-ops. Always on. Can be removed if it works okay for the new inlined versions. Inlined pp_enter, pp_reset, pp_regcreset, pp_stringify. Fixed pp_padsv DEREF for 5.10. Documented test coverage for each op. Fixed wrong \$PERL511 definition. Added Opcodes support (no_stack), on CPAN as 0.01. added pp_pushmark pp_break pp_continue to no_stack handling. Fixed method_named (CPAN #53889, test 35) assuming there is only const before method_named. No counter examples found so far. Changed new OBJ => OBJ->new More curcop->write_back protection."
        },
        {
          "line" => 807,
          "raw" => "\t* Stackobj.pm (1.00_02): RV fix for 5.11.\n",
          "style" => "*",
          "text" => "Stackobj.pm (1.00_02): RV fix for 5.11."
        },
        {
          "line" => 808,
          "raw" => "\t* t/testc.sh, t/test.pl: added CC specific tests to increase CC op coverage\n\t  after 100.\n\tSwitched test 32->101 (arith) with 33->32 (evaltry catch die) as it fails\n\t  with 5.11.3.\n\tAdded new qr test 33 (Nick Koston), test 34 for magic hashes, test 35 for\n\t  broken methodcall syntax (method_named), test 36 for HV self-references.\n",
          "style" => "*",
          "text" => "t/testc.sh, t/test.pl: added CC specific tests to increase CC op coverage after 100. Switched test 32->101 (arith) with 33->32 (evaltry catch die) as it fails with 5.11.3. Added new qr test 33 (Nick Koston), test 34 for magic hashes, test 35 for broken methodcall syntax (method_named), test 36 for HV self-references."
        },
        {
          "line" => 814,
          "raw" => "\t* TESTS: added test 32 (evaltry catch die): Fails on 5.11.3 C/CC only,\n\t  <5.11.3 it works okay. Also tests 33, 34, 35, 36.\n",
          "style" => "*",
          "text" => "TESTS: added test 32 (evaltry catch die): Fails on 5.11.3 C/CC only, <5.11.3 it works okay. Also tests 33, 34, 35, 36."
        },
        {
          "line" => 816,
          "raw" => "\t* ByteLoader/Makefile.PL: removed cygwin gcc specific stack-protector removal.\n\t  It was a bug of mine.\n\tAdded more AUTHOR gcc -ansi warnings, just -pedantic not.\n",
          "style" => "*",
          "text" => "ByteLoader/Makefile.PL: removed cygwin gcc specific stack-protector removal. It was a bug of mine. Added more AUTHOR gcc -ansi warnings, just -pedantic not."
        },
        {
          "line" => 819,
          "raw" => "\t* Makefile.PL: Added more AUTHOR gcc warnings, also -pedantic.\n\tAdded optional Opcodes PREREQ_PM\n\n",
          "style" => "*",
          "text" => "Makefile.PL: Added more AUTHOR gcc warnings, also -pedantic. Added optional Opcodes PREREQ_PM"
        }
      ],
      "line" => 786,
      "note" => "rurban",
      "raw" => "1.16\t2010-01-27 rurban\n",
      "raw_date" => "2010-01-27",
      "version" => "1.16"
    },
    {
      "date" => "2010-01-03",
      "entries" => [
        {
          "line" => 823,
          "raw" => "\t* t/test.pl: Fixed MSWin32 tests again. Lost the 1.13 patches with 1.14.\n\n",
          "style" => "*",
          "text" => "t/test.pl: Fixed MSWin32 tests again. Lost the 1.13 patches with 1.14."
        }
      ],
      "line" => 822,
      "note" => "rurban",
      "raw" => "1.15\t2010-01-03 rurban\n",
      "raw_date" => "2010-01-03",
      "version" => "1.15"
    },
    {
      "date" => "2010-01-02",
      "entries" => [
        {
          "line" => 826,
          "raw" => "\t* CC.pm (1.04): Fixed entereval/leaveeval for 5.10. Fixes eval \"\", test 12.\n\t  The end of the string CALLRUNOPS needed to be nullified, as in 5.8.\n\t  5.11 CORE also needs a patch for this.\n\tOptimized away SP save/restore for %no_stack ops. Need to read this\n\t  from opcode.pl eventually.\n\tPERL_ASYNC_CHECK (pending signals) added after every basic blocks with -O1\n\t  and every loop.\n",
          "style" => "*",
          "text" => "CC.pm (1.04): Fixed entereval/leaveeval for 5.10. Fixes eval \"\", test 12. The end of the string CALLRUNOPS needed to be nullified, as in 5.8. 5.11 CORE also needs a patch for this. Optimized away SP save/restore for %no_stack ops. Need to read this from opcode.pl eventually. PERL_ASYNC_CHECK (pending signals) added after every basic blocks with -O1 and every loop."
        },
        {
          "line" => 833,
          "raw" => "\t* C.pm: More 5.10 union braces.\n",
          "style" => "*",
          "text" => "C.pm: More 5.10 union braces."
        },
        {
          "line" => 834,
          "raw" => "\t* Stackobj.pm (1.00_01): Added iv and nv to peek.\n\tAdded documentation.\n",
          "style" => "*",
          "text" => "Stackobj.pm (1.00_01): Added iv and nv to peek. Added documentation."
        },
        {
          "line" => 836,
          "raw" => "\t* Bblock.pm (1.03_01): Print the argument (sub) to inspect.\n\tAdded missing documentation.\n",
          "style" => "*",
          "text" => "Bblock.pm (1.03_01): Print the argument (sub) to inspect. Added missing documentation."
        },
        {
          "line" => 838,
          "raw" => "\t* t/testcore.t: improved. added -fail and a list of failing tests.\n\t  C now always with -O3.\n",
          "style" => "*",
          "text" => "t/testcore.t: improved. added -fail and a list of failing tests. C now always with -O3."
        },
        {
          "line" => 840,
          "raw" => "\t* t/c_allow_opts.t: Added for -DALLOW_PERL_OPTIONS.\n\n",
          "style" => "*",
          "text" => "t/c_allow_opts.t: Added for -DALLOW_PERL_OPTIONS."
        }
      ],
      "line" => 825,
      "note" => "rurban",
      "raw" => "1.14\t2010-01-02 rurban\n",
      "raw_date" => "2010-01-02",
      "version" => "1.14"
    },
    {
      "date" => "2009-12-31",
      "entries" => [
        {
          "line" => 843,
          "raw" => "\tTested with MSVC (MSVC compiles test29 and bigger examples awfully slow!\n",
          "style" => "",
          "text" => "Tested with MSVC (MSVC compiles test29 and bigger examples awfully slow!"
        },
        {
          "line" => 844,
          "raw" => "\t7:30min, 30MB mem, 98% CPU, 2GHz)\n\n",
          "style" => "",
          "text" => "7:30min, 30MB mem, 98% CPU, 2GHz)"
        },
        {
          "line" => 846,
          "raw" => "\t* C.pm: MSVC fix for \"(OP*)Nullany\" i.e \"(OP*){0}\" => \"{0}\". Fixes\n\t  test 27 on MSVC. CC test 12 broken on MSVC AS 5.8\n",
          "style" => "*",
          "text" => "C.pm: MSVC fix for \"(OP*)Nullany\" i.e \"(OP*){0}\" => \"{0}\". Fixes test 27 on MSVC. CC test 12 broken on MSVC AS 5.8"
        },
        {
          "line" => 848,
          "raw" => "\t* bytecode.pl: Restore C strictness, printf before declaration.\n\tUndefine debop for MSVC also. Fixed [cpan #53228].\n",
          "style" => "*",
          "text" => "bytecode.pl: Restore C strictness, printf before declaration. Undefine debop for MSVC also. Fixed [cpan #53228]."
        },
        {
          "line" => 850,
          "raw" => "\t* t/test.pl: Cleanup intermediate MSVC .obj. Skip too slow tests 29\n\t  on MSVC, only c.t\n\tRemove >nul for test results on Win32.\n\tMore run_cc_perl fixes for Win32.\n\tBe more quiet on MSWin32 also (no 2>/dev/null)\n\tSkip stderr redirection to stdout on cmd.exe tests, t/o.t 5,9.\n",
          "style" => "*",
          "text" => "t/test.pl: Cleanup intermediate MSVC .obj. Skip too slow tests 29 on MSVC, only c.t Remove >nul for test results on Win32. More run_cc_perl fixes for Win32. Be more quiet on MSWin32 also (no 2>/dev/null) Skip stderr redirection to stdout on cmd.exe tests, t/o.t 5,9."
        },
        {
          "line" => 856,
          "raw" => "\t* t/bytecode.pl: ditto.\n",
          "style" => "*",
          "text" => "t/bytecode.pl: ditto."
        },
        {
          "line" => 857,
          "raw" => "\t* t/TESTS: Fixed 28 for MSWin32 MSVC\n\n",
          "style" => "*",
          "text" => "t/TESTS: Fixed 28 for MSWin32 MSVC"
        }
      ],
      "line" => 842,
      "note" => "rurban",
      "raw" => "1.13\t2009-12-31 rurban\n",
      "raw_date" => "2009-12-31",
      "version" => "1.13"
    },
    {
      "date" => "2009-12-31",
      "entries" => [
        {
          "line" => 860,
          "raw" => "\t__DATA__ handles work now. Also more Bytecode fixes.\n",
          "style" => "",
          "text" => "__DATA__ handles work now. Also more Bytecode fixes."
        },
        {
          "line" => 861,
          "raw" => "\t* t/testplc.sh: Added -S: skip all but -S and Concise\n",
          "style" => "*",
          "text" => "t/testplc.sh: Added -S: skip all but -S and Concise"
        },
        {
          "line" => 862,
          "raw" => "\t* Bytecode.pm (1.05): Adapt RV 5.11 change from SV to IV, detect ROK at\n\t  B::IV::bsave analog to C.pm. Fixes test 16.\n\tSet prototype sv_flags at first, so it cannot assert. Fixes tests 27 and 29.\n\tMore work on 5.6 compat.\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.05): Adapt RV 5.11 change from SV to IV, detect ROK at B::IV::bsave analog to C.pm. Fixes test 16. Set prototype sv_flags at first, so it cannot assert. Fixes tests 27 and 29. More work on 5.6 compat."
        },
        {
          "line" => 866,
          "raw" => "\t* bytecode.pl: Fixed 5.6 %alias_to sizes.\n",
          "style" => "*",
          "text" => "bytecode.pl: Fixed 5.6 %alias_to sizes."
        },
        {
          "line" => 867,
          "raw" => "\t* bytecode.h: Fix BSET_cop_label for 5.11. Fixes test 21.\n",
          "style" => "*",
          "text" => "bytecode.h: Fix BSET_cop_label for 5.11. Fixes test 21."
        },
        {
          "line" => 868,
          "raw" => "\t* t/bytecode.t: Added DEBUGGING to the mix. 5.11 is now completely the\n\t  same as 5.10. Remaining failures are now 9,10,12 for DEBUGGING (or\n\t  non-threaded?).\n",
          "style" => "*",
          "text" => "t/bytecode.t: Added DEBUGGING to the mix. 5.11 is now completely the same as 5.10. Remaining failures are now 9,10,12 for DEBUGGING (or non-threaded?)."
        },
        {
          "line" => 871,
          "raw" => "\t* C.pm: Added xpvuv (coverage in 5.6.2 test 21).\n\tAdded PMOP->pmstash/pmstashpv (no coverage yet).\n\tChecked against -Wall -Wextra:\n\t  Added missing pmop->stash for 5.8.\n\t  Added missing cop->cop_io for 5.8.\n\t  Added braces to union inits (MSVC Todo).\n\t  Remove unused dTARG and dSP.\n\tFixed CC test 29 on 5.6.2, not checked why.\n\tFixed __DATA__ test 15 on 5.10 and 5.11.\n",
          "style" => "*",
          "text" => "C.pm: Added xpvuv (coverage in 5.6.2 test 21). Added PMOP->pmstash/pmstashpv (no coverage yet). Checked against -Wall -Wextra: Added missing pmop->stash for 5.8. Added missing cop->cop_io for 5.8. Added braces to union inits (MSVC Todo). Remove unused dTARG and dSP. Fixed CC test 29 on 5.6.2, not checked why. Fixed __DATA__ test 15 on 5.10 and 5.11."
        },
        {
          "line" => 880,
          "raw" => "\t* TESTS: Updated with 5.10.1 CORE results\n\n",
          "style" => "*",
          "text" => "TESTS: Updated with 5.10.1 CORE results"
        }
      ],
      "line" => 859,
      "note" => "rurban",
      "raw" => "1.12\t2009-12-31 rurban\n",
      "raw_date" => "2009-12-31",
      "version" => "1.12"
    },
    {
      "date" => "2009-12-29",
      "entries" => [
        {
          "line" => 883,
          "raw" => "\tFixed 5.11 RVs, added C optimizations to CC\n",
          "style" => "",
          "text" => "Fixed 5.11 RVs, added C optimizations to CC"
        },
        {
          "line" => 884,
          "raw" => "\t* C.pm: Adapt RV 5.11 change from SV to IV, detect ROK at B::IV::save.\n\t  Fixes test 16.\n\tAdded -DW for walk, together with -Dp only.\n\tForced fullname optimization scalars for B::CC.\n\tExport save_sig and fixup_ppaddr for CC.\n",
          "style" => "*",
          "text" => "C.pm: Adapt RV 5.11 change from SV to IV, detect ROK at B::IV::save. Fixes test 16. Added -DW for walk, together with -Dp only. Forced fullname optimization scalars for B::CC. Export save_sig and fixup_ppaddr for CC."
        },
        {
          "line" => 889,
          "raw" => "\t* CC.pm (1.03): Fixed Perl_gv_SVadd cast warning.\n\tAdded most B::C optimizations. This fixes all threaded tests 15 >= 5.10.\n\tCall save_sig, fixup_ppaddr not yet.\n",
          "style" => "*",
          "text" => "CC.pm (1.03): Fixed Perl_gv_SVadd cast warning. Added most B::C optimizations. This fixes all threaded tests 15 >= 5.10. Call save_sig, fixup_ppaddr not yet."
        },
        {
          "line" => 892,
          "raw" => "\t* t/test.pl: simplified (and fixed) keep logic\n",
          "style" => "*",
          "text" => "t/test.pl: simplified (and fixed) keep logic"
        },
        {
          "line" => 893,
          "raw" => "\t* t/c_argv.t: cleanup\n\n",
          "style" => "*",
          "text" => "t/c_argv.t: cleanup"
        }
      ],
      "line" => 882,
      "note" => "rurban",
      "raw" => "1.11\t2009-12-29 rurban\n",
      "raw_date" => "2009-12-29",
      "version" => "1.11"
    },
    {
      "date" => "2009-12-29",
      "entries" => [
        {
          "line" => 896,
          "raw" => "\tFixed \@ARGV\n",
          "style" => "",
          "text" => "Fixed \@ARGV"
        },
        {
          "line" => 897,
          "raw" => "\t* C.pm: fixed couple of minor bugs detected with new t/testcore.t:\n\t  t/CORE/comp/retainedlines.t => Use of uninitialized value \$len, save_hek\n\t  Use of uninitialized value \$i in printf at C.pm line 49\n\t  Undefined value assigned to typeglob at C.pm line 2901\n\tDo not overwrite run-time \@ARGV on >= 5.10 (GP and AV). Fixes test c_argv.t\n",
          "style" => "*",
          "text" => "C.pm: fixed couple of minor bugs detected with new t/testcore.t: t/CORE/comp/retainedlines.t => Use of uninitialized value \$len, save_hek Use of uninitialized value \$i in printf at C.pm line 49 Undefined value assigned to typeglob at C.pm line 2901 Do not overwrite run-time \@ARGV on >= 5.10 (GP and AV). Fixes test c_argv.t"
        },
        {
          "line" => 902,
          "raw" => "\t* t/testcore.t: added\n",
          "style" => "*",
          "text" => "t/testcore.t: added"
        },
        {
          "line" => 903,
          "raw" => "\t* t/c_argv.t: added. test \@ARGV and perlcc\n",
          "style" => "*",
          "text" => "t/c_argv.t: added. test \@ARGV and perlcc"
        },
        {
          "line" => 904,
          "raw" => "\t* perlcc (2.06): grab_stash only via new -stash, not automatically;\n\t  B::C is better.\n\tldopts -std only when modules are given.\n\tfix for empty options.\n\tadd -sharedxs, -sharedlib; -shared is now for shared linkage,\n\t  -sharedlib to create a shared lib (was -shared before but never worked),\n\t  -sharedxs to also link shared xsubs, no run-time DynaLoader/XSLoader needed.\n\n",
          "style" => "*",
          "text" => "perlcc (2.06): grab_stash only via new -stash, not automatically; B::C is better. ldopts -std only when modules are given. fix for empty options. add -sharedxs, -sharedlib; -shared is now for shared linkage, -sharedlib to create a shared lib (was -shared before but never worked), -sharedxs to also link shared xsubs, no run-time DynaLoader/XSLoader needed."
        }
      ],
      "line" => 895,
      "note" => "rurban",
      "raw" => "1.10\t2009-12-29 rurban\n",
      "raw_date" => "2009-12-29",
      "version" => "1.10"
    },
    {
      "date" => "2009-12-27",
      "entries" => [
        {
          "line" => 913,
          "raw" => "\t* C.pm: Cut down the number of AUTOLOAD'ed optrees, search only on\n\t  empty gv->cv (31).\n\tAdded very unsafe -O4/-fcop to eliminate most cops and file + line numbers.\n\tAdded faster -fav-init to -O2, less unneeded av_extend().\n\tGet rid of fbm_compile (11). Only 5.8.9 is broken.\n",
          "style" => "*",
          "text" => "C.pm: Cut down the number of AUTOLOAD'ed optrees, search only on empty gv->cv (31). Added very unsafe -O4/-fcop to eliminate most cops and file + line numbers. Added faster -fav-init to -O2, less unneeded av_extend(). Get rid of fbm_compile (11). Only 5.8.9 is broken."
        },
        {
          "line" => 918,
          "raw" => "\t* CC.pm (1.02): partially fix eval \"\" for >=5.8.9, wrong CORE cc_runtime.h\n\t  definition. (test 29 - eval \"\")\n",
          "style" => "*",
          "text" => "CC.pm (1.02): partially fix eval \"\" for >=5.8.9, wrong CORE cc_runtime.h definition. (test 29 - eval \"\")"
        },
        {
          "line" => 920,
          "raw" => "\t* t/test.pl, t/c*.t: Simplify C/CC testsuite.\n",
          "style" => "*",
          "text" => "t/test.pl, t/c*.t: Simplify C/CC testsuite."
        },
        {
          "line" => 921,
          "raw" => "\t* t/testc.sh: fixed -E\n\tAdded -o for orig, no -Mblib\n",
          "style" => "*",
          "text" => "t/testc.sh: fixed -E Added -o for orig, no -Mblib"
        },
        {
          "line" => 923,
          "raw" => "\t* t/c_o3.t, t/c_o4.t: added\n\n",
          "style" => "*",
          "text" => "t/c_o3.t, t/c_o4.t: added"
        }
      ],
      "line" => 912,
      "note" => "rurban",
      "raw" => "1.09\t2009-12-27 rurban\n",
      "raw_date" => "2009-12-27",
      "version" => "1.09"
    },
    {
      "date" => "2009-12-23",
      "entries" => [
        {
          "line" => 926,
          "raw" => "\tAdapt coding guidelines, add C and cperl coda. Reformat sources.\n\n",
          "style" => "",
          "text" => "Adapt coding guidelines, add C and cperl coda. Reformat sources."
        },
        {
          "line" => 928,
          "raw" => "\t* C.pm: Detect AUTOLOAD and CLONE (test 27 and 31).\n\t  5.10 is now the best release for unoptimized B::C. 5.8 is faster optimized,\n\t  but misses some autoloaded xsubs.\n\t  Simplify PVMG exclusion; all non-magical, not just PAD_OUR, as in Bytecode.\n",
          "style" => "*",
          "text" => "C.pm: Detect AUTOLOAD and CLONE (test 27 and 31). 5.10 is now the best release for unoptimized B::C. 5.8 is faster optimized, but misses some autoloaded xsubs. Simplify PVMG exclusion; all non-magical, not just PAD_OUR, as in Bytecode."
        },
        {
          "line" => 932,
          "raw" => "\t* Bytecode.pm (1.04): Add missing BM logic to GV >= 5.10. Fixes test 11.\n\tFixed op_pmflags logic for 5.10 threaded only, no += 2. Fixes test 2.\n\tProtect empty match from setting op_reflags. Fixes test 20.\n\tAdd perlversion to the -S generated header.\n\tDocument more options -TI, -TF, -u<package>\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.04): Add missing BM logic to GV >= 5.10. Fixes test 11. Fixed op_pmflags logic for 5.10 threaded only, no += 2. Fixes test 2. Protect empty match from setting op_reflags. Fixes test 20. Add perlversion to the -S generated header. Document more options -TI, -TF, -u<package>"
        },
        {
          "line" => 937,
          "raw" => "\t* perlcc: improve help. use Pod::Usage as module, not via cmdline.\n\tfix previous installation quirks.\n",
          "style" => "*",
          "text" => "perlcc: improve help. use Pod::Usage as module, not via cmdline. fix previous installation quirks."
        },
        {
          "line" => 939,
          "raw" => "\t* assemble: improve pod. make it installable.\n",
          "style" => "*",
          "text" => "assemble: improve pod. make it installable."
        },
        {
          "line" => 940,
          "raw" => "\t* disassemble: make it installable.\n",
          "style" => "*",
          "text" => "disassemble: make it installable."
        },
        {
          "line" => 941,
          "raw" => "\t* cc_harness: ditto.\n",
          "style" => "*",
          "text" => "cc_harness: ditto."
        },
        {
          "line" => 942,
          "raw" => "\t* Makefile.PL: added script/* as EXE_FILES to install them.\n",
          "style" => "*",
          "text" => "Makefile.PL: added script/* as EXE_FILES to install them."
        },
        {
          "line" => 943,
          "raw" => "\t* t/TESTS, t/testc.sh, t/testplc.sh: test 31 non-xs AUTOLOAD added\n",
          "style" => "*",
          "text" => "t/TESTS, t/testc.sh, t/testplc.sh: test 31 non-xs AUTOLOAD added"
        },
        {
          "line" => 944,
          "raw" => "\t* ByteLoader/Makefile: tuning, bytecode.h triggers now byterun.c\n",
          "style" => "*",
          "text" => "ByteLoader/Makefile: tuning, bytecode.h triggers now byterun.c"
        },
        {
          "line" => 945,
          "raw" => "\t* bytecode.h: Specialize pregcomp on 5.10; add PL_regex_pad[0] for\n\t  pregcomp if missing. fixes tests 3,4,5,7,31 on 5.10.\n\n",
          "style" => "*",
          "text" => "bytecode.h: Specialize pregcomp on 5.10; add PL_regex_pad[0] for pregcomp if missing. fixes tests 3,4,5,7,31 on 5.10."
        }
      ],
      "line" => 925,
      "note" => "rurban",
      "raw" => "1.08\t2009-12-23 rurban\n",
      "raw_date" => "2009-12-23",
      "version" => "1.08"
    },
    {
      "date" => "2009-12-19",
      "entries" => [
        {
          "line" => 949,
          "raw" => "\t* C.pm: fix fbm_compile (INDEX) for >= 5.10. gv_list is already a pointer.\n\t  rewrite PVGV (ie PVBM) init for >= 5.10. (test 11)\n\tAdded CV->save_magic (untested)\n\tFixed two wrong my decelarations detected by the new Od debugger.\n",
          "style" => "*",
          "text" => "C.pm: fix fbm_compile (INDEX) for >= 5.10. gv_list is already a pointer. rewrite PVGV (ie PVBM) init for >= 5.10. (test 11) Added CV->save_magic (untested) Fixed two wrong my decelarations detected by the new Od debugger."
        },
        {
          "line" => 953,
          "raw" => "\t* README: Clarify DIFFERENCES section for CC only. Esp. the\n\tContext of \"..\" section. New test 30\n",
          "style" => "*",
          "text" => "README: Clarify DIFFERENCES section for CC only. Esp. the Context of \"..\" section. New test 30"
        },
        {
          "line" => 955,
          "raw" => "\t* t/TESTS, t/testc.sh, t/testplc.sh: test 30 added for Context of \"..\"\n",
          "style" => "*",
          "text" => "t/TESTS, t/testc.sh, t/testplc.sh: test 30 added for Context of \"..\""
        },
        {
          "line" => 956,
          "raw" => "\t* t/testc.sh: fix -k logic, keep .pl for -O tests\n\n",
          "style" => "*",
          "text" => "t/testc.sh: fix -k logic, keep .pl for -O tests"
        }
      ],
      "line" => 948,
      "note" => "rurban",
      "raw" => "1.07\t2009-12-19 rurban\n",
      "raw_date" => "2009-12-19",
      "version" => "1.07"
    },
    {
      "date" => "2009-12-18",
      "entries" => [
        {
          "line" => 959,
          "raw" => "\tGoing public on the Perl birthday\n",
          "style" => "",
          "text" => "Going public on the Perl birthday"
        },
        {
          "line" => 960,
          "raw" => "\tThe first public compiler re-release since it was removed from CORE.\n\n",
          "style" => "",
          "text" => "The first public compiler re-release since it was removed from CORE."
        },
        {
          "line" => 962,
          "raw" => "\t* C.pm: Had to disable -O1 -fcog (pv_copy_on_grow) on 5.10 and higher\n\t  until I find out how to fool S_unshare_hek_or_pvn. This fixes all C\n\t  -O1 and -O2 tests. Warn about this.\n\tFix wrong RV init on *5.10* for test 29 also, as with 5.11.\n\tSimplify __DATA__ handling. Warn when -O3 or -fsava-data is missing.\n\t  Enable working -fsava-data on 5.8 and 5.10 threaded. Fixes couple of tests 15.\n\tFix 5.8/5.10 PVMG pv = &PL_sv_undef for empty comppadnames\n",
          "style" => "*",
          "text" => "C.pm: Had to disable -O1 -fcog (pv_copy_on_grow) on 5.10 and higher until I find out how to fool S_unshare_hek_or_pvn. This fixes all C -O1 and -O2 tests. Warn about this. Fix wrong RV init on *5.10* for test 29 also, as with 5.11. Simplify __DATA__ handling. Warn when -O3 or -fsava-data is missing. Enable working -fsava-data on 5.8 and 5.10 threaded. Fixes couple of tests 15. Fix 5.8/5.10 PVMG pv = &PL_sv_undef for empty comppadnames"
        },
        {
          "line" => 969,
          "raw" => "\t* t/testc.sh: -k keep added. Delete temporaries on PASS as new default.\n\t-E added. Dump preprocessed source file with cc -E as _E.c (was default before)\n",
          "style" => "*",
          "text" => "t/testc.sh: -k keep added. Delete temporaries on PASS as new default. -E added. Dump preprocessed source file with cc -E as _E.c (was default before)"
        },
        {
          "line" => 971,
          "raw" => "\t* Version bump to official:\n\t  B::C 1.06 (1.05 is in 5.8.9)\n\t  B::CC 1.01\n\t  B::Bytecode 1.03\n\t  B::Asmdata 1.03\n\t  B::Assembler 0.09\n\t  B::Disassembler 1.06\n\t  B::Bblock 1.03\n\t  ByteLoader 0.07\n\n",
          "style" => "*",
          "text" => "Version bump to official: B::C 1.06 (1.05 is in 5.8.9) B::CC 1.01 B::Bytecode 1.03 B::Asmdata 1.03 B::Assembler 0.09 B::Disassembler 1.06 B::Bblock 1.03 ByteLoader 0.07"
        }
      ],
      "line" => 958,
      "note" => "rurban",
      "raw" => "1.06\t2009-12-18 rurban\n",
      "raw_date" => "2009-12-18",
      "version" => "1.06"
    },
    {
      "date" => "2009-12-17",
      "entries" => [
        {
          "line" => 982,
          "raw" => "\t* t/cc*.t: skip some memory eating failing tests.\n",
          "style" => "*",
          "text" => "t/cc*.t: skip some memory eating failing tests."
        },
        {
          "line" => 983,
          "raw" => "\t* MANIFEST: dummy lib/B/Asmdata.pm added to fix cpan smokes on BSD.\n\tThanks to Slaven Rezic.\n",
          "style" => "*",
          "text" => "MANIFEST: dummy lib/B/Asmdata.pm added to fix cpan smokes on BSD. Thanks to Slaven Rezic."
        },
        {
          "line" => 985,
          "raw" => "\t* C.pm: fix tests 14,16,23 on >=5.10, missing AV magic for\n\t  CV main::a, protect PVMG from SvPAD_OUR.\n\tfix wrong RV init on 5.11 for test 29\n",
          "style" => "*",
          "text" => "C.pm: fix tests 14,16,23 on >=5.10, missing AV magic for CV main::a, protect PVMG from SvPAD_OUR. fix wrong RV init on 5.11 for test 29"
        },
        {
          "line" => 988,
          "raw" => "\t* CC.pm: fix ARGS >=5.10 (in require, test 28).\n\tEnable quiet. No -q for quiet, just -v (verbose) or any -D switch turns\n\t  on verbose.\n",
          "style" => "*",
          "text" => "CC.pm: fix ARGS >=5.10 (in require, test 28). Enable quiet. No -q for quiet, just -v (verbose) or any -D switch turns on verbose."
        },
        {
          "line" => 991,
          "raw" => "\t* t/testc.sh: Added test 27 (import), test 28 (require), test 29 (use)\n",
          "style" => "*",
          "text" => "t/testc.sh: Added test 27 (import), test 28 (require), test 29 (use)"
        },
        {
          "line" => 992,
          "raw" => "\t[Nick Koston]\n\n",
          "style" => "[]",
          "text" => "Nick Koston"
        }
      ],
      "line" => 981,
      "note" => "rurban",
      "raw" => "1.04_33\t2009-12-17 rurban\n",
      "raw_date" => "2009-12-17",
      "version" => "1.04_33"
    },
    {
      "date" => "2009-12-14",
      "entries" => [
        {
          "line" => 995,
          "raw" => "\tOnly two 5.10 B::C bugs remaining!\n\n",
          "style" => "",
          "text" => "Only two 5.10 B::C bugs remaining!"
        },
        {
          "line" => 997,
          "raw" => "\t* C.pm: added missing FBM logic to GV >= 5.10 (test 11).\n\tForbid MAGIC on non-magival SVs >= 5.10 (tests 14 + 23).\n\tSpecial PVMG PL_sv_undef string. (namesv problem on 10,14,23)\n\n",
          "style" => "*",
          "text" => "C.pm: added missing FBM logic to GV >= 5.10 (test 11). Forbid MAGIC on non-magival SVs >= 5.10 (tests 14 + 23). Special PVMG PL_sv_undef string. (namesv problem on 10,14,23)"
        }
      ],
      "line" => 994,
      "note" => "rurban",
      "raw" => "1.04_32\t2009-12-14 rurban\n",
      "raw_date" => "2009-12-14",
      "version" => "1.04_32"
    },
    {
      "date" => "2009-12-14",
      "entries" => [
        {
          "line" => 1002,
          "raw" => "\t* C.pm: fix test 21 on 5.10 \"Bad free() ignored\". Dynamically\n\tallocate CopLABEL.\n",
          "style" => "*",
          "text" => "C.pm: fix test 21 on 5.10 \"Bad free() ignored\". Dynamically allocate CopLABEL."
        },
        {
          "line" => 1004,
          "raw" => "\t* Makefile.PL: fix the make depend section > 5.9\n",
          "style" => "*",
          "text" => "Makefile.PL: fix the make depend section > 5.9"
        },
        {
          "line" => 1005,
          "raw" => "\t* t/testc.sh: fix -D option\n\n",
          "style" => "*",
          "text" => "t/testc.sh: fix -D option"
        }
      ],
      "line" => 1001,
      "note" => "rurban",
      "raw" => "1.04_31\t2009-12-14 rurban\n",
      "raw_date" => "2009-12-14",
      "version" => "1.04_31"
    },
    {
      "date" => "2009-12-13",
      "entries" => [
        {
          "line" => 1008,
          "raw" => "\tBetter 5.6 support, but Bytecode compiler still disabled.\n",
          "style" => "",
          "text" => "Better 5.6 support, but Bytecode compiler still disabled."
        },
        {
          "line" => 1009,
          "raw" => "\tNot even the Byteloader works for 5.6 assembled code. The Disassembler\n",
          "style" => "",
          "text" => "Not even the Byteloader works for 5.6 assembled code. The Disassembler"
        },
        {
          "line" => 1010,
          "raw" => "\tdoes not stop at ret. Fixed several C tests.\n\n",
          "style" => "",
          "text" => "does not stop at ret. Fixed several C tests."
        },
        {
          "line" => 1012,
          "raw" => "\t* bytecode.pl: renumbering policy: <= 5.6 squeeze, >= 5.8 fixed\n\tto force exact bytecode numbering as with 5.8.\n\tAllow float versions, such as 10.001 for subreleases.\n\n",
          "style" => "*",
          "text" => "bytecode.pl: renumbering policy: <= 5.6 squeeze, >= 5.8 fixed to force exact bytecode numbering as with 5.8. Allow float versions, such as 10.001 for subreleases."
        },
        {
          "line" => 1016,
          "raw" => "\tAdd perlversion to header.\n",
          "style" => "",
          "text" => "Add perlversion to header."
        },
        {
          "line" => 1017,
          "raw" => "\tAdd byteorder check logic.\n\n",
          "style" => "",
          "text" => "Add byteorder check logic."
        },
        {
          "line" => 1019,
          "raw" => "\tAdded logic to include all possible unsupported ops, all holes.\n",
          "style" => "",
          "text" => "Added logic to include all possible unsupported ops, all holes."
        },
        {
          "line" => 1020,
          "raw" => "\tbytecode table checked for 5.6.1, 5.6.2, 5.8.0, 5.8.1-5.11\n",
          "style" => "",
          "text" => "bytecode table checked for 5.6.1, 5.6.2, 5.8.0, 5.8.1-5.11"
        },
        {
          "line" => 1021,
          "raw" => "\tNote, that I found official and contradicting 5.6.1 releases.\n",
          "style" => "",
          "text" => "Note, that I found official and contradicting 5.6.1 releases."
        },
        {
          "line" => 1022,
          "raw" => "\tActiveState 5.6.1.626 had no op_children, the unix release tarball\n",
          "style" => "",
          "text" => "ActiveState 5.6.1.626 had no op_children, the unix release tarball"
        },
        {
          "line" => 1023,
          "raw" => "\twith 5.6.1 (called Trial 1) still has it.\n\n",
          "style" => "",
          "text" => "with 5.6.1 (called Trial 1) still has it."
        },
        {
          "line" => 1025,
          "raw" => "\t* ByteLoader.pm (1.06_06): better bytecode numbering.\n",
          "style" => "*",
          "text" => "ByteLoader.pm (1.06_06): better bytecode numbering."
        },
        {
          "line" => 1026,
          "raw" => "\t* Asmdata.pm (1.02_02): strict numbering along 5.8.\n\tUnsupported ops are now also included, with PUT method 0.\n",
          "style" => "*",
          "text" => "Asmdata.pm (1.02_02): strict numbering along 5.8. Unsupported ops are now also included, with PUT method 0."
        },
        {
          "line" => 1028,
          "raw" => "\t* Assembler.pm (0.07_07): Add perlversion to header\n",
          "style" => "*",
          "text" => "Assembler.pm (0.07_07): Add perlversion to header"
        },
        {
          "line" => 1029,
          "raw" => "\t* Disassembler.pm (1.05_04): Add perlversion to header.\n\tPrint header only for existing.\n",
          "style" => "*",
          "text" => "Disassembler.pm (1.05_04): Add perlversion to header. Print header only for existing."
        },
        {
          "line" => 1031,
          "raw" => "\t* BcVersions/Asm*.pm, BcVersions.pod: added for most versions with the\n\tCORE compiler.\n",
          "style" => "*",
          "text" => "BcVersions/Asm*.pm, BcVersions.pod: added for most versions with the CORE compiler."
        },
        {
          "line" => 1033,
          "raw" => "\t* disassemble: Make it work with the older Disassembler.\n\tMake it work with older bytecode >= 5.8 via Asmdata unsupported ops.\n",
          "style" => "*",
          "text" => "disassemble: Make it work with the older Disassembler. Make it work with older bytecode >= 5.8 via Asmdata unsupported ops."
        },
        {
          "line" => 1035,
          "raw" => "\t* i386.xs, jitcompiler.pl: removed (seperate module)\n",
          "style" => "*",
          "text" => "i386.xs, jitcompiler.pl: removed (seperate module)"
        },
        {
          "line" => 1036,
          "raw" => "\t* bytecode.h, C.xs: Fixed for 5.6, tested with 5.6.1 with MSVC.\n",
          "style" => "*",
          "text" => "bytecode.h, C.xs: Fixed for 5.6, tested with 5.6.1 with MSVC."
        },
        {
          "line" => 1037,
          "raw" => "\t* bytecode.h, byterun.c: add static int force = 0. Override it to 1 to\n\ttry out executing older bytecodes.\n\n",
          "style" => "*",
          "text" => "bytecode.h, byterun.c: add static int force = 0. Override it to 1 to try out executing older bytecodes."
        },
        {
          "line" => 1040,
          "raw" => "\t* C.pm: fix test 16 on 5.10 again, non-threaded only (GVAV magic).\n\t  first fix in 1.04_24, broken in 1.04_28. On 5.11 I have a broken\n\t  RV handling here.\n\tRemove version and Regexp::DESTROY from the automatic methods\n\t(experimental).\n\tFirst attempts with pv and hek consting failed.\n",
          "style" => "*",
          "text" => "C.pm: fix test 16 on 5.10 again, non-threaded only (GVAV magic). first fix in 1.04_24, broken in 1.04_28. On 5.11 I have a broken RV handling here. Remove version and Regexp::DESTROY from the automatic methods (experimental). First attempts with pv and hek consting failed."
        },
        {
          "line" => 1046,
          "raw" => "\t* t/testc.sh, t/testplc.sh: support proper cmdline arguments, add -h for\n\thelp\n\tFixed test 5 by fixing the wrong test.\n",
          "style" => "*",
          "text" => "t/testc.sh, t/testplc.sh: support proper cmdline arguments, add -h for help Fixed test 5 by fixing the wrong test."
        },
        {
          "line" => 1049,
          "raw" => "\t* perloptree.pod: renamed from perloptreeguts.pod. Added links.\n\n",
          "style" => "*",
          "text" => "perloptree.pod: renamed from perloptreeguts.pod. Added links."
        }
      ],
      "line" => 1007,
      "note" => "rurban",
      "raw" => "1.04_30 2009-12-13 rurban\n",
      "raw_date" => "2009-12-13",
      "version" => "1.04_30"
    },
    {
      "date" => "2009-12-07",
      "entries" => [
        {
          "line" => 1052,
          "raw" => "\tDisable the Bytecode compiler for 5.6. Fixed besides the __DATA__ handle\n\t  (test 15) all remaining 5.8 C bugs.\n",
          "style" => "",
          "text" => "Disable the Bytecode compiler for 5.6. Fixed besides the __DATA__ handle (test 15) all remaining 5.8 C bugs."
        },
        {
          "line" => 1054,
          "raw" => "\t* C.pm: assign the PVX of GV also for empty stashes (main::) to avoid\n\t  destruction failures at Perl_pad_undef() SvPVX_const(namesv) == '&'.\n\tFixes tests 14 and 23\n",
          "style" => "*",
          "text" => "C.pm: assign the PVX of GV also for empty stashes (main::) to avoid destruction failures at Perl_pad_undef() SvPVX_const(namesv) == '&'. Fixes tests 14 and 23"
        },
        {
          "line" => 1057,
          "raw" => "\t* byterun.c: No assert on empty bs_sv, it is &PL_sv_undef.\n\tMap missing -Dv on 5.6 to -Df i.e. -D256\n\tAdded better debugging output: setter values.\n",
          "style" => "*",
          "text" => "byterun.c: No assert on empty bs_sv, it is &PL_sv_undef. Map missing -Dv on 5.6 to -Df i.e. -D256 Added better debugging output: setter values."
        },
        {
          "line" => 1060,
          "raw" => "\t* STATUS: re-run CORE tests, list cmdlines, update status\n",
          "style" => "*",
          "text" => "STATUS: re-run CORE tests, list cmdlines, update status"
        },
        {
          "line" => 1061,
          "raw" => "\t* Disassembler.pm: added gen_header_hash() for gen_header output.\n\t  add to documentation.\n",
          "style" => "*",
          "text" => "Disassembler.pm: added gen_header_hash() for gen_header output. add to documentation."
        },
        {
          "line" => 1063,
          "raw" => "\t* Bytecode.pm: -S uses gen_header_hash for gen_header output.\n\n",
          "style" => "*",
          "text" => "Bytecode.pm: -S uses gen_header_hash for gen_header output."
        }
      ],
      "line" => 1051,
      "note" => "rurban",
      "raw" => "1.04_29 2009-12-07 rurban\n",
      "raw_date" => "2009-12-07",
      "version" => "1.04_29"
    },
    {
      "date" => "2009-12-06",
      "entries" => [
        {
          "line" => 1066,
          "raw" => "\t* C.pm: fix -fcog (Copy on Grow with -O1 and -O2) for >= 5.10 by a new\n\t  SVPV.\n\tStatically initialize PVs with a union layout trick. Use char* as first\n\t  union member.\n\tRevert xpvcv+svsect changes to pre-initialize those structs against\n\t  gvcv recursion.\n",
          "style" => "*",
          "text" => "C.pm: fix -fcog (Copy on Grow with -O1 and -O2) for >= 5.10 by a new SVPV. Statically initialize PVs with a union layout trick. Use char* as first union member. Revert xpvcv+svsect changes to pre-initialize those structs against gvcv recursion."
        },
        {
          "line" => 1072,
          "raw" => "\t* t/b.t, t/o.t, t/stash.t: fix tests for 5.6.2\n",
          "style" => "*",
          "text" => "t/b.t, t/o.t, t/stash.t: fix tests for 5.6.2"
        },
        {
          "line" => 1073,
          "raw" => "\t* bytecode.c: byteorder swab only if same length.\n\t1234 => 4321, 12345678 => 87654321.\n\tSkip a 0x prefix for byteorder in the header. Perl 5.6 had this.\n",
          "style" => "*",
          "text" => "bytecode.c: byteorder swab only if same length. 1234 => 4321, 12345678 => 87654321. Skip a 0x prefix for byteorder in the header. Perl 5.6 had this."
        },
        {
          "line" => 1076,
          "raw" => "\t* Assembler.pm (0.07_06): 5.6 byteorder fix: until 5.6 the\n\t  \$Config{byteorder} was falsely dependent on ivsize, we need longsize.\n\tAdd 0x to byteorder in header again, as with 5.6.\n",
          "style" => "*",
          "text" => "Assembler.pm (0.07_06): 5.6 byteorder fix: until 5.6 the \$Config{byteorder} was falsely dependent on ivsize, we need longsize. Add 0x to byteorder in header again, as with 5.6."
        },
        {
          "line" => 1079,
          "raw" => "\t* t/testc.sh: do not run old leftovers. some 5.6 optimizations\n",
          "style" => "*",
          "text" => "t/testc.sh: do not run old leftovers. some 5.6 optimizations"
        },
        {
          "line" => 1080,
          "raw" => "\t* t/c_o1.t, t/c_o2.t, t/cc_o2.t, t/cc_o2.t: added\n",
          "style" => "*",
          "text" => "t/c_o1.t, t/c_o2.t, t/cc_o2.t, t/cc_o2.t: added"
        },
        {
          "line" => 1081,
          "raw" => "\t* t/test.pl: support -O1 and -O2\n",
          "style" => "*",
          "text" => "t/test.pl: support -O1 and -O2"
        },
        {
          "line" => 1082,
          "raw" => "\t* broke ByteLoader\n\n",
          "style" => "*",
          "text" => "broke ByteLoader"
        }
      ],
      "line" => 1065,
      "note" => "rurban",
      "raw" => "1.04_28 2009-12-06 rurban\n",
      "raw_date" => "2009-12-06",
      "version" => "1.04_28"
    },
    {
      "date" => "2009-12-04",
      "entries" => [
        {
          "line" => 1085,
          "raw" => "\t* CC.pm (1.02_03): fixed endless loop in optimized sort. The sortcv\n\t  cmp needed a return NULL (test 19).\n",
          "style" => "*",
          "text" => "CC.pm (1.02_03): fixed endless loop in optimized sort. The sortcv cmp needed a return NULL (test 19)."
        },
        {
          "line" => 1087,
          "raw" => "\t* c.t, cc.t: add failing tests as TODOs\n\n",
          "style" => "*",
          "text" => "c.t, cc.t: add failing tests as TODOs"
        }
      ],
      "line" => 1084,
      "note" => "rurban",
      "raw" => "1.04_27 2009-12-04 rurban\n",
      "raw_date" => "2009-12-04",
      "version" => "1.04_27"
    },
    {
      "date" => "2009-12-02",
      "entries" => [
        {
          "line" => 1090,
          "raw" => "\t* C.pm: remove nv->IVX for 5.10 (Can't locate object method \"IVX\" via\n\t  package \"B::NV\").\n\tprotect mg->OBJ when SCALAR (Can't call method \"save\" on unblessed\n\t  reference).\n\tfix NV isa IV, to fix test 23 (Nick Koston).\n\tfix CopLABEL for 5.11 (test 21)\n\tfix PMOP extflags, esp. for split on >= 5.10 (test 5 + 7)\n\tadd fbm_compile() to BM::save >= 5.8 (test 11) (Nick Koston)\n",
          "style" => "*",
          "text" => "C.pm: remove nv->IVX for 5.10 (Can't locate object method \"IVX\" via package \"B::NV\"). protect mg->OBJ when SCALAR (Can't call method \"save\" on unblessed reference). fix NV isa IV, to fix test 23 (Nick Koston). fix CopLABEL for 5.11 (test 21) fix PMOP extflags, esp. for split on >= 5.10 (test 5 + 7) add fbm_compile() to BM::save >= 5.8 (test 11) (Nick Koston)"
        },
        {
          "line" => 1098,
          "raw" => "\t* t/c.t, t/testc.sh: added tests 23, 24 (Nick Koston)\n",
          "style" => "*",
          "text" => "t/c.t, t/testc.sh: added tests 23, 24 (Nick Koston)"
        },
        {
          "line" => 1099,
          "raw" => "\t* Bytecode.pm (1.02_04), bytecode.h: store and set PMOP reflags\n\t  as U32. Fixes tests 2-4,7\n\tStart of backporting Perl 5.6\n\n",
          "style" => "*",
          "text" => "Bytecode.pm (1.02_04), bytecode.h: store and set PMOP reflags as U32. Fixes tests 2-4,7 Start of backporting Perl 5.6"
        }
      ],
      "line" => 1089,
      "note" => "rurban",
      "raw" => "1.04_26 2009-12-02 rurban\n",
      "raw_date" => "2009-12-02",
      "version" => "1.04_26"
    },
    {
      "date" => "2009-11-30",
      "entries" => [
        {
          "line" => 1104,
          "raw" => "\t* C.pm: fixed IO for 5.11: LINES => IVX.\n\tspecialize GvLINES = -1 and protect against U32 signed-ness.\n\tfixed test 8 main::AUTOLOAD (unoptimized only)\n",
          "style" => "*",
          "text" => "C.pm: fixed IO for 5.11: LINES => IVX. specialize GvLINES = -1 and protect against U32 signed-ness. fixed test 8 main::AUTOLOAD (unoptimized only)"
        },
        {
          "line" => 1107,
          "raw" => "\t* t/test.pl: enable -Mblib for all Perl versions.\n\tfix 5.6.2 ldopts by explicit checking of (-lperl|CORE\\/libperl5).\n\tmake test works now for 5.6.2\n",
          "style" => "*",
          "text" => "t/test.pl: enable -Mblib for all Perl versions. fix 5.6.2 ldopts by explicit checking of (-lperl|CORE\\/libperl5). make test works now for 5.6.2"
        },
        {
          "line" => 1110,
          "raw" => "\t* t/cc.t: adapt TODOs\n",
          "style" => "*",
          "text" => "t/cc.t: adapt TODOs"
        },
        {
          "line" => 1111,
          "raw" => "\t* t/c.t: add TODOs 15 for 5.6\n",
          "style" => "*",
          "text" => "t/c.t: add TODOs 15 for 5.6"
        },
        {
          "line" => 1112,
          "raw" => "\t* script/perlcc: a.exe for cygwin also\n\n",
          "style" => "*",
          "text" => "script/perlcc: a.exe for cygwin also"
        }
      ],
      "line" => 1103,
      "note" => "rurban",
      "raw" => "1.04_25 2009-11-30 rurban\n",
      "raw_date" => "2009-11-30",
      "version" => "1.04_25"
    },
    {
      "date" => "2009-11-29",
      "entries" => [
        {
          "line" => 1115,
          "raw" => "\t* C.pm: fixed more CV basics (test 9), just stash for autoload missing\n\t(test 8).\n\tPVLV adjusted, but no testcase yet.\n\tIO adjusted. Fixes test 4.\n\tre-enabled Perl 5.6, all tests but 8,15 pass with t/testc.sh. make test not.\n\tadded option -DO, more OP info than with -Do.\n\tadded saving \"main::\" CVs. Fixes test 16.\n\tFixed PMOP op_pmreplroot for >= 5.10 (for SUBST). No test\n",
          "style" => "*",
          "text" => "C.pm: fixed more CV basics (test 9), just stash for autoload missing (test 8). PVLV adjusted, but no testcase yet. IO adjusted. Fixes test 4. re-enabled Perl 5.6, all tests but 8,15 pass with t/testc.sh. make test not. added option -DO, more OP info than with -Do. added saving \"main::\" CVs. Fixes test 16. Fixed PMOP op_pmreplroot for >= 5.10 (for SUBST). No test"
        },
        {
          "line" => 1123,
          "raw" => "\t* t/TESTS, t/testc.sh: added 20 for qr// bug in 5.10\n",
          "style" => "*",
          "text" => "t/TESTS, t/testc.sh: added 20 for qr// bug in 5.10"
        },
        {
          "line" => 1124,
          "raw" => "\t* t/c.t: remove TODO status from tests 14-16\n\n",
          "style" => "*",
          "text" => "t/c.t: remove TODO status from tests 14-16"
        }
      ],
      "line" => 1114,
      "note" => "rurban",
      "raw" => "1.04_24 2009-11-29 rurban\n",
      "raw_date" => "2009-11-29",
      "version" => "1.04_24"
    },
    {
      "date" => "2009-11-22",
      "entries" => [
        {
          "line" => 1127,
          "raw" => "\t* yapc_bratislava08.pod: title fix\n",
          "style" => "*",
          "text" => "yapc_bratislava08.pod: title fix"
        },
        {
          "line" => 1128,
          "raw" => "\t* SIGNATURE: added\n",
          "style" => "*",
          "text" => "SIGNATURE: added"
        },
        {
          "line" => 1129,
          "raw" => "\t* C.pm: GvGP handling improved. added more sect comments.\n\tadded -u option \"unused\" not to print verbose debugging info\n\tfor unused subs.\n\tFixed CV XPVCVIX initialisation - off-by-one error, wrong CvFLAGS.\n\tFixes test 6.\n",
          "style" => "*",
          "text" => "C.pm: GvGP handling improved. added more sect comments. added -u option \"unused\" not to print verbose debugging info for unused subs. Fixed CV XPVCVIX initialisation - off-by-one error, wrong CvFLAGS. Fixes test 6."
        },
        {
          "line" => 1134,
          "raw" => "\t* run perltidy -i=2\n\n",
          "style" => "*",
          "text" => "run perltidy -i=2"
        }
      ],
      "line" => 1126,
      "note" => "rurban",
      "raw" => "1.04_23 2009-11-22 rurban\n",
      "raw_date" => "2009-11-22",
      "version" => "1.04_23"
    },
    {
      "date" => "2009-11-16",
      "entries" => [
        {
          "line" => 1137,
          "raw" => "\t* C.pm, CC.pm: fixed illegal pad in ASSERT_CURPAD_ACTIVE(\"pad_sv\")\n\twith DEBUGGING.\tSimply forgot to set PL_comppad\n\n",
          "style" => "*",
          "text" => "C.pm, CC.pm: fixed illegal pad in ASSERT_CURPAD_ACTIVE(\"pad_sv\") with DEBUGGING.\tSimply forgot to set PL_comppad"
        }
      ],
      "line" => 1136,
      "note" => "rurban",
      "raw" => "1.04_22 2009-11-16 rurban\n",
      "raw_date" => "2009-11-16",
      "version" => "1.04_22"
    },
    {
      "date" => "2009-11-07",
      "entries" => [
        {
          "line" => 1141,
          "raw" => "\t* yapc_bratislava08.pod: added\n",
          "style" => "*",
          "text" => "yapc_bratislava08.pod: added"
        },
        {
          "line" => 1142,
          "raw" => "\t* C.pm: fixed CALLREGCOMP >=5.10 by using dynamic newSVpvn as in ByteLoader\n\n",
          "style" => "*",
          "text" => "C.pm: fixed CALLREGCOMP >=5.10 by using dynamic newSVpvn as in ByteLoader"
        }
      ],
      "line" => 1140,
      "note" => "rurban",
      "raw" => "1.04_21 2009-11-07 rurban\n",
      "raw_date" => "2009-11-07",
      "version" => "1.04_21"
    },
    {
      "date" => "2008-06-25",
      "entries" => [
        {
          "line" => 1145,
          "raw" => "\t* t/TESTS: numbered.\n",
          "style" => "*",
          "text" => "t/TESTS: numbered."
        },
        {
          "line" => 1146,
          "raw" => "\t* t/TESTS: added sub FETCHSIZE to test 16. required now\n",
          "style" => "*",
          "text" => "t/TESTS: added sub FETCHSIZE to test 16. required now"
        },
        {
          "line" => 1147,
          "raw" => "\t* C.pm, CC.pm: change debug globals to hash.\n",
          "style" => "*",
          "text" => "C.pm, CC.pm: change debug globals to hash."
        },
        {
          "line" => 1148,
          "raw" => "\t* C.pm: Fix B::RV::save for 5.10\n",
          "style" => "*",
          "text" => "C.pm: Fix B::RV::save for 5.10"
        },
        {
          "line" => 1149,
          "raw" => "\t* CC.pm: 5.10 fixed GvSV to GvSVn (PERL_DONT_CREATE_GVSV), fix cc test 3+4 crash\n",
          "style" => "*",
          "text" => "CC.pm: 5.10 fixed GvSV to GvSVn (PERL_DONT_CREATE_GVSV), fix cc test 3+4 crash"
        },
        {
          "line" => 1150,
          "raw" => "\t* Artistic, Copying: added. Clarified perl license.\n",
          "style" => "*",
          "text" => "Artistic, Copying: added. Clarified perl license."
        },
        {
          "line" => 1151,
          "raw" => "\t* Bytecode.pm: fixed IO=>PVNV problem in test 15.\n",
          "style" => "*",
          "text" => "Bytecode.pm: fixed IO=>PVNV problem in test 15."
        },
        {
          "line" => 1152,
          "raw" => "\t* bytecode.pl, bytecode.h: rewrote gp_sv and gp_file setters\n\twith x (special setters). Fixes unshare hek assert in test 15, and force\n\tcreation of GVSV.\n",
          "style" => "*",
          "text" => "bytecode.pl, bytecode.h: rewrote gp_sv and gp_file setters with x (special setters). Fixes unshare hek assert in test 15, and force creation of GVSV."
        },
        {
          "line" => 1155,
          "raw" => "\t* Assembler.pm 0.07_05: cygwin text-mount fixes with \\r\\n\n",
          "style" => "*",
          "text" => "Assembler.pm 0.07_05: cygwin text-mount fixes with \\r\\n"
        },
        {
          "line" => 1156,
          "raw" => "\t* t/testplc.sh, t/testc.sh: require bash, accept testnumber args\n",
          "style" => "*",
          "text" => "t/testplc.sh, t/testc.sh: require bash, accept testnumber args"
        },
        {
          "line" => 1157,
          "raw" => "\t* Asmdata.pm: fix PORTABILITY docs\n",
          "style" => "*",
          "text" => "Asmdata.pm: fix PORTABILITY docs"
        },
        {
          "line" => 1158,
          "raw" => "\t* t/testc.sh: -Bdynamic: link to shared libperl\n",
          "style" => "*",
          "text" => "t/testc.sh: -Bdynamic: link to shared libperl"
        },
        {
          "line" => 1159,
          "raw" => "\t* cc_harness: simplify. fixed for -Bdynamic -E\n\n",
          "style" => "*",
          "text" => "cc_harness: simplify. fixed for -Bdynamic -E"
        }
      ],
      "line" => 1144,
      "note" => "rurban",
      "raw" => "1.04_20 2008-06-25 rurban\n",
      "raw_date" => "2008-06-25",
      "version" => "1.04_20"
    },
    {
      "date" => "2008-06-08",
      "entries" => [
        {
          "line" => 1162,
          "raw" => "\t* CC.pm: CXt_LOOP check rewrite, use now CxTYPE_no_LOOP()\n",
          "style" => "*",
          "text" => "CC.pm: CXt_LOOP check rewrite, use now CxTYPE_no_LOOP()"
        },
        {
          "line" => 1163,
          "raw" => "\t* CC.pm, t/*.t: useithreads, not usethreads\n",
          "style" => "*",
          "text" => "CC.pm, t/*.t: useithreads, not usethreads"
        },
        {
          "line" => 1164,
          "raw" => "\t* bytecode.t, test.pl: TODO handling: do not print \"ok 1 #\"\n",
          "style" => "*",
          "text" => "bytecode.t, test.pl: TODO handling: do not print \"ok 1 #\""
        },
        {
          "line" => 1165,
          "raw" => "\t* b.t: fixed skip logic, better skip message\n",
          "style" => "*",
          "text" => "b.t: fixed skip logic, better skip message"
        },
        {
          "line" => 1166,
          "raw" => "\t* Bblock: fixed to work without B::Concise (5.6.2)\n",
          "style" => "*",
          "text" => "Bblock: fixed to work without B::Concise (5.6.2)"
        },
        {
          "line" => 1167,
          "raw" => "\t* C.xs: add PM_GETRE for 5.6.2 and earlier\n",
          "style" => "*",
          "text" => "C.xs: add PM_GETRE for 5.6.2 and earlier"
        },
        {
          "line" => 1168,
          "raw" => "\t* CC.pm: Fix PP_EVAL hack from 1.04_18\n",
          "style" => "*",
          "text" => "CC.pm: Fix PP_EVAL hack from 1.04_18"
        },
        {
          "line" => 1169,
          "raw" => "\t* Bytecode: fixed IO::SUBPROCESS error (test 15)\n",
          "style" => "*",
          "text" => "Bytecode: fixed IO::SUBPROCESS error (test 15)"
        },
        {
          "line" => 1170,
          "raw" => "\t* cc_harness: check static libperl.a, else try dynamic. Support -E\n",
          "style" => "*",
          "text" => "cc_harness: check static libperl.a, else try dynamic. Support -E"
        },
        {
          "line" => 1171,
          "raw" => "\t* ByteLoader: support different byteorders (Disassembler not yet)\n",
          "style" => "*",
          "text" => "ByteLoader: support different byteorders (Disassembler not yet)"
        },
        {
          "line" => 1172,
          "raw" => "\t* ByteLoader, Assembler, bytecode.pl: add archflags to header, relax\n\t  platform strictness.\n",
          "style" => "*",
          "text" => "ByteLoader, Assembler, bytecode.pl: add archflags to header, relax platform strictness."
        },
        {
          "line" => 1174,
          "raw" => "\t* t/stash.t fixed for 5.10\n",
          "style" => "*",
          "text" => "t/stash.t fixed for 5.10"
        },
        {
          "line" => 1175,
          "raw" => "\t* Disassembler: added hashref return for get_header in scalar context.\n",
          "style" => "*",
          "text" => "Disassembler: added hashref return for get_header in scalar context."
        },
        {
          "line" => 1176,
          "raw" => "\t* Bytecode: fixed compiler crash/assertions for GV without GP (test 11)\n\n",
          "style" => "*",
          "text" => "Bytecode: fixed compiler crash/assertions for GV without GP (test 11)"
        }
      ],
      "line" => 1161,
      "note" => "rurban",
      "raw" => "1.04_19 2008-06-08 rurban\n",
      "raw_date" => "2008-06-08",
      "version" => "1.04_19"
    },
    {
      "date" => "2008-06-04",
      "entries" => [
        {
          "line" => 1179,
          "raw" => "\t* Fixed t/assembler.t on 5.6.2\n",
          "style" => "*",
          "text" => "Fixed t/assembler.t on 5.6.2"
        },
        {
          "line" => 1180,
          "raw" => "\t* Added ByteLoader::unimport (from 5.6.2)\n",
          "style" => "*",
          "text" => "Added ByteLoader::unimport (from 5.6.2)"
        },
        {
          "line" => 1181,
          "raw" => "\t* ByteLoader: Fixed bytecode crashes for 5.10+5.11 in 2-5,7 by\n\t  removing PMf_COMPILETIME from op_pmflags. Reason: empty\n\t  check_substr in INTUIT. (6 still failing)\n",
          "style" => "*",
          "text" => "ByteLoader: Fixed bytecode crashes for 5.10+5.11 in 2-5,7 by removing PMf_COMPILETIME from op_pmflags. Reason: empty check_substr in INTUIT. (6 still failing)"
        },
        {
          "line" => 1184,
          "raw" => "\t* ByteLoader: Fixes for 5.11 by using PM_SETRE (test 7 still failing)\n",
          "style" => "*",
          "text" => "ByteLoader: Fixes for 5.11 by using PM_SETRE (test 7 still failing)"
        },
        {
          "line" => 1185,
          "raw" => "\t* Bytecode: removed op_reflags. pregcomp with op_pmflags alone\n\t  is enough to reconstruct it.\n",
          "style" => "*",
          "text" => "Bytecode: removed op_reflags. pregcomp with op_pmflags alone is enough to reconstruct it."
        },
        {
          "line" => 1187,
          "raw" => "\t* C,CC: enabled static_ext + DynaLoader boot section again. Fixed in\n\tcygperl.\n",
          "style" => "*",
          "text" => "C,CC: enabled static_ext + DynaLoader boot section again. Fixed in cygperl."
        },
        {
          "line" => 1189,
          "raw" => "\t* CC: fixed Bug#55302 PP_EVAL by adding PP_EVAL_thr for threaded perl.\n\t  cc_runtime.h was always wrong on this!\n\n",
          "style" => "*",
          "text" => "CC: fixed Bug#55302 PP_EVAL by adding PP_EVAL_thr for threaded perl. cc_runtime.h was always wrong on this!"
        }
      ],
      "line" => 1178,
      "note" => "rurban",
      "raw" => "1.04_18 2008-06-04 rurban\n",
      "raw_date" => "2008-06-04",
      "version" => "1.04_18"
    },
    {
      "date" => "2008-04-20",
      "entries" => [
        {
          "line" => 1193,
          "raw" => "\tAdded Fedora Core 1 as test system (5.6.2, 5.8.3, 5.11.0\@33708 + valgrind)\n",
          "style" => "",
          "text" => "Added Fedora Core 1 as test system (5.6.2, 5.8.3, 5.11.0\@33708 + valgrind)"
        },
        {
          "line" => 1194,
          "raw" => "\t* ByteLoader: Fixed broken BYTEORDER check (for 32int)\n",
          "style" => "*",
          "text" => "ByteLoader: Fixed broken BYTEORDER check (for 32int)"
        },
        {
          "line" => 1195,
          "raw" => "\t* ByteLoader: Remove allowing older versions until we have\n\t  an opcode table for older versions.\n",
          "style" => "*",
          "text" => "ByteLoader: Remove allowing older versions until we have an opcode table for older versions."
        },
        {
          "line" => 1197,
          "raw" => "\t* ByteLoader: Fixed SIGSEGV with older gcc (3.3.2) at\n\t  bstate->bs_obj_list[0] = NULL\n",
          "style" => "*",
          "text" => "ByteLoader: Fixed SIGSEGV with older gcc (3.3.2) at bstate->bs_obj_list[0] = NULL"
        },
        {
          "line" => 1199,
          "raw" => "\t* ByteLoader, C.xs: Newx() support and more for older perl's.\n\t  Tested with 5.8.3\n",
          "style" => "*",
          "text" => "ByteLoader, C.xs: Newx() support and more for older perl's. Tested with 5.8.3"
        },
        {
          "line" => 1201,
          "raw" => "\t* bytecode.pl: Fixed <11 op_reflags (double definition)\n",
          "style" => "*",
          "text" => "bytecode.pl: Fixed <11 op_reflags (double definition)"
        },
        {
          "line" => 1202,
          "raw" => "\t* bytecode.pl: Support 8-10 version syntax (op_pmstash, cop_io)\n",
          "style" => "*",
          "text" => "bytecode.pl: Support 8-10 version syntax (op_pmstash, cop_io)"
        },
        {
          "line" => 1203,
          "raw" => "\t* Makefile.PL: added MKPATH blib/bin\n",
          "style" => "*",
          "text" => "Makefile.PL: added MKPATH blib/bin"
        },
        {
          "line" => 1204,
          "raw" => "\t* added ByteLoader/ppport.h\n",
          "style" => "*",
          "text" => "added ByteLoader/ppport.h"
        },
        {
          "line" => 1205,
          "raw" => "\t* fixed t/stash.t for 5.11\n\n",
          "style" => "*",
          "text" => "fixed t/stash.t for 5.11"
        }
      ],
      "line" => 1192,
      "note" => "rurban",
      "raw" => "1.04_17 2008-04-20 rurban\n",
      "raw_date" => "2008-04-20",
      "version" => "1.04_17"
    },
    {
      "date" => "2008-04-14",
      "entries" => [
        {
          "line" => 1208,
          "raw" => "\t* ByteLoader: Fix PL_tokenbuf for older perls without PL_parser\n",
          "style" => "*",
          "text" => "ByteLoader: Fix PL_tokenbuf for older perls without PL_parser"
        },
        {
          "entries" => [
            {
              "line" => 1210,
              "raw" => "\t  * Consistent in -v verbose and not verbose.\n",
              "style" => "*",
              "text" => "Consistent in -v verbose and not verbose."
            },
            {
              "line" => 1211,
              "raw" => "\t  * Workaround for invalid pad in save_context.\n",
              "style" => "*",
              "text" => "Workaround for invalid pad in save_context."
            },
            {
              "line" => 1212,
              "raw" => "\t  * Added -Dp for verbose package cache printing.\n",
              "style" => "*",
              "text" => "Added -Dp for verbose package cache printing."
            },
            {
              "line" => 1213,
              "raw" => "\t  * -v verbose adds more generated comments: op struct fields\n",
              "style" => "*",
              "text" => "-v verbose adds more generated comments: op struct fields"
            }
          ],
          "line" => 1209,
          "raw" => "\t* B::C: walkoptree_slow for verbose statistics op_count.\n",
          "style" => "*",
          "text" => "B::C: walkoptree_slow for verbose statistics op_count."
        },
        {
          "line" => 1214,
          "raw" => "\t* Fixed cop_label for 5.11 (Change #33656)\n",
          "style" => "*",
          "text" => "Fixed cop_label for 5.11 (Change #33656)"
        },
        {
          "line" => 1215,
          "raw" => "\t* Fixed make subdirs-test error in 5.8.8\n",
          "style" => "*",
          "text" => "Fixed make subdirs-test error in 5.8.8"
        },
        {
          "line" => 1216,
          "raw" => "\t* Fixed RT#52920 \"invalid cop_free of nullified cop\" for B::C\n\n",
          "style" => "*",
          "text" => "Fixed RT#52920 \"invalid cop_free of nullified cop\" for B::C"
        }
      ],
      "line" => 1207,
      "note" => "rurban",
      "raw" => "1.04_16 2008-04-14 rurban\n",
      "raw_date" => "2008-04-14",
      "version" => "1.04_16"
    },
    {
      "date" => "2008-04-11",
      "entries" => [
        {
          "line" => 1219,
          "raw" => "\tHighlights: bytecode and ByteLoader portability preparation and\n",
          "style" => "",
          "text" => "Highlights: bytecode and ByteLoader portability preparation and"
        },
        {
          "line" => 1220,
          "raw" => "\tcommented disassembler output. PVGV and new REGEX still broken.\n",
          "style" => "",
          "text" => "commented disassembler output. PVGV and new REGEX still broken."
        },
        {
          "line" => 1221,
          "raw" => "\tFixes for no ithreads.\n\n",
          "style" => "",
          "text" => "Fixes for no ithreads."
        },
        {
          "line" => 1223,
          "raw" => "        * Fixed verbose Bytecode for old B::Concise (5.8.8). t/testplc.sh\n\t  failed before.\n",
          "style" => "*",
          "text" => "Fixed verbose Bytecode for old B::Concise (5.8.8). t/testplc.sh failed before."
        },
        {
          "line" => 1225,
          "raw" => "\t* ByteLoader: Work on portability (different arch, version and sizes).\n\t  Added bl_header.\n\t  Changed macro BYTECODE_HEADER_CHECK to function bytecode_header_check().\n\t  Fixes for no threads.\n",
          "style" => "*",
          "text" => "ByteLoader: Work on portability (different arch, version and sizes). Added bl_header. Changed macro BYTECODE_HEADER_CHECK to function bytecode_header_check(). Fixes for no threads."
        },
        {
          "line" => 1229,
          "raw" => "\t* bytecode.h: pregcomp fix for 5.10 w/o threads\n\t  (Thanks to david\@cantrell.org.uk for his cpantest for netbsd).\n\t  use xpv_cur and not xpv_len for the rx length (len - 1) to strip off\n\t  the ending nul byte.\n\t  5.10: new minlen check aborts\n",
          "style" => "*",
          "text" => "bytecode.h: pregcomp fix for 5.10 w/o threads (Thanks to david\@cantrell.org.uk for his cpantest for netbsd). use xpv_cur and not xpv_len for the rx length (len - 1) to strip off the ending nul byte. 5.10: new minlen check aborts"
        },
        {
          "line" => 1234,
          "raw" => "\t* ByteLoader security: added strconst maxsize flag to bytecode.pl\n\t  for buffer overflow checks.\n",
          "style" => "*",
          "text" => "ByteLoader security: added strconst maxsize flag to bytecode.pl for buffer overflow checks."
        },
        {
          "line" => 1236,
          "raw" => "\t* Bytecode -DA for devel assertions of absolute or probably wrong opindex\n\t  pointers (nyi)\n",
          "style" => "*",
          "text" => "Bytecode -DA for devel assertions of absolute or probably wrong opindex pointers (nyi)"
        },
        {
          "line" => 1238,
          "raw" => "\t* disassemble, B::Assembler: commented output, similar to -MO=Bytecode,-S\n\t  Added backwards option --bare for older assemblers.\n",
          "style" => "*",
          "text" => "disassemble, B::Assembler: commented output, similar to -MO=Bytecode,-S Added backwards option --bare for older assemblers."
        },
        {
          "line" => 1240,
          "raw" => "\t* assemble, disassemble: added pod\n",
          "style" => "*",
          "text" => "assemble, disassemble: added pod"
        },
        {
          "line" => 1241,
          "raw" => "\t* B::Disassembler:\n\t  Provide default printers print_insn (commented) and print_insn_bare.\n\t  Portability: Use the header settings from the .plc and not the current\n\t  perl settings.\n",
          "style" => "*",
          "text" => "B::Disassembler: Provide default printers print_insn (commented) and print_insn_bare. Portability: Use the header settings from the .plc and not the current perl settings."
        },
        {
          "line" => 1245,
          "raw" => "\t* B::Assembler 0.07_03, B::Disassembler 1.05_02, ByteLoader 0.06_03:\n\t  Added longsize to the bytecode header, just for xcv_depth.\n",
          "style" => "*",
          "text" => "B::Assembler 0.07_03, B::Disassembler 1.05_02, ByteLoader 0.06_03: Added longsize to the bytecode header, just for xcv_depth."
        },
        {
          "line" => 1247,
          "raw" => "\t* B::Debug 1.05_03: Fixes for no threads.\n",
          "style" => "*",
          "text" => "B::Debug 1.05_03: Fixes for no threads."
        },
        {
          "line" => 1248,
          "raw" => "\t* Makefile.PL: Fixed script/perlcc.PL dependency\n\t  make: *** No rule to make target `script/perlcc', needed by\n\t  `blib/bin/perlcc'.\n\t  (Thanks to david\@cantrell.org.uk for his cpantest for solaris)\n",
          "style" => "*",
          "text" => "Makefile.PL: Fixed script/perlcc.PL dependency make: *** No rule to make target `script/perlcc', needed by `blib/bin/perlcc'. (Thanks to david\@cantrell.org.uk for his cpantest for solaris)"
        },
        {
          "line" => 1252,
          "raw" => "\t* Added test TODO's, Added perloptreeguts.pod\n\n",
          "style" => "*",
          "text" => "Added test TODO's, Added perloptreeguts.pod"
        }
      ],
      "line" => 1218,
      "note" => "rurban",
      "raw" => "1.04_15 2008-04-11 rurban\n",
      "raw_date" => "2008-04-11",
      "version" => "1.04_15"
    },
    {
      "date" => "2008-03-24",
      "entries" => [
        {
          "line" => 1256,
          "raw" => "        * Fixed some 1.04_13 +x executable permissions in docs. Windows habits.\n\n",
          "style" => "*",
          "text" => "Fixed some 1.04_13 +x executable permissions in docs. Windows habits."
        }
      ],
      "line" => 1254,
      "note" => "rurban",
      "raw" => "1.04_14 2008-03-24 rurban\n\n",
      "raw_date" => "2008-03-24",
      "version" => "1.04_14"
    },
    {
      "date" => "2008-03-24",
      "entries" => [
        {
          "line" => 1260,
          "raw" => "\t* Fixed B::C pv init in 5.10. Forgot refcnt and flags.\n",
          "style" => "*",
          "text" => "Fixed B::C pv init in 5.10. Forgot refcnt and flags."
        },
        {
          "line" => 1261,
          "raw" => "\t* Added \"Other perl to exe compilers\" section to perlcompile.pod.\n  \t  This is even a FAQ.\n",
          "style" => "*",
          "text" => "Added \"Other perl to exe compilers\" section to perlcompile.pod. This is even a FAQ."
        },
        {
          "line" => 1263,
          "raw" => "\t* Added the NOTES to perlcompile.pod\n",
          "style" => "*",
          "text" => "Added the NOTES to perlcompile.pod"
        },
        {
          "line" => 1264,
          "raw" => "\t* Added temp. perloptreeguts.pod. In work, also at the wiki.\n",
          "style" => "*",
          "text" => "Added temp. perloptreeguts.pod. In work, also at the wiki."
        },
        {
          "line" => 1265,
          "raw" => "\t* Fixed Bytecode op_pmflags assertions.\n",
          "style" => "*",
          "text" => "Fixed Bytecode op_pmflags assertions."
        },
        {
          "line" => 1266,
          "raw" => "        * Added orangesect for enough regexp space in RE's sv_any.\n\t  Engine not initialized though.\n",
          "style" => "*",
          "text" => "Added orangesect for enough regexp space in RE's sv_any. Engine not initialized though."
        },
        {
          "line" => 1268,
          "raw" => "\t* Hangs in C/CC executables at an op_free(PL_main_root) trying to free\n          the static op structs because the earlier op_seq -1 hack is gone now,\n\t  and opt_static was replaced by opt_latefree. Set now opt_latefree = 1.\n          This fixed tests 1 and 13. Slowly making progress step by step.\n\n",
          "style" => "*",
          "text" => "Hangs in C/CC executables at an op_free(PL_main_root) trying to free the static op structs because the earlier op_seq -1 hack is gone now, and opt_static was replaced by opt_latefree. Set now opt_latefree = 1. This fixed tests 1 and 13. Slowly making progress step by step."
        }
      ],
      "line" => 1258,
      "note" => "rurban",
      "raw" => "1.04_13 2008-03-24 rurban\n\n",
      "raw_date" => "2008-03-24",
      "version" => "1.04_13"
    },
    {
      "date" => "2008-03-16",
      "entries" => [
        {
          "line" => 1275,
          "raw" => "\t* Fixed bug #40435 CC: Can't locate object method \"_save_common_middle\"\n\t  via package \"B::FAKEOP\"\n",
          "style" => "*",
          "text" => "Fixed bug #40435 CC: Can't locate object method \"_save_common_middle\" via package \"B::FAKEOP\""
        },
        {
          "line" => 1277,
          "raw" => "\t* move tests from [bc]*.t into shared TESTS file.\n",
          "style" => "*",
          "text" => "move tests from [bc]*.t into shared TESTS file."
        },
        {
          "line" => 1278,
          "raw" => "\t* fixed remaining ugly Bytecode bug in B::AV::bsave\n\t\t\$_ = \$_->ix for \@array.\n\t  Now we are at the same state as with 5.9.4\n",
          "style" => "*",
          "text" => "fixed remaining ugly Bytecode bug in B::AV::bsave \$_ = \$_->ix for \@array. Now we are at the same state as with 5.9.4"
        },
        {
          "line" => 1281,
          "raw" => "\t* fixed wrong bc cop_warning cast for 5.8\n",
          "style" => "*",
          "text" => "fixed wrong bc cop_warning cast for 5.8"
        },
        {
          "line" => 1282,
          "raw" => "\t* fixed CC pmreplroot and pmreplstart fields\n",
          "style" => "*",
          "text" => "fixed CC pmreplroot and pmreplstart fields"
        },
        {
          "line" => 1283,
          "raw" => "\t* make C and CC less verbose, honor -v, -q ignored.\n\n",
          "style" => "*",
          "text" => "make C and CC less verbose, honor -v, -q ignored."
        }
      ],
      "line" => 1273,
      "note" => "rurban (first upload)",
      "raw" => "1.04_12 2008-03-16 rurban (first upload)\n\n",
      "raw_date" => "2008-03-16",
      "version" => "1.04_12"
    },
    {
      "date" => "2008-03-09",
      "entries" => [
        {
          "line" => 1287,
          "raw" => "\t* removed Jit and Asm stuff. Maybe as seperate packages somewhen.\n\t  But targeting PIR makes more sense.\n",
          "style" => "*",
          "text" => "removed Jit and Asm stuff. Maybe as seperate packages somewhen. But targeting PIR makes more sense."
        },
        {
          "line" => 1289,
          "raw" => "\t* added STATUS\n",
          "style" => "*",
          "text" => "added STATUS"
        },
        {
          "line" => 1290,
          "raw" => "\t* added old Changes from the new git clone repo by Sam Vilain\n",
          "style" => "*",
          "text" => "added old Changes from the new git clone repo by Sam Vilain"
        },
        {
          "line" => 1291,
          "raw" => "\t* fix C cop\n",
          "style" => "*",
          "text" => "fix C cop"
        },
        {
          "line" => 1292,
          "raw" => "        * fix C savepvn apparently\n",
          "style" => "*",
          "text" => "fix C savepvn apparently"
        },
        {
          "line" => 1293,
          "raw" => "        * work on HV init - crashes at invalid entry\n",
          "style" => "*",
          "text" => "work on HV init - crashes at invalid entry"
        },
        {
          "line" => 1294,
          "raw" => "\t* use run_cc_test\n\n",
          "style" => "*",
          "text" => "use run_cc_test"
        }
      ],
      "line" => 1285,
      "note" => "rurban",
      "raw" => "1.04_11 2008-03-09 rurban\n\n",
      "raw_date" => "2008-03-09",
      "version" => "1.04_11"
    },
    {
      "date" => "2008-02-26",
      "entries" => [
        {
          "line" => 1298,
          "raw" => "\t* change bc pvx access\n\t  dummy struct bytestate_xpv, so pv has the same fields as with 5.8,\n\t  seperated from the sv. The sv is seperated from the pv.\n\t  TODO: different strategy for B::C, must link xpv to sv\n",
          "style" => "*",
          "text" => "change bc pvx access dummy struct bytestate_xpv, so pv has the same fields as with 5.8, seperated from the sv. The sv is seperated from the pv. TODO: different strategy for B::C, must link xpv to sv"
        },
        {
          "line" => 1302,
          "raw" => "\t* add and parse Assembler comments\n",
          "style" => "*",
          "text" => "add and parse Assembler comments"
        },
        {
          "line" => 1303,
          "raw" => "\t* add Bytecode comments to -S output unless -q\n",
          "style" => "*",
          "text" => "add Bytecode comments to -S output unless -q"
        },
        {
          "line" => 1304,
          "raw" => "\t* change op_reflags from U16 to U32\n",
          "style" => "*",
          "text" => "change op_reflags from U16 to U32"
        },
        {
          "line" => 1305,
          "raw" => "\t* guarantee ByteLoader backwards compatibility: Accept lower versions also.\n\n",
          "style" => "*",
          "text" => "guarantee ByteLoader backwards compatibility: Accept lower versions also."
        }
      ],
      "line" => 1296,
      "note" => "rurban",
      "raw" => "1.04_10 2008-02-26 rurban\n\n",
      "raw_date" => "2008-02-26",
      "version" => "1.04_10"
    },
    {
      "date" => "2008-02-25",
      "entries" => [
        {
          "line" => 1308,
          "raw" => "\t* restored 5.8 backwards compatibility, mainly for test comparison.\n\t  CPAN installation will abort.\n",
          "style" => "*",
          "text" => "restored 5.8 backwards compatibility, mainly for test comparison. CPAN installation will abort."
        },
        {
          "line" => 1310,
          "raw" => "\t* make t/test*.sh PERL independent\n",
          "style" => "*",
          "text" => "make t/test*.sh PERL independent"
        },
        {
          "line" => 1311,
          "raw" => "\t* fixed B::C GV init crashes (SvPOK assertion)\n",
          "style" => "*",
          "text" => "fixed B::C GV init crashes (SvPOK assertion)"
        },
        {
          "line" => 1312,
          "raw" => "\t* added B::C RE section\n",
          "style" => "*",
          "text" => "added B::C RE section"
        },
        {
          "line" => 1313,
          "raw" => "\t* fixed B::C xpvcv and xpvnv section\n",
          "style" => "*",
          "text" => "fixed B::C xpvcv and xpvnv section"
        },
        {
          "line" => 1314,
          "raw" => "\t* comment Bytecode -S nice ops to re-assemble them without errors\n",
          "style" => "*",
          "text" => "comment Bytecode -S nice ops to re-assemble them without errors"
        },
        {
          "line" => 1315,
          "raw" => "\t* added new asm opcode op_reflags\n",
          "style" => "*",
          "text" => "added new asm opcode op_reflags"
        },
        {
          "line" => 1316,
          "raw" => "\t* removed Bytecode cop_arybase for 5.10\n",
          "style" => "*",
          "text" => "removed Bytecode cop_arybase for 5.10"
        },
        {
          "line" => 1317,
          "raw" => "\t* 5.8 compatibility: fixed bytecode.pl versioning, Asmdata creation\n\t  (exact same for 5.8.8), asmdata.t, b.t tests\n",
          "style" => "*",
          "text" => "5.8 compatibility: fixed bytecode.pl versioning, Asmdata creation (exact same for 5.8.8), asmdata.t, b.t tests"
        },
        {
          "line" => 1319,
          "raw" => "\t* improved make clean\n",
          "style" => "*",
          "text" => "improved make clean"
        },
        {
          "line" => 1320,
          "raw" => "\t* add ByteLoader -Dt and -Dv debugging\n",
          "style" => "*",
          "text" => "add ByteLoader -Dt and -Dv debugging"
        },
        {
          "line" => 1321,
          "raw" => "\t* don't link against jit code against possible sideeffects\n",
          "style" => "*",
          "text" => "don't link against jit code against possible sideeffects"
        },
        {
          "line" => 1322,
          "raw" => "\t* fixed c.t and cc.t tests\n\n",
          "style" => "*",
          "text" => "fixed c.t and cc.t tests"
        }
      ],
      "line" => 1307,
      "note" => "rurban",
      "raw" => "1.04_09 2008-02-25 rurban\n",
      "raw_date" => "2008-02-25",
      "version" => "1.04_09"
    },
    {
      "date" => "2008-02-22",
      "entries" => [
        {
          "line" => 1325,
          "raw" => "\t* fixed t/b.t tests for 5.11 (REGEXP, ref RV => IV)\n",
          "style" => "*",
          "text" => "fixed t/b.t tests for 5.11 (REGEXP, ref RV => IV)"
        },
        {
          "line" => 1326,
          "raw" => "\t* fixed Makefile.PL deps to ignore the interim .pl files\n",
          "style" => "*",
          "text" => "fixed Makefile.PL deps to ignore the interim .pl files"
        },
        {
          "line" => 1327,
          "raw" => "\t* added PMOP reflags\n",
          "style" => "*",
          "text" => "added PMOP reflags"
        },
        {
          "line" => 1328,
          "raw" => "\t* added madprop to B-1.18_01 and B::C (if provided by B)\n",
          "style" => "*",
          "text" => "added madprop to B-1.18_01 and B::C (if provided by B)"
        },
        {
          "line" => 1329,
          "raw" => "\t* enhanced B::Debug 1.05_02\n",
          "style" => "*",
          "text" => "enhanced B::Debug 1.05_02"
        },
        {
          "line" => 1330,
          "raw" => "\t* fixed B::C PL_cshlen (already initialized since 5.10)\n",
          "style" => "*",
          "text" => "fixed B::C PL_cshlen (already initialized since 5.10)"
        },
        {
          "line" => 1331,
          "raw" => "\t* fixed B::C GvFILE\n",
          "style" => "*",
          "text" => "fixed B::C GvFILE"
        },
        {
          "line" => 1332,
          "raw" => "\t* fixed various (SV)xpv list casts and inits,\n",
          "style" => "*",
          "text" => "fixed various (SV)xpv list casts and inits,"
        },
        {
          "line" => 1333,
          "raw" => "\t* fixed B::C xpvnv_list for 5.10\n",
          "style" => "*",
          "text" => "fixed B::C xpvnv_list for 5.10"
        },
        {
          "line" => 1334,
          "raw" => "\t* fixed B::C xpvio_list for 5.10\n",
          "style" => "*",
          "text" => "fixed B::C xpvio_list for 5.10"
        },
        {
          "line" => 1335,
          "raw" => "\t* fixed B::C pmopsect for 5.11\n",
          "style" => "*",
          "text" => "fixed B::C pmopsect for 5.11"
        },
        {
          "line" => 1336,
          "raw" => "\t* bootstrap also all \$Config{static_ext}, not only dynamic stashes\n\n",
          "style" => "*",
          "text" => "bootstrap also all \$Config{static_ext}, not only dynamic stashes"
        }
      ],
      "line" => 1324,
      "note" => "rurban",
      "raw" => "1.04_08 2008-02-22 rurban\n",
      "raw_date" => "2008-02-22",
      "version" => "1.04_08"
    },
    {
      "date" => "2008-02-20",
      "entries" => [
        {
          "line" => 1339,
          "raw" => "\t* moved bstate->bs_pv.xpv_pv slot to bs_pv.xiv_u.xivu_p1\n",
          "style" => "*",
          "text" => "moved bstate->bs_pv.xpv_pv slot to bs_pv.xiv_u.xivu_p1"
        },
        {
          "line" => 1340,
          "raw" => "\t* fixed pv_free\n",
          "style" => "*",
          "text" => "fixed pv_free"
        },
        {
          "line" => 1341,
          "raw" => "\t* added op_pmflags 2 to match PMOP\n",
          "style" => "*",
          "text" => "added op_pmflags 2 to match PMOP"
        },
        {
          "line" => 1342,
          "raw" => "\t* moved B into lib/B\n",
          "style" => "*",
          "text" => "moved B into lib/B"
        },
        {
          "line" => 1343,
          "raw" => "\t* fixed ByteLoader Makefile deps\n",
          "style" => "*",
          "text" => "fixed ByteLoader Makefile deps"
        },
        {
          "line" => 1344,
          "raw" => "\t* added -DM flag to Bytecode backend\n",
          "style" => "*",
          "text" => "added -DM flag to Bytecode backend"
        },
        {
          "line" => 1345,
          "raw" => "\t* added perlcompile.pod and Perl_5_Internals.htm\n\n",
          "style" => "*",
          "text" => "added perlcompile.pod and Perl_5_Internals.htm"
        }
      ],
      "line" => 1338,
      "note" => "rurban",
      "raw" => "1.04_07 2008-02-20 rurban\n",
      "raw_date" => "2008-02-20",
      "version" => "1.04_07"
    },
    {
      "date" => "2008-02-19",
      "entries" => [
        {
          "line" => 1348,
          "raw" => "\t* no crashes anymore for 5.10, just op_pmflags & PMf_ONCE assertions.\n",
          "style" => "*",
          "text" => "no crashes anymore for 5.10, just op_pmflags & PMf_ONCE assertions."
        },
        {
          "line" => 1349,
          "raw" => "\t* blead\@32980 crashes in tests 11,16,17,18\n",
          "style" => "*",
          "text" => "blead\@32980 crashes in tests 11,16,17,18"
        },
        {
          "line" => 1350,
          "raw" => "\t* enhanced B::Debug (no version bump)\n",
          "style" => "*",
          "text" => "enhanced B::Debug (no version bump)"
        },
        {
          "line" => 1351,
          "raw" => "\t* fixed general op_list inits, and specials for av, hv\n",
          "style" => "*",
          "text" => "fixed general op_list inits, and specials for av, hv"
        },
        {
          "line" => 1352,
          "raw" => "\t* almost fixed pv within sv handling\n",
          "style" => "*",
          "text" => "almost fixed pv within sv handling"
        },
        {
          "line" => 1353,
          "raw" => "\t* added -O=C,-DS for SV debugging\n\n",
          "style" => "*",
          "text" => "added -O=C,-DS for SV debugging"
        }
      ],
      "line" => 1347,
      "note" => "rurban",
      "raw" => "1.04_06 2008-02-19 rurban\n",
      "raw_date" => "2008-02-19",
      "version" => "1.04_06"
    },
    {
      "date" => "2008-02-18",
      "entries" => [
        {
          "line" => 1356,
          "raw" => "\t* added t/test.pl and t/test*.sh to MANIFEST.\n",
          "style" => "*",
          "text" => "added t/test.pl and t/test*.sh to MANIFEST."
        },
        {
          "line" => 1357,
          "raw" => "\t* fixed ByteLoader reading from the <DATA> filter.\n",
          "style" => "*",
          "text" => "fixed ByteLoader reading from the <DATA> filter."
        },
        {
          "line" => 1358,
          "raw" => "\t* fixed -H .plc header parsing\n",
          "style" => "*",
          "text" => "fixed -H .plc header parsing"
        },
        {
          "line" => 1359,
          "raw" => "\t* updated Bytecode options in NOTES and pod\n",
          "style" => "*",
          "text" => "updated Bytecode options in NOTES and pod"
        },
        {
          "line" => 1360,
          "raw" => "\t* added -O=Bytecode,-v option\n",
          "style" => "*",
          "text" => "added -O=Bytecode,-v option"
        },
        {
          "line" => 1361,
          "raw" => "\t* fixed PL_preprocess and SvREPADTMP_off for 5.11\n\n",
          "style" => "*",
          "text" => "fixed PL_preprocess and SvREPADTMP_off for 5.11"
        }
      ],
      "line" => 1355,
      "note" => "rurban",
      "raw" => "1.04_05 2008-02-18 rurban\n",
      "raw_date" => "2008-02-18",
      "version" => "1.04_05"
    },
    {
      "date" => "2008-02-08",
      "entries" => [
        {
          "line" => 1364,
          "raw" => "\t* added jitcompiler macros\n\n",
          "style" => "*",
          "text" => "added jitcompiler macros"
        }
      ],
      "line" => 1363,
      "note" => "rurban",
      "raw" => "1.04_04 2008-02-08 rurban\n",
      "raw_date" => "2008-02-08",
      "version" => "1.04_04"
    },
    {
      "date" => "2008-02-05",
      "entries" => [
        {
          "line" => 1367,
          "raw" => "\t* added Jit and Asm layout, fixed Makefile deps\n\n",
          "style" => "*",
          "text" => "added Jit and Asm layout, fixed Makefile deps"
        }
      ],
      "line" => 1366,
      "note" => "rurban",
      "raw" => "1.04_03 2008-02-05 rurban\n",
      "raw_date" => "2008-02-05",
      "version" => "1.04_03"
    },
    {
      "date" => "2008-01-22",
      "entries" => [
        {
          "line" => 1370,
          "raw" => "\t* removed from CORE, now on CPAN.\n",
          "style" => "*",
          "text" => "removed from CORE, now on CPAN."
        },
        {
          "line" => 1371,
          "raw" => "\t* added byteorder to bytecode header.\n",
          "style" => "*",
          "text" => "added byteorder to bytecode header."
        },
        {
          "line" => 1372,
          "raw" => "\t* added support for 5.10 (NOT WORKING!), 5.9.5 not tested.\n\t  up to 5.8.x already in CORE, so disabled.\n\t  add back support later, when C/CC is improved or more features\n\t  are added.\n",
          "style" => "*",
          "text" => "added support for 5.10 (NOT WORKING!), 5.9.5 not tested. up to 5.8.x already in CORE, so disabled. add back support later, when C/CC is improved or more features are added."
        },
        {
          "line" => 1376,
          "raw" => "\t* added type hekindex\n",
          "style" => "*",
          "text" => "added type hekindex"
        },
        {
          "line" => 1377,
          "raw" => "\t* added c.t and cc.t tests\n",
          "style" => "*",
          "text" => "added c.t and cc.t tests"
        },
        {
          "line" => 1378,
          "raw" => "\t* extended bytecode.pl format: added version logic\n\t  to have strictly consecutive indices\n\n",
          "style" => "*",
          "text" => "extended bytecode.pl format: added version logic to have strictly consecutive indices"
        }
      ],
      "line" => 1369,
      "note" => "rurban (never uploaded)",
      "raw" => "1.04_02 2008-01-22 rurban (never uploaded)\n",
      "raw_date" => "2008-01-22",
      "version" => "1.04_02"
    },
    {
      "date" => "2008-01-15",
      "entries" => [
        {
          "line" => 1382,
          "raw" => "\t* first package layout for all now non-CORE packages.\n\n===================================================================\n\n",
          "style" => "*",
          "text" => "first package layout for all now non-CORE packages."
        },
        {
          "line" => 1386,
          "raw" => "B::C was at 1.05 when removed from core with 5.9.4.\n\n",
          "style" => "",
          "text" => "B::C was at 1.05 when removed from core with 5.9.4."
        },
        {
          "line" => 1388,
          "raw" => "Nicholas Clark <nwc10+p5p4\@colon.colondot.net>  2007-05-07 15:35:56\n    bytecode.pl:        Exterminate!\n    ext/B/B/Asmdata.pm: Exterminate!\n\n",
          "style" => "",
          "text" => "Nicholas Clark <nwc10+p5p4\@colon.colondot.net>  2007-05-07 15:35:56 bytecode.pl:        Exterminate! ext/B/B/Asmdata.pm: Exterminate!"
        },
        {
          "line" => 1392,
          "raw" => "Nicholas Clark <nwc10+p5p4\@colon.colondot.net>  2007-05-07 14:53:05\n    Given that \@optype and \@specialsv_name are hard coded tables, it seems\n    more logical for them to be in B.pm, rather than in the \"boilerplate\"\n    for the machine generated B/Asmdata.pm\n\n",
          "style" => "",
          "text" => "Nicholas Clark <nwc10+p5p4\@colon.colondot.net>  2007-05-07 14:53:05 Given that \@optype and \@specialsv_name are hard coded tables, it seems more logical for them to be in B.pm, rather than in the \"boilerplate\" for the machine generated B/Asmdata.pm"
        },
        {
          "line" => 1397,
          "raw" => "Marcus Holland-Moritz <mhx-perl\@gmx.net>  2004-08-29 13:22:48\n    Fix typo in B::Assembler.\n\n",
          "style" => "",
          "text" => "Marcus Holland-Moritz <mhx-perl\@gmx.net>  2004-08-29 13:22:48 Fix typo in B::Assembler."
        },
        {
          "line" => 1400,
          "raw" => "Marcus Holland-Moritz <mhx-perl\@gmx.net>  2004-08-29 13:21:50\n    Skip ext/B/t/assembler.t when configured without B.\n\n",
          "style" => "",
          "text" => "Marcus Holland-Moritz <mhx-perl\@gmx.net>  2004-08-29 13:21:50 Skip ext/B/t/assembler.t when configured without B."
        },
        {
          "line" => 1403,
          "raw" => "Rafael Garcia-Suarez <rgarciasuarez\@gmail.com>  2003-08-09 21:13:27\n    Remove ByteLoader from the list of modules whose compilability should\n    be tested : it's loaded (at runtime) by ext/B/t/bytecode.t (as Enache\n    pointed out.)\n\n",
          "style" => "",
          "text" => "Rafael Garcia-Suarez <rgarciasuarez\@gmail.com>  2003-08-09 21:13:27 Remove ByteLoader from the list of modules whose compilability should be tested : it's loaded (at runtime) by ext/B/t/bytecode.t (as Enache pointed out.)"
        },
        {
          "line" => 1408,
          "raw" => "chromatic <chromatic\@rmci.net>  2002-05-10 07:43:25\n    added ext/B/t/o.t\n\n",
          "style" => "",
          "text" => "chromatic <chromatic\@rmci.net>  2002-05-10 07:43:25 added ext/B/t/o.t"
        },
        {
          "line" => 1411,
          "raw" => "Mattia Barbon <mbarbon\@dsi.unive.it>  2002-01-12 00:29:48\n    \@14216 B::C, perlcc.PL, B.xs, B.pm, t/TEST, C.xs\n    Message-ID: <3C3F756C.4581.2E2A938\@localhost>\n    B::C (1.01): added B::C::InitSection, ...\n\n",
          "style" => "",
          "text" => "Mattia Barbon <mbarbon\@dsi.unive.it>  2002-01-12 00:29:48 \@14216 B::C, perlcc.PL, B.xs, B.pm, t/TEST, C.xs Message-ID: <3C3F756C.4581.2E2A938\@localhost> B::C (1.01): added B::C::InitSection, ..."
        },
        {
          "line" => 1416,
          "raw" => "Mattia Barbon <mbarbon\@dsi.unive.it>  2002-01-06 12:44:30\n    \@14104 B, B::C, perlcc, t/TEST\n    Message-ID: <3C38389E.7831.493570\@localhost>\n\n",
          "style" => "",
          "text" => "Mattia Barbon <mbarbon\@dsi.unive.it>  2002-01-06 12:44:30 \@14104 B, B::C, perlcc, t/TEST Message-ID: <3C38389E.7831.493570\@localhost>"
        },
        {
          "line" => 1420,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-12-21 14:42:31\n    \@13830 packing I32 with L is not nice, need l; from Wolfgang Laun.\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-12-21 14:42:31 \@13830 packing I32 with L is not nice, need l; from Wolfgang Laun."
        },
        {
          "line" => 1423,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-12-19 16:59:02\n    \@13807 One more embedded (?sx) de-embedded, from Wolfgang Laun.\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-12-19 16:59:02 \@13807 One more embedded (?sx) de-embedded, from Wolfgang Laun."
        },
        {
          "line" => 1426,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-12-19 15:25:27\n    \@13802 B::Assembler/B::Disassembler patches and test;\n    from Wolfgang Laun.\n    TODO: getting perlcc working.\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-12-19 15:25:27 \@13802 B::Assembler/B::Disassembler patches and test; from Wolfgang Laun. TODO: getting perlcc working."
        },
        {
          "line" => 1431,
          "raw" => "Michael G. Schwern <schwern\@pobox.com>  2001-12-14 20:59:13\n    \@13697 BBlock: Some weak docs\n    Message-ID: <20011215005913.GC28596\@blackrider>\n\n",
          "style" => "",
          "text" => "Michael G. Schwern <schwern\@pobox.com>  2001-12-14 20:59:13 \@13697 BBlock: Some weak docs Message-ID: <20011215005913.GC28596\@blackrider>"
        },
        {
          "line" => 1435,
          "raw" => "Michael G. Schwern <schwern\@pobox.com>  2001-12-14 20:14:14\n    \@13695 Adding B::Asmdata docs\n    Message-ID: <20011215001414.GA25077\@blackrider>\n\n",
          "style" => "",
          "text" => "Michael G. Schwern <schwern\@pobox.com>  2001-12-14 20:14:14 \@13695 Adding B::Asmdata docs Message-ID: <20011215001414.GA25077\@blackrider>"
        },
        {
          "line" => 1439,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-11-29 02:22:02\n    \@13346 Change \$=, \$., \$*, \$%, and \$- to be IVs instead of longs.\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-11-29 02:22:02 \@13346 Change \$=, \$., \$*, \$%, and \$- to be IVs instead of longs."
        },
        {
          "entries" => [
            {
              "line" => 1447,
              "raw" => "    (Stamped with v1.00)\n\n",
              "style" => "",
              "text" => "(Stamped with v1.00)"
            }
          ],
          "line" => 1442,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-11-16 01:38:41\n    \@13034 Add the fruits of Larry Shatzer's version verifying script.\n    (There are some straddlers, but they will be fixed in the\n    upcoming releases of the modules.)\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-11-16 01:38:41 \@13034 Add the fruits of Larry Shatzer's version verifying script. (There are some straddlers, but they will be fixed in the upcoming releases of the modules.)"
        },
        {
          "line" => 1449,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-09-16 22:36:58\n    \@12040 Stamp B::Assembler with v0.03\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-09-16 22:36:58 \@12040 Stamp B::Assembler with v0.03"
        },
        {
          "line" => 1452,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-07-01 17:20:38\n    \@11061 Make 'compile' target a little less broken.\n    Still very broken, though: -Wall warnings from\n    the generated code, boot_Foo prototypes missing,\n    can't autoload Fcntl::SEEK_CUR et alia, ...\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-07-01 17:20:38 \@11061 Make 'compile' target a little less broken. Still very broken, though: -Wall warnings from the generated code, boot_Foo prototypes missing, can't autoload Fcntl::SEEK_CUR et alia, ..."
        },
        {
          "line" => 1458,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-06-27 13:36:40\n    \@10979 \"lose the looses\", from Abhijit Menon-Sen\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-06-27 13:36:40 \@10979 \"lose the looses\", from Abhijit Menon-Sen"
        },
        {
          "line" => 1461,
          "raw" => "Richard Soderberg <p5-authors\@crystalflame.net>  2001-06-21 09:01:22\n    \@10780 Step 2: Use the new PM_GETRE/SETRE macros everywhere.\n    Message-ID: <Pine.LNX.4.21.0106210657400.1693-100000\@oregonnet.com>\n\n",
          "style" => "",
          "text" => "Richard Soderberg <p5-authors\@crystalflame.net>  2001-06-21 09:01:22 \@10780 Step 2: Use the new PM_GETRE/SETRE macros everywhere. Message-ID: <Pine.LNX.4.21.0106210657400.1693-100000\@oregonnet.com>"
        },
        {
          "line" => 1465,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2001-03-19 08:07:09\n    Subject: Re: sync sync sync: have I missed any patches?\n    Replace djSP with dSP.\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2001-03-19 08:07:09 Subject: Re: sync sync sync: have I missed any patches? Replace djSP with dSP."
        },
        {
          "entries" => [
            {
              "line" => 1472,
              "raw" => "    (Replaced by #8448)  Traces of op_children (cleanup of #8442)\n\n",
              "style" => "",
              "text" => "(Replaced by #8448)  Traces of op_children (cleanup of #8442)"
            },
            {
              "line" => 1474,
              "raw" => "    (Replaced by #8448)  More op_children traces (cleanup of #8442).\n\n",
              "style" => "",
              "text" => "(Replaced by #8448)  More op_children traces (cleanup of #8442)."
            },
            {
              "line" => 1476,
              "raw" => "    Subject: [PATCH #3 \@8436] Re: Eliminate op_children\n",
              "style" => "",
              "text" => "Subject: [PATCH #3 \@8436] Re: Eliminate op_children"
            },
            {
              "line" => 1477,
              "raw" => "    Replace #8444 and #8445.\n\n",
              "style" => "",
              "text" => "Replace #8444 and #8445."
            }
          ],
          "line" => 1469,
          "raw" => "Mark-Jason Dominus <mjd\@plover.com>  2001-01-16 14:43:18\n    Subject: [PATCH \@8436] Eliminate op_children\n\n",
          "style" => "",
          "text" => "Mark-Jason Dominus <mjd\@plover.com>  2001-01-16 14:43:18 Subject: [PATCH \@8436] Eliminate op_children"
        },
        {
          "line" => 1479,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2001-01-30 14:20:24\n    integrate changes#7984,7987,8010 from mainline (gets rid of\n    dTHR which has been a noop for a while now, except for the\n    compatibility definition in thread.h)\n    \@8010 remove dTHR;\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2001-01-30 14:20:24 integrate changes#7984,7987,8010 from mainline (gets rid of dTHR which has been a noop for a while now, except for the compatibility definition in thread.h) \@8010 remove dTHR;"
        },
        {
          "line" => 1485,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-12-18 03:37:02\n    \@7518 UNIVERSAL::can\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-12-18 03:37:02 \@7518 UNIVERSAL::can"
        },
        {
          "entries" => [
            {
              "line" => 1491,
              "raw" => "    Fix of sorts for bug id 20000901.092.  There seems to be no trace\n",
              "style" => "",
              "text" => "Fix of sorts for bug id 20000901.092.  There seems to be no trace"
            },
            {
              "line" => 1492,
              "raw" => "    of a 'pmshort' anywhere in the B, so the offending line was simply\n",
              "style" => "",
              "text" => "of a 'pmshort' anywhere in the B, so the offending line was simply"
            },
            {
              "line" => 1493,
              "raw" => "    removed.\n\n",
              "style" => "",
              "text" => "removed."
            }
          ],
          "line" => 1488,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-12-18 00:03:38\n    Fix a couple of compiler-noted nits in #7235.\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-12-18 00:03:38 Fix a couple of compiler-noted nits in #7235."
        },
        {
          "entries" => [
            {
              "line" => 1499,
              "raw" => "    Subject: [ID 20001003.006] B::Debug not -w clean\n\n",
              "style" => "",
              "text" => "Subject: [ID 20001003.006] B::Debug not -w clean"
            },
            {
              "line" => 1501,
              "raw" => "    Test harness update to sync with the new perlcc,\n",
              "style" => "",
              "text" => "Test harness update to sync with the new perlcc,"
            },
            {
              "line" => 1502,
              "raw" => "    from Simon Cozens.\n\n",
              "style" => "",
              "text" => "from Simon Cozens."
            }
          ],
          "line" => 1495,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-12-17 22:49:13\n    Subject: [ID 20000928.002] perlcc & ByteCode.pm option mismatch\n    Did not apply cleanly, manual intervention was needed.\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-12-17 22:49:13 Subject: [ID 20000928.002] perlcc & ByteCode.pm option mismatch Did not apply cleanly, manual intervention was needed."
        },
        {
          "line" => 1504,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-11-27 18:11:21\n    Bytecompiler patches from Benjamin Stuhl.\n    More bytecompiler.\n    Subject: [PATCH blead] B:: missing dependency\n    Byteloader 0.04\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-11-27 18:11:21 Bytecompiler patches from Benjamin Stuhl. More bytecompiler. Subject: [PATCH blead] B:: missing dependency Byteloader 0.04"
        },
        {
          "line" => 1510,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-11-27 13:53:18\n\tU8->U16 CvFLAGS(cv)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-11-27 13:53:18 U8->U16 CvFLAGS(cv)"
        },
        {
          "entries" => [
            {
              "line" => 1514,
              "raw" => "   * make re, Opcode, File::Glob and B threadsafe\n",
              "style" => "*",
              "text" => "make re, Opcode, File::Glob and B threadsafe"
            },
            {
              "line" => 1515,
              "raw" => "   * include XS_VERSION in MY_CXT_KEY (tweak for change#12652)\n\n",
              "style" => "*",
              "text" => "include XS_VERSION in MY_CXT_KEY (tweak for change#12652)"
            }
          ],
          "line" => 1513,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-10-25 18:07:58\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-10-25 18:07:58"
        },
        {
          "line" => 1517,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-04-05 04:00:33\n    Integrate changes #9544,9547,9549(perlio),9550,9551 from\n    maintperl into mainline.\n    \"double\" should be \"NV\"; standard typemap is missing entry\n    for NV\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  2001-04-05 04:00:33 Integrate changes #9544,9547,9549(perlio),9550,9551 from maintperl into mainline. \"double\" should be \"NV\"; standard typemap is missing entry for NV"
        },
        {
          "line" => 1523,
          "raw" => "bailey <bailey\@bailey_vms>  2000-02-09 09:09:45\n    Resync with mainline\n\n",
          "style" => "",
          "text" => "bailey <bailey\@bailey_vms>  2000-02-09 09:09:45 Resync with mainline"
        },
        {
          "line" => 1526,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-25 02:50:04\n    \@5250 more Compiler tweaks for useithreads\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-25 02:50:04 \@5250 more Compiler tweaks for useithreads"
        },
        {
          "line" => 1529,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-21 08:02:16\n    \@5178 get Compiler \"working\" under useithreads\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-21 08:02:16 \@5178 get Compiler \"working\" under useithreads"
        },
        {
          "line" => 1532,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-19 18:33:05\n    \@5150 more B fixups to cope with empty GVs (these can only happen in pads)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-19 18:33:05 \@5150 more B fixups to cope with empty GVs (these can only happen in pads)"
        },
        {
          "line" => 1535,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-18 04:57:43\n    \@5125 Compiler fixups from Jan Dubois\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-02-18 04:57:43 \@5125 Compiler fixups from Jan Dubois"
        },
        {
          "line" => 1538,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-01-27 04:56:48\n    \@4910 various pod nits identified by installhtml (all fixed except\n    unresolved links)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-01-27 04:56:48 \@4910 various pod nits identified by installhtml (all fixed except unresolved links)"
        },
        {
          "line" => 1542,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-01-26 20:10:26\n    \@4905 s/STOP/CHECK/ blocks\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-01-26 20:10:26 \@4905 s/STOP/CHECK/ blocks"
        },
        {
          "line" => 1545,
          "raw" => "bailey <bailey\@bailey_vms>  2000-01-20 00:25:30\n    \@4821 Quick integration of mainline changes to date\n\n",
          "style" => "",
          "text" => "bailey <bailey\@bailey_vms>  2000-01-20 00:25:30 \@4821 Quick integration of mainline changes to date"
        },
        {
          "line" => 1548,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-01-06 11:51:07\n    \@4763 fix various C-backend shenanigans\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  2000-01-06 11:51:07 \@4763 fix various C-backend shenanigans"
        },
        {
          "line" => 1551,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-12-08 00:16:21\n    \@4662 typos in change#4546\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-12-08 00:16:21 \@4662 typos in change#4546"
        },
        {
          "line" => 1554,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-12-03 07:52:50\n    \@4631 support -a switch to append bytecode to an existing file and make\n    perlcc use it (from Tom Hughes <tom\@compton.nu>)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-12-03 07:52:50 \@4631 support -a switch to append bytecode to an existing file and make perlcc use it (from Tom Hughes <tom\@compton.nu>)"
        },
        {
          "line" => 1558,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-12-01 02:00:09\n    \@4602 more complete pseudo-fork() support for Windows\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-12-01 02:00:09 \@4602 more complete pseudo-fork() support for Windows"
        },
        {
          "line" => 1561,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-11 11:32:54\n    \@4546 avoid stash pointers in optree under USE_ITHREADS\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-11 11:32:54 \@4546 avoid stash pointers in optree under USE_ITHREADS"
        },
        {
          "line" => 1564,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-11 07:04:20\n    \@4545 another change towards a shareable optree: avoid pointer to filegv\n    in COP; revert parts of change#4485 and s/xcv_filegv/xcv_file/\n    (CvFILE() may yet come in handy somewhere); adjust compiler doodads\n    to suit\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-11 07:04:20 \@4545 another change towards a shareable optree: avoid pointer to filegv in COP; revert parts of change#4485 and s/xcv_filegv/xcv_file/ (CvFILE() may yet come in handy somewhere); adjust compiler doodads to suit"
        },
        {
          "line" => 1570,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-04 19:25:45\n    \@4516 change#4485 didn't do the right thing for B::Bytecode\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-04 19:25:45 \@4516 change#4485 didn't do the right thing for B::Bytecode"
        },
        {
          "line" => 1573,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-04 18:28:29\n    \@4515 implement STOP blocks and fix compiler to use them (minimally\n    tested)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-11-04 18:28:29 \@4515 implement STOP blocks and fix compiler to use them (minimally tested)"
        },
        {
          "line" => 1577,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-10-29 08:08:50\n    \@4485 more cleanup: avoid unused knowledge of \"file GV\" notion in CV and GV\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-10-29 08:08:50 \@4485 more cleanup: avoid unused knowledge of \"file GV\" notion in CV and GV"
        },
        {
          "line" => 1580,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-10-29 05:00:21\n    \@4484 usurp GVOP slot for new PADOP (one small step to making optree\n    shareable across interpreters)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-10-29 05:00:21 \@4484 usurp GVOP slot for new PADOP (one small step to making optree shareable across interpreters)"
        },
        {
          "line" => 1584,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-09-30 01:27:28\n    \@4254 [patch _61] Minor corrections in C.pm\n    Message-ID: <Pine.LNX.4.10.9909292326280.5599-100000\@localhost.localdomain>\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-09-30 01:27:28 \@4254 [patch _61] Minor corrections in C.pm Message-ID: <Pine.LNX.4.10.9909292326280.5599-100000\@localhost.localdomain>"
        },
        {
          "line" => 1588,
          "raw" => "Charles Bailey <bailey\@newman.upenn.edu>  1999-09-29 04:21:31\n    \@4249 resync with mainline 5.05_61\n    (\$handle_VC_problem, \@4198: \$sv->REFCNT - 1)\n\n",
          "style" => "",
          "text" => "Charles Bailey <bailey\@newman.upenn.edu>  1999-09-29 04:21:31 \@4249 resync with mainline 5.05_61 (\$handle_VC_problem, \@4198: \$sv->REFCNT - 1)"
        },
        {
          "line" => 1592,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-08-25 02:31:33\n    \@4198 add arenas for managing allocations of remaining xpv*v structures\n    Message-ID: <Pine.LNX.4.10.9908250031000.11727-100000\@localhost.localdomain>\n    Subject: [PATCH 5.005_60] removing extra ref count (compiler)\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-08-25 02:31:33 \@4198 add arenas for managing allocations of remaining xpv*v structures Message-ID: <Pine.LNX.4.10.9908250031000.11727-100000\@localhost.localdomain> Subject: [PATCH 5.005_60] removing extra ref count (compiler)"
        },
        {
          "line" => 1597,
          "raw" => "Doug MacEachern <dougm\@covalent.net>  1999-07-25 17:49:00\n    \@4129 B::clearsym\n\n",
          "style" => "",
          "text" => "Doug MacEachern <dougm\@covalent.net>  1999-07-25 17:49:00 \@4129 B::clearsym"
        },
        {
          "line" => 1600,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-08-11 03:43:28\n    \@4095  applied suggested patch with suitable test to detect MSVC\n    Message-ID: <GFCJELIOGEENAAAA\@my-deja.com>\n    Subject: compiler on  win32\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-08-11 03:43:28 \@4095  applied suggested patch with suitable test to detect MSVC Message-ID: <GFCJELIOGEENAAAA\@my-deja.com> Subject: compiler on  win32"
        },
        {
          "line" => 1605,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-09-06 22:16:58\n    \@4092 support bytecode and C backends in perlcc (patch suggested\n    by Tom Hughes <tom\@compton.au>); s/-opt/-noopt/ and make the\n    C backend the default; describe new switches in pod; introduce\n    PERLCC_OPTS and s/COMPILE_TIMEOUT/PERLCC_TIMEOUT/;\n    s/COMPILE_TEST/HARNESS_COMPILE_TEST/; document these %ENV\n    entries\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-09-06 22:16:58 \@4092 support bytecode and C backends in perlcc (patch suggested by Tom Hughes <tom\@compton.au>); s/-opt/-noopt/ and make the C backend the default; describe new switches in pod; introduce PERLCC_OPTS and s/COMPILE_TIMEOUT/PERLCC_TIMEOUT/; s/COMPILE_TEST/HARNESS_COMPILE_TEST/; document these %ENV entries"
        },
        {
          "line" => 1613,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1999-08-08 15:53:57\n    \@3925 Will now correctly re-call\n      bootstrap \"Foo\";\n    if requested. This should allow build on Win32 and other\n    platforms where you cannot link to loadables directly.\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1999-08-08 15:53:57 \@3925 Will now correctly re-call bootstrap \"Foo\"; if requested. This should allow build on Win32 and other platforms where you cannot link to loadables directly."
        },
        {
          "line" => 1619,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1999-08-07 14:23:55\n    \@3934 Vishal Bhatia <vishalb\@my-deja.com>\n    [PATCH 5.005_60] fix for some obscure bugs (compiler)\n    Message-ID: <HLPEBPHPAKHKAAAA\@my-deja.com>\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1999-08-07 14:23:55 \@3934 Vishal Bhatia <vishalb\@my-deja.com> [PATCH 5.005_60] fix for some obscure bugs (compiler) Message-ID: <HLPEBPHPAKHKAAAA\@my-deja.com>"
        },
        {
          "line" => 1624,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1999-08-07 14:19:46\n    \@3933 B::C changes to get simple Tk app. compiling again\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1999-08-07 14:19:46 \@3933 B::C changes to get simple Tk app. compiling again"
        },
        {
          "line" => 1627,
          "raw" => "Nathan Torkington <gnat\@frii.com>  1999-08-05 23:25:47\n    \@3927 Fix for Nathan's fix (#3920) from Guy Decoux.\n    Subject: Bugfix for my bugfix\n    Message-ID: <14250.21947.765134.940583\@localhost.frii.com>\n\n",
          "style" => "",
          "text" => "Nathan Torkington <gnat\@frii.com>  1999-08-05 23:25:47 \@3927 Fix for Nathan's fix (#3920) from Guy Decoux. Subject: Bugfix for my bugfix Message-ID: <14250.21947.765134.940583\@localhost.frii.com>"
        },
        {
          "line" => 1632,
          "raw" => "Nathan Torkington <gnat\@frii.com>  1999-08-04 13:24:56\n    \@3920 [5.005_60 PATCH] Make B::Bytecode work\n\n",
          "style" => "",
          "text" => "Nathan Torkington <gnat\@frii.com>  1999-08-04 13:24:56 \@3920 [5.005_60 PATCH] Make B::Bytecode work"
        },
        {
          "line" => 1635,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-07-31 21:08:33\n    \@3869 \"use constant\" in the compiler\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-07-31 21:08:33 \@3869 \"use constant\" in the compiler"
        },
        {
          "line" => 1638,
          "raw" => "Nathan Torkington <gnat\@frii.com>  1999-08-01 11:23:35\n    \@3859 ext/B/B/Disassembler.pm patch\n    Message-ID: <14244.33431.739419.806927\@localhost.frii.com>\n\n",
          "style" => "",
          "text" => "Nathan Torkington <gnat\@frii.com>  1999-08-01 11:23:35 \@3859 ext/B/B/Disassembler.pm patch Message-ID: <14244.33431.739419.806927\@localhost.frii.com>"
        },
        {
          "line" => 1642,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-08-01 20:34:41\n    \@3848 fix defined(\@foo) encarpments\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-08-01 20:34:41 \@3848 fix defined(\@foo) encarpments"
        },
        {
          "line" => 1645,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-27 05:56:17\n    \@3784 change#3762 wasn't needed\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-27 05:56:17 \@3784 change#3762 wasn't needed"
        },
        {
          "line" => 1648,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-26 10:59:47\n    \@3762 setstate stop-gap from Vishal Bhatia\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-26 10:59:47 \@3762 setstate stop-gap from Vishal Bhatia"
        },
        {
          "line" => 1651,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-26 10:06:39\n    \@3761 patch for pp_foo -> Perl_pp_foo changes from Vishal Bhatia\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-26 10:06:39 \@3761 patch for pp_foo -> Perl_pp_foo changes from Vishal Bhatia"
        },
        {
          "line" => 1654,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-17 22:43:27\n    \@3687 make CC.pm use a distinct CCPP() macro rather than PP()\n    (suggested by Vishal Bhatia <vishalb\@my-deja.com>)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-07-17 22:43:27 \@3687 make CC.pm use a distinct CCPP() macro rather than PP() (suggested by Vishal Bhatia <vishalb\@my-deja.com>)"
        },
        {
          "line" => 1658,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-06-30 16:02:42\n    \@3644 Compiler and XSUBS\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-06-30 16:02:42 \@3644 Compiler and XSUBS"
        },
        {
          "line" => 1661,
          "raw" => "Stephen McCamant <smcc\@mit.edu>  1999-06-25 15:38:44\n    \@3637 Eliminate CONDOPs\n\n",
          "style" => "",
          "text" => "Stephen McCamant <smcc\@mit.edu>  1999-06-25 15:38:44 \@3637 Eliminate CONDOPs"
        },
        {
          "line" => 1664,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-06-20 19:17:17\n    \@3630 Minor bug fix in pp_require\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-06-20 19:17:17 \@3630 Minor bug fix in pp_require"
        },
        {
          "line" => 1667,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-06-12 10:23:59\n    \@3622 applied patch after demunging headers with appropriate paths\n    \tMessage-ID: <JIHEJPFDFKIBDAAA\@my-deja.com>\n    \tSubject: [Patch 5.005_57] unsigned arithmetic (Compiler)\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-06-12 10:23:59 \@3622 applied patch after demunging headers with appropriate paths Message-ID: <JIHEJPFDFKIBDAAA\@my-deja.com> Subject: [Patch 5.005_57] unsigned arithmetic (Compiler)"
        },
        {
          "line" => 1672,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-06-05 10:42:17\n    \@3593 applied parts not duplicated by previous patches\n    \tMessage-ID: <JAMCAJKJEJDPAAAA\@my-deja.com>\n    \tSubject: Fwd: [PATCH 5.005_57] consolidated compiler changes\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-06-05 10:42:17 \@3593 applied parts not duplicated by previous patches Message-ID: <JAMCAJKJEJDPAAAA\@my-deja.com> Subject: Fwd: [PATCH 5.005_57] consolidated compiler changes"
        },
        {
          "line" => 1677,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-06-03 02:57:48\n    \@3584 [PATCH 5.005_57] pp_sort sorted out\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-06-03 02:57:48 \@3584 [PATCH 5.005_57] pp_sort sorted out"
        },
        {
          "line" => 1680,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-06-10 10:38:00\n    \@3526 fix small nits (ARGS => aTHX)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-06-10 10:38:00 \@3526 fix small nits (ARGS => aTHX)"
        },
        {
          "line" => 1683,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-06-02 06:47:10\n    \@3518 remove _() non-ansism\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-06-02 06:47:10 \@3518 remove _() non-ansism"
        },
        {
          "entries" => [
            {
              "line" => 1689,
              "raw" => "    To: perl5-porters\@perl.org\n",
              "style" => "",
              "text" => "To: perl5-porters\@perl.org"
            },
            {
              "line" => 1690,
              "raw" => "    Message-ID: <bf337a0849.tom\@compton.compton.nu>\n\n",
              "style" => "",
              "text" => "Message-ID: <bf337a0849.tom\@compton.compton.nu>"
            },
            {
              "line" => 1692,
              "raw" => "    plus resolve tiny conflict with #3479\n",
              "style" => "",
              "text" => "plus resolve tiny conflict with #3479"
            },
            {
              "line" => 1693,
              "raw" => "    plus regen_headers.\n\n",
              "style" => "",
              "text" => "plus regen_headers."
            }
          ],
          "line" => 1686,
          "raw" => "Tom Hughes <tom\@compton.nu>  1999-05-27 01:59:49\n    \@3499  ByteLoader mark 2\n\n",
          "style" => "",
          "text" => "Tom Hughes <tom\@compton.nu>  1999-05-27 01:59:49 \@3499  ByteLoader mark 2"
        },
        {
          "line" => 1695,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-05-11 11:34:13\n    \@3367  various fixes for clean build and test on win32; configpm broken,\n    needed to open myconfig.SH rather than myconfig; sundry adjustments\n    to bytecode stuff; tweaks to DYNAMIC_ENV_FETCH code to make it\n    work under win32; getenv_sv() changed to getenv_len() since SVs\n    aren't visible in the lower echelons; remove bogus exports from\n    config.sym; PERL_OBJECT-ness for C++ exception support; null out\n    IoDIRP in filter_del() or sv_free() will attempt to close it\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-05-11 11:34:13 \@3367  various fixes for clean build and test on win32; configpm broken, needed to open myconfig.SH rather than myconfig; sundry adjustments to bytecode stuff; tweaks to DYNAMIC_ENV_FETCH code to make it work under win32; getenv_sv() changed to getenv_len() since SVs aren't visible in the lower echelons; remove bogus exports from config.sym; PERL_OBJECT-ness for C++ exception support; null out IoDIRP in filter_del() or sv_free() will attempt to close it"
        },
        {
          "entries" => [
            {
              "line" => 1710,
              "raw" => "    \tDate: Thu, 29 Apr 1999 18:21:06 -0700\n",
              "style" => "",
              "text" => "Date: Thu, 29 Apr 1999 18:21:06 -0700"
            },
            {
              "line" => 1711,
              "raw" => "    \tMessage-ID: <GEFPBFDJADFJBAAA\@my-dejanews.com>\n",
              "style" => "",
              "text" => "Message-ID: <GEFPBFDJADFJBAAA\@my-dejanews.com>"
            },
            {
              "line" => 1712,
              "raw" => "    \tSubject: [PATCH 5.005_56] double constants ( C.pm)\n    \t--\n",
              "style" => "",
              "text" => "Subject: [PATCH 5.005_56] double constants ( C.pm)"
            },
            {
              "line" => 1714,
              "raw" => "    \tDate: Mon, 03 May 1999 20:21:31 PDT\n",
              "style" => "",
              "text" => "Date: Mon, 03 May 1999 20:21:31 PDT"
            },
            {
              "line" => 1715,
              "raw" => "    \tMessage-ID: <19990504032131.81113.qmail\@hotmail.com>\n",
              "style" => "",
              "text" => "Message-ID: <19990504032131.81113.qmail\@hotmail.com>"
            },
            {
              "line" => 1716,
              "raw" => "    \tSubject: [PATCH 5.005_56] Overloading implementation ( Compiler)\n    \t--\n",
              "style" => "",
              "text" => "Subject: [PATCH 5.005_56] Overloading implementation ( Compiler)"
            },
            {
              "line" => 1718,
              "raw" => "    \tDate: Thu, 06 May 1999 17:57:09 -0700\n",
              "style" => "",
              "text" => "Date: Thu, 06 May 1999 17:57:09 -0700"
            },
            {
              "line" => 1719,
              "raw" => "    \tMessage-ID: <FCJELBLAJBOBAAAA\@my-dejanews.com>\n",
              "style" => "",
              "text" => "Message-ID: <FCJELBLAJBOBAAAA\@my-dejanews.com>"
            },
            {
              "line" => 1720,
              "raw" => "    \tSubject: Stash.pm\n\n",
              "style" => "",
              "text" => "Subject: Stash.pm"
            }
          ],
          "line" => 1704,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-05-10 09:49:26\n    \@3359 more Compiler patches from Vishal Bhatia <vishalb\@my-dejanews.com>\n    \tDate: Tue, 27 Apr 1999 23:47:24 PDT\n    \tMessage-ID: <19990428064724.95244.qmail\@hotmail.com>\n    \tSubject: [PATCH 5.005_56] Saving Tied hashes ( C.pm)\n    \t--\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-05-10 09:49:26 \@3359 more Compiler patches from Vishal Bhatia <vishalb\@my-dejanews.com> Date: Tue, 27 Apr 1999 23:47:24 PDT Message-ID: <19990428064724.95244.qmail\@hotmail.com> Subject: [PATCH 5.005_56] Saving Tied hashes ( C.pm)"
        },
        {
          "line" => 1722,
          "raw" => "Tom Hughes <tom\@compton.nu>  1999-04-24 20:11:59\n    \@3356 applied suggested patch, with win32 and PERL_OBJECT additions\n    \tMessage-ID: <609bdff748.tom\@compton.compton.nu>\n    \tSubject: ByteLoader patch\n\n",
          "style" => "",
          "text" => "Tom Hughes <tom\@compton.nu>  1999-04-24 20:11:59 \@3356 applied suggested patch, with win32 and PERL_OBJECT additions Message-ID: <609bdff748.tom\@compton.compton.nu> Subject: ByteLoader patch"
        },
        {
          "entries" => [
            {
              "line" => 1733,
              "raw" => "    \tDate: Wed, 07 Apr 1999 00:28:23 -0800\n",
              "style" => "",
              "text" => "Date: Wed, 07 Apr 1999 00:28:23 -0800"
            },
            {
              "line" => 1734,
              "raw" => "    \tMessage-ID: <FGBNLNPOEELFAAAA\@my-dejanews.com>\n",
              "style" => "",
              "text" => "Message-ID: <FGBNLNPOEELFAAAA\@my-dejanews.com>"
            },
            {
              "line" => 1735,
              "raw" => "    \tSubject: [PATCH 5.005_56] function prototypes(B.pm)\n    \t--\n",
              "style" => "",
              "text" => "Subject: [PATCH 5.005_56] function prototypes(B.pm)"
            },
            {
              "line" => 1737,
              "raw" => "    \tDate: Thu, 22 Apr 1999 23:40:52 -0700\n",
              "style" => "",
              "text" => "Date: Thu, 22 Apr 1999 23:40:52 -0700"
            },
            {
              "line" => 1738,
              "raw" => "    \tMessage-ID: <OEAOMKBMLDADCAAA\@my-dejanews.com>\n",
              "style" => "",
              "text" => "Message-ID: <OEAOMKBMLDADCAAA\@my-dejanews.com>"
            },
            {
              "line" => 1739,
              "raw" => "    \tSubject: [PATCH 5.005_56 ] discarding worthless padsvs\n    \t--\n",
              "style" => "",
              "text" => "Subject: [PATCH 5.005_56 ] discarding worthless padsvs"
            },
            {
              "line" => 1741,
              "raw" => "    \tDate: Tue, 27 Apr 1999 01:14:49 PDT\n",
              "style" => "",
              "text" => "Date: Tue, 27 Apr 1999 01:14:49 PDT"
            },
            {
              "line" => 1742,
              "raw" => "    \tMessage-ID: <19990427081449.28615.qmail\@hotmail.com>\n",
              "style" => "",
              "text" => "Message-ID: <19990427081449.28615.qmail\@hotmail.com>"
            },
            {
              "line" => 1743,
              "raw" => "    \tSubject: [PATCH 5.005_56] pp_ncmp implementation ( CC.pm)\n\n",
              "style" => "",
              "text" => "Subject: [PATCH 5.005_56] pp_ncmp implementation ( CC.pm)"
            }
          ],
          "line" => 1727,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-05-06 10:01:23\n    \@3314 compiler fixes from Vishal Bhatia <vishalb\@hotmail.com>\n    \tDate: Tue, 30 Mar 1999 23:40:34 PST\n    \tMessage-ID: <19990331074034.6117.qmail\@hotmail.com>\n    \tSubject: [PATCH 5.005_56] pp_entersub and pp_leavewrite(CC.pm)\n    \t--\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-05-06 10:01:23 \@3314 compiler fixes from Vishal Bhatia <vishalb\@hotmail.com> Date: Tue, 30 Mar 1999 23:40:34 PST Message-ID: <19990331074034.6117.qmail\@hotmail.com> Subject: [PATCH 5.005_56] pp_entersub and pp_leavewrite(CC.pm)"
        },
        {
          "line" => 1745,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-03-23 17:21:43\n    \@3168 applied needful parts of suggested patch\n    \tMessage-ID: <OOOKJGFMLFLHBAAA\@my-dejanews.com>\n    \tSubject: [PATCH 5.005_56] pp_formline correction\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-03-23 17:21:43 \@3168 applied needful parts of suggested patch Message-ID: <OOOKJGFMLFLHBAAA\@my-dejanews.com> Subject: [PATCH 5.005_56] pp_formline correction"
        },
        {
          "line" => 1750,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-03-25 07:21:05\n    \@3165 fix refcnt on PL_main_cv (variant of suggestion by Vishal Bhatia\n    <vishalb\@hotmail.com>)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-03-25 07:21:05 \@3165 fix refcnt on PL_main_cv (variant of suggestion by Vishal Bhatia <vishalb\@hotmail.com>)"
        },
        {
          "line" => 1754,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-03-11 08:40:27\n    \@3142 applied suggested patch, modulo bogus hunk\n    \tMessage-ID: <19990311154027.25891.qmail\@hotmail.com>\n    \tSubject: [PATCH 5.005_56] Minor fixes in perlcc\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-03-11 08:40:27 \@3142 applied suggested patch, modulo bogus hunk Message-ID: <19990311154027.25891.qmail\@hotmail.com> Subject: [PATCH 5.005_56] Minor fixes in perlcc"
        },
        {
          "line" => 1759,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-03-03 00:27:25\n    \@3066 updates to compiler modules\n    \tMessage-ID: <19990303072725.779.qmail\@hotmail.com>\n    \tSubject: PATCH 5.005_56 + Test procedure\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-03-03 00:27:25 \@3066 updates to compiler modules Message-ID: <19990303072725.779.qmail\@hotmail.com> Subject: PATCH 5.005_56 + Test procedure"
        },
        {
          "line" => 1764,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-02-08 02:14:41\n    \@2940 enable dynaloading in C.pm-compiled programs (non-conflicting part\n    of suggested patch)\n    \tMessage-ID: <DHIDFFOPMEFDBAAA\@my-dejanews.com>\n    \tSubject: [PATCH 5.005_54] some pending C.pm stuff\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-02-08 02:14:41 \@2940 enable dynaloading in C.pm-compiled programs (non-conflicting part of suggested patch) Message-ID: <DHIDFFOPMEFDBAAA\@my-dejanews.com> Subject: [PATCH 5.005_54] some pending C.pm stuff"
        },
        {
          "line" => 1770,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-02-12 12:09:27\n    \@2894 add missing hunk in change#2657 from Vishal Bhatia <vishal\@deja.com>\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-02-12 12:09:27 \@2894 add missing hunk in change#2657 from Vishal Bhatia <vishal\@deja.com>"
        },
        {
          "line" => 1773,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-01-18 02:32:31\n    \@2657 pp_mapstart & pp_grepstart return val (CC.pm)\n    To: perl5-porters\@perl.org\n    Message-ID: <19990118093231.18443.qmail\@hotmail.com>\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-01-18 02:32:31 \@2657 pp_mapstart & pp_grepstart return val (CC.pm) To: perl5-porters\@perl.org Message-ID: <19990118093231.18443.qmail\@hotmail.com>"
        },
        {
          "line" => 1778,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-01-17 17:41:10\n    \@2639 Duplicate saved ops (CC.pm)\n    Message-Id: <19990118004111.29667.qmail\@hotmail.com>\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-01-17 17:41:10 \@2639 Duplicate saved ops (CC.pm) Message-Id: <19990118004111.29667.qmail\@hotmail.com>"
        },
        {
          "line" => 1782,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-01-17 10:12:42\n    \@2621 fix change#2602 to not used hard coded constants\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1999-01-17 10:12:42 \@2621 fix change#2602 to not used hard coded constants"
        },
        {
          "line" => 1785,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-01-11 09:02:41\n    \@2602 B::MAGIC::PTR doesnot check for valid length.\n    Lines: 134\n    Message-ID: <MLIST_19990111052126.27966.qmail\@hotmail.com>\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-01-11 09:02:41 \@2602 B::MAGIC::PTR doesnot check for valid length. Lines: 134 Message-ID: <MLIST_19990111052126.27966.qmail\@hotmail.com>"
        },
        {
          "line" => 1790,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1999-01-08 13:43:36\n    \@2600 B::CC::pp_rv2cv problem\n    To: perl5-porters\@perl.org\n    Message-ID: <MLIST_19990108101557.4481.qmail\@hotmail.com>\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1999-01-08 13:43:36 \@2600 B::CC::pp_rv2cv problem To: perl5-porters\@perl.org Message-ID: <MLIST_19990108101557.4481.qmail\@hotmail.com>"
        },
        {
          "line" => 1795,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-12-16 04:17:03\n    \@2525 More minor  Fixes in CC.pm/C.pm\n    To: perl5-porters\@perl.org\n    Message-ID: <MLIST_199812160055.QAA06272\@f10.hotmail.com>\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-12-16 04:17:03 \@2525 More minor  Fixes in CC.pm/C.pm To: perl5-porters\@perl.org Message-ID: <MLIST_199812160055.QAA06272\@f10.hotmail.com>"
        },
        {
          "line" => 1800,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-12-10 09:30:02\n    \@2524 Re:perlcc -e 'my \$x = shift; print +(\$x ?...' failure\n    To: perl5-porters\@perl.org\n    Cc: rmb1\@cise.npl.co.uk, nick\@ni-s.u-net.com\n    Message-ID: <MLIST_19981210061651.29891.qmail\@hotmail.com>\n    (Nick's part was applied earlier, in change #2460)\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-12-10 09:30:02 \@2524 Re:perlcc -e 'my \$x = shift; print +(\$x ?...' failure To: perl5-porters\@perl.org Cc: rmb1\@cise.npl.co.uk, nick\@ni-s.u-net.com Message-ID: <MLIST_19981210061651.29891.qmail\@hotmail.com> (Nick's part was applied earlier, in change #2460)"
        },
        {
          "line" => 1807,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-12-09 07:50:30\n    \@2523 return value of perlcc/B::CC generated functions.\n    To: nick\@ni-s.u-net.com\n    Cc: perl5-porters\@perl.org\n    Message-ID: <MLIST_19981209043146.16829.qmail\@hotmail.com>\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-12-09 07:50:30 \@2523 return value of perlcc/B::CC generated functions. To: nick\@ni-s.u-net.com Cc: perl5-porters\@perl.org Message-ID: <MLIST_19981209043146.16829.qmail\@hotmail.com>"
        },
        {
          "line" => 1813,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-12-20 20:03:25\n    \@2492 pp_next/pp_last/pp_redo problems\n    To: perl5-porters\@perl.org\n    Message-ID: <19981221030326.27660.qmail\@hotmail.com>\n    (slightly reformatted)\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-12-20 20:03:25 \@2492 pp_next/pp_last/pp_redo problems To: perl5-porters\@perl.org Message-ID: <19981221030326.27660.qmail\@hotmail.com> (slightly reformatted)"
        },
        {
          "line" => 1819,
          "raw" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1999-01-02 14:06:30\n    \@2551 Export constant subs from B.xs for op.h, cop.h and a few others.\n    Use them in various B::* rather than have local defs.\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1999-01-02 14:06:30 \@2551 Export constant subs from B.xs for op.h, cop.h and a few others. Use them in various B::* rather than have local defs."
        },
        {
          "line" => 1823,
          "raw" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1999-01-02 10:04:02\n    \@2550 Integrate ext/B changes from //depot/cfgperl\n    'copy in' ext/B/B.xs\n    \t(\@2460..) 'merge in' ext/B/B/C.pm ext/B/B/CC.pm\n    \text/B/B/Stackobj.pm (\@2524..)\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1999-01-02 10:04:02 \@2550 Integrate ext/B changes from //depot/cfgperl 'copy in' ext/B/B.xs (\@2460..) 'merge in' ext/B/B/C.pm ext/B/B/CC.pm ext/B/B/Stackobj.pm (\@2524..)"
        },
        {
          "line" => 1829,
          "raw" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1999-01-02 10:04:02\n    \@2491 Integrate ext/B changes from //depot/cfgperl\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1999-01-02 10:04:02 \@2491 Integrate ext/B changes from //depot/cfgperl"
        },
        {
          "line" => 1832,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-09-23 09:52:46\n    B::Asmdata define PUT_svindex(), PUT_opindex()\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-09-23 09:52:46 B::Asmdata define PUT_svindex(), PUT_opindex()"
        },
        {
          "line" => 1835,
          "raw" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-12-20 14:21:29\n    \@2491 Save _all_ GV's which have SV, AV or HV set.\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-12-20 14:21:29 \@2491 Save _all_ GV's which have SV, AV or HV set."
        },
        {
          "entries" => [
            {
              "line" => 1845,
              "raw" => "    Vishal would appreciate comments about B::Stackobj changes from\n",
              "style" => "",
              "text" => "Vishal would appreciate comments about B::Stackobj changes from"
            },
            {
              "line" => 1846,
              "raw" => "    someone knowing that module well.\n\n",
              "style" => "",
              "text" => "someone knowing that module well."
            }
          ],
          "line" => 1838,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-12-09 23:16:50\n    \@2461 1. Fixes the bug  reported by  Robin Barker <rmb1\@cise.npl.co.uk>\n    2. Fixes the bug  regarding return value of c-functions generated out\n    of perl subs. ( Just includes the patch I sent earlier)\n    3. Incorporates the other changes that need to be done to get CC.pm\n    use ISA search for packages and methods on the same lines as C.pm\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-12-09 23:16:50 \@2461 1. Fixes the bug  reported by  Robin Barker <rmb1\@cise.npl.co.uk> 2. Fixes the bug  regarding return value of c-functions generated out of perl subs. ( Just includes the patch I sent earlier) 3. Incorporates the other changes that need to be done to get CC.pm use ISA search for packages and methods on the same lines as C.pm"
        },
        {
          "line" => 1848,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-12-05 17:14:42\n    \@2453 Avoid hard-coding op numbers\n    Update CC.pm to save %INC, and to co-exist with new C.pm\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-12-05 17:14:42 \@2453 Avoid hard-coding op numbers Update CC.pm to save %INC, and to co-exist with new C.pm"
        },
        {
          "line" => 1852,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-12-05 11:44:28\n    \@2452 B.xs had its own code to calculate hash() which differed from\n    PERL_HASH in hv.h - so all saved HV's were mangled - including %INC\n    which meant that run-time require was re-done.\n    Removed some debug from C.pm\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-12-05 11:44:28 \@2452 B.xs had its own code to calculate hash() which differed from PERL_HASH in hv.h - so all saved HV's were mangled - including %INC which meant that run-time require was re-done. Removed some debug from C.pm"
        },
        {
          "line" => 1858,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-12-04 22:58:49\n    \@2451 Snapshot of re-worked B::C which compiles Tk apps at least as\n    well as _54, but with pre-scan for classes and save the ISA scheme.\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-12-04 22:58:49 \@2451 Snapshot of re-worked B::C which compiles Tk apps at least as well as _54, but with pre-scan for classes and save the ISA scheme."
        },
        {
          "line" => 1862,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-12-04 18:58:44\n    \@2450 Vishal Bhatia's patch as a basis.\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-12-04 18:58:44 \@2450 Vishal Bhatia's patch as a basis."
        },
        {
          "entries" => [
            {
              "line" => 1869,
              "raw" => "      While we don't save \"bootstrap\" CV we need to provide a stub,\n",
              "style" => "",
              "text" => "While we don't save \"bootstrap\" CV we need to provide a stub,"
            },
            {
              "line" => 1870,
              "raw" => "      so that if we require it later we don't fall through and attempt\n",
              "style" => "",
              "text" => "so that if we require it later we don't fall through and attempt"
            },
            {
              "line" => 1871,
              "raw" => "      to DynaLoad module again.\n\n",
              "style" => "",
              "text" => "to DynaLoad module again."
            },
            {
              "line" => 1873,
              "raw" => "      Attempt to save %INC so that \"require\" does not reload things\n",
              "style" => "",
              "text" => "Attempt to save %INC so that \"require\" does not reload things"
            },
            {
              "line" => 1874,
              "raw" => "      we have compiled-in (does not work right yet - seems to be due\n",
              "style" => "",
              "text" => "we have compiled-in (does not work right yet - seems to be due"
            },
            {
              "line" => 1875,
              "raw" => "      to PL_incgv being created in perl_parse() current scheme setting\n",
              "style" => "",
              "text" => "to PL_incgv being created in perl_parse() current scheme setting"
            },
            {
              "line" => 1876,
              "raw" => "      GvHV() is \"better\" than saving the glob, but still does not\n",
              "style" => "",
              "text" => "GvHV() is \"better\" than saving the glob, but still does not"
            },
            {
              "line" => 1877,
              "raw" => "      work as I expect).\n\n",
              "style" => "",
              "text" => "work as I expect)."
            }
          ],
          "line" => 1865,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-11-28 23:46:57\n    \@2378 More C.pm tweaks\n      Save globs even if we have saved cv itself before - may be imported.\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-11-28 23:46:57 \@2378 More C.pm tweaks Save globs even if we have saved cv itself before - may be imported."
        },
        {
          "line" => 1879,
          "raw" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-11-27 22:10:27\n    \@2332 Handle INIT list in C.pm\n    1. Provide init_av() from B.xs\n    2. Export it in B.pm\n    3. Use it in C.pm\n    Also disable some pruning in savecv() which seems to undo\n    my previous patch.\n    Experimental feature - save pathnames of .so files in easily\n    grep-able form for use in wrapper to feed to linker.\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nik\@tiuk.ti.com>  1998-11-27 22:10:27 \@2332 Handle INIT list in C.pm 1. Provide init_av() from B.xs 2. Export it in B.pm 3. Use it in C.pm Also disable some pruning in savecv() which seems to undo my previous patch. Experimental feature - save pathnames of .so files in easily grep-able form for use in wrapper to feed to linker."
        },
        {
          "line" => 1889,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-11-27 15:41:38\n    \@2324 B::C tweaks to allow Tk compiles from Nick Ing-Simmons\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-11-27 15:41:38 \@2324 B::C tweaks to allow Tk compiles from Nick Ing-Simmons"
        },
        {
          "line" => 1892,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-10-29 00:45:32\n    \@2146 hand-apply whitespace-mutiliated patch\n    \tMessage-ID: <19981029074534.2334.qmail\@hotmail.com>\n    \tSubject: [PATCH 5.005_52]Compiling modules,more bugfixes for B\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-10-29 00:45:32 \@2146 hand-apply whitespace-mutiliated patch Message-ID: <19981029074534.2334.qmail\@hotmail.com> Subject: [PATCH 5.005_52]Compiling modules,more bugfixes for B"
        },
        {
          "line" => 1897,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-10-22 00:59:03\n    \@2072 implement C<goto &func> and other fixes (via private mail)\n    Message-Id: <19981022055904.20083.qmail\@hotmail.com>\n    Subject: [PATCH 5.005_52] More fixes for B\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-10-22 00:59:03 \@2072 implement C<goto &func> and other fixes (via private mail) Message-Id: <19981022055904.20083.qmail\@hotmail.com> Subject: [PATCH 5.005_52] More fixes for B"
        },
        {
          "line" => 1902,
          "raw" => "Vishal Bhatia <vishal\@deja.com>  1998-10-11 20:41:38\n    \@1993 fix bug in B::CC::pp_sassign()\n    Message-ID: <19981012014139.19614.qmail\@hotmail.com>\n    Subject: B::CC problems with pp_sassign routine\n\n",
          "style" => "",
          "text" => "Vishal Bhatia <vishal\@deja.com>  1998-10-11 20:41:38 \@1993 fix bug in B::CC::pp_sassign() Message-ID: <19981012014139.19614.qmail\@hotmail.com> Subject: B::CC problems with pp_sassign routine"
        },
        {
          "line" => 1907,
          "raw" => "Jarkko Hietaniemi <jhi\@iki.fi>  1998-10-17 15:17:19\n    \@2005 Integrate mainperl.\n\n",
          "style" => "",
          "text" => "Jarkko Hietaniemi <jhi\@iki.fi>  1998-10-17 15:17:19 \@2005 Integrate mainperl."
        },
        {
          "line" => 1910,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-09-23 11:52:46\n    \@1842 define PUT_svindex(), PUT_opindex()\n\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-09-23 11:52:46 \@1842 define PUT_svindex(), PUT_opindex()"
        },
        {
          "line" => 1914,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-08-02 07:09:35\n    \@1708 fixes for pod noises\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-08-02 07:09:35 \@1708 fixes for pod noises"
        },
        {
          "line" => 1917,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-22 02:08:00\n    \@1618 fix up B modules for PL_* changes\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-22 02:08:00 \@1618 fix up B modules for PL_* changes"
        },
        {
          "line" => 1920,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-07-21 18:13:16\n    \@1617 Compiler docs for 5.005\n    Message-Id: <199807211713.SAA20735\@sable.ox.ac.uk>\n\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-07-21 18:13:16 \@1617 Compiler docs for 5.005 Message-Id: <199807211713.SAA20735\@sable.ox.ac.uk>"
        },
        {
          "line" => 1924,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-22 01:29:09\n    \@1616 s/PL_sv/PL_bytecode_sv/ etc., so we have unique, case-insensitive\n    names\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-22 01:29:09 \@1616 s/PL_sv/PL_bytecode_sv/ etc., so we have unique, case-insensitive names"
        },
        {
          "line" => 1928,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-21 07:12:00\n    \@1611 fix bytecode.pl with moved var names\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-21 07:12:00 \@1611 fix bytecode.pl with moved var names"
        },
        {
          "line" => 1931,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-21 05:31:13\n    \@1608 part 2 of PERL_OBJECT fixes (globals in bytecode.h moved to intrpvar.h)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-21 05:31:13 \@1608 part 2 of PERL_OBJECT fixes (globals in bytecode.h moved to intrpvar.h)"
        },
        {
          "line" => 1934,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-21 05:29:10\n    \@1607 part 1 of PERL_OBJECT fixes for new var names\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-21 05:29:10 \@1607 part 1 of PERL_OBJECT fixes for new var names"
        },
        {
          "line" => 1937,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-20 09:38:39\n    \@1578 complete s/foo/PL_foo/ changes (all escaped cases identified with\n    brute force search script).  Result builds and passes all tests on\n    Solaris.  win32 and PERL_OBJECT are still untested.\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-20 09:38:39 \@1578 complete s/foo/PL_foo/ changes (all escaped cases identified with brute force search script).  Result builds and passes all tests on Solaris.  win32 and PERL_OBJECT are still untested."
        },
        {
          "line" => 1942,
          "raw" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-07-18 13:53:03\n    PL_ prefix to all perlvars, part1\n       Builds and passes all tests at one limit i.e. -DPERL_GLOBAL_STRUCT\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-07-18 13:53:03 PL_ prefix to all perlvars, part1 Builds and passes all tests at one limit i.e. -DPERL_GLOBAL_STRUCT"
        },
        {
          "line" => 1946,
          "raw" => "Ilya Zakharevich <ilya\@math.ohio-state.edu>  1998-07-15 06:10:36\n    \@1548 Minor improvements to perlcc\n    Message-Id: <199807151010.GAA11270\@monk.mps.ohio-state.edu>\n\n",
          "style" => "",
          "text" => "Ilya Zakharevich <ilya\@math.ohio-state.edu>  1998-07-15 06:10:36 \@1548 Minor improvements to perlcc Message-Id: <199807151010.GAA11270\@monk.mps.ohio-state.edu>"
        },
        {
          "line" => 1950,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-15 10:01:41\n    \@1516 add stub docs for ext/B, other minor tweaks\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-15 10:01:41 \@1516 add stub docs for ext/B, other minor tweaks"
        },
        {
          "line" => 1953,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-09 05:37:48\n    get it building again on win32\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-09 05:37:48 get it building again on win32"
        },
        {
          "line" => 1956,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-04 05:02:01\n    \@1292 fix perlcc to not rm output file, and other -w(arts)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-07-04 05:02:01 \@1292 fix perlcc to not rm output file, and other -w(arts)"
        },
        {
          "line" => 1959,
          "raw" => "Stephen McCamant <alias\@mcs.com>  1998-06-22 21:19:43\n    \@1200 Inheritance of B:: classes\n    Message-Id: <m0yoIgR-000EP2C\@alias-2.pr.mcs.net>\n\n",
          "style" => "",
          "text" => "Stephen McCamant <alias\@mcs.com>  1998-06-22 21:19:43 \@1200 Inheritance of B:: classes Message-Id: <m0yoIgR-000EP2C\@alias-2.pr.mcs.net>"
        },
        {
          "line" => 1963,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-06-19 17:22:23\n    update repository copy of Asmdata.pm after `perl bytecode.pl`\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-06-19 17:22:23 update repository copy of Asmdata.pm after `perl bytecode.pl`"
        },
        {
          "line" => 1966,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-06-11 02:59:23\n    \@1113 fix outdated bytecode.pl\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-06-11 02:59:23 \@1113 fix outdated bytecode.pl"
        },
        {
          "line" => 1969,
          "raw" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-05-14 18:09:01\n    \@972 Changes to allow compiler with gcc-2.8.1 in C++ mode,\n    Remove K&R style functions, avoid struct/typedef clash.\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-05-14 18:09:01 \@972 Changes to allow compiler with gcc-2.8.1 in C++ mode, Remove K&R style functions, avoid struct/typedef clash."
        },
        {
          "line" => 1973,
          "raw" => "Ed Peschko <epeschko\@den-mdev1>  1998-04-29 21:02:36\n    \@963 [ PATCH 5.004_64 ] Integrated regression tests for compiler\n    added perlcc.PL\n\n",
          "style" => "",
          "text" => "Ed Peschko <epeschko\@den-mdev1>  1998-04-29 21:02:36 \@963 [ PATCH 5.004_64 ] Integrated regression tests for compiler added perlcc.PL"
        },
        {
          "line" => 1977,
          "raw" => "Ilya Zakharevich <ilya\@math.ohio-state.edu>  1998-04-08 03:21:03\n    \@942 Subject: [PATCH 5.004_64] Cryptic error from B::CC\n    Date: Sat, 11 Apr 1998 19:52:25 -0400 (EDT)\n\n",
          "style" => "",
          "text" => "Ilya Zakharevich <ilya\@math.ohio-state.edu>  1998-04-08 03:21:03 \@942 Subject: [PATCH 5.004_64] Cryptic error from B::CC Date: Sat, 11 Apr 1998 19:52:25 -0400 (EDT)"
        },
        {
          "line" => 1981,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-04-14 16:22:51\n    \@888 [compiler] CC did \"<<\" instead of \">>\" for right-shift on ints.\n\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-04-14 16:22:51 \@888 [compiler] CC did \"<<\" instead of \">>\" for right-shift on ints."
        },
        {
          "line" => 1984,
          "raw" => "Charles Bailey <bailey\@newman.upenn.edu>  1998-03-02 01:48:27\n    Miscellaneous minor fixes\n\n",
          "style" => "",
          "text" => "Charles Bailey <bailey\@newman.upenn.edu>  1998-03-02 01:48:27 Miscellaneous minor fixes"
        },
        {
          "line" => 1987,
          "raw" => "Spider Boardman <spider\@orb.nashua.nh.us>  1998-03-01 02:02:47\n    Almost OK: 5.004_61 (threads, perlio)\n\n",
          "style" => "",
          "text" => "Spider Boardman <spider\@orb.nashua.nh.us>  1998-03-01 02:02:47 Almost OK: 5.004_61 (threads, perlio)"
        },
        {
          "line" => 1990,
          "raw" => "Andrew Cohen <cohen\@andy.bu.edu>  1998-02-27 20:03:29\n    Change getc/fread to PerlIO_getc/fread in bytecode.h:\n    Subject: [PATCH 5.004_61] bunch of small patches\n\n",
          "style" => "",
          "text" => "Andrew Cohen <cohen\@andy.bu.edu>  1998-02-27 20:03:29 Change getc/fread to PerlIO_getc/fread in bytecode.h: Subject: [PATCH 5.004_61] bunch of small patches"
        },
        {
          "line" => 1994,
          "raw" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-02-28 11:31:15\n    Missed FREAD in bytecode.h\n    Cannot export svref_mutex in non-threaded perl\n\n",
          "style" => "",
          "text" => "Nick Ing-Simmons <nick\@ing-simmons.net>  1998-02-28 11:31:15 Missed FREAD in bytecode.h Cannot export svref_mutex in non-threaded perl"
        },
        {
          "line" => 1998,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-27 18:35:27\n    Change FREAD/FGETC to BGET_FREAD/BGET_FGETC to avoid clash with\n    preprocessor symbol on Digital UNIX.\n\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-27 18:35:27 Change FREAD/FGETC to BGET_FREAD/BGET_FGETC to avoid clash with preprocessor symbol on Digital UNIX."
        },
        {
          "entries" => [
            {
              "line" => 2004,
              "raw" => "     - export symbols needed for building B\n",
              "style" => "-",
              "text" => "export symbols needed for building B"
            },
            {
              "line" => 2005,
              "raw" => "     - bset_obj_store() is needed by byterun(), so define it there instead\n       of at B.xs, and export it\n",
              "style" => "-",
              "text" => "bset_obj_store() is needed by byterun(), so define it there instead of at B.xs, and export it"
            },
            {
              "line" => 2007,
              "raw" => "     - freadpv() is only used in B.xs, so move it there\n",
              "style" => "-",
              "text" => "freadpv() is only used in B.xs, so move it there"
            },
            {
              "line" => 2008,
              "raw" => "     - byte*.h are now included by perl.h\n",
              "style" => "-",
              "text" => "byte*.h are now included by perl.h"
            },
            {
              "line" => 2009,
              "raw" => "     - regenerate embed*.h\n\n",
              "style" => "-",
              "text" => "regenerate embed*.h"
            }
          ],
          "line" => 2002,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-02-26 03:56:19\n    \@589 [win32] various cleanups so that B can be built as \"just another extension\"\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-02-26 03:56:19 \@589 [win32] various cleanups so that B can be built as \"just another extension\""
        },
        {
          "line" => 2011,
          "raw" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-02-22 02:40:56\n    \@568 [win32] get compiler building under win32 (needed Makefile.PL\n    hacks that could be applicable to other platforms)\n\n",
          "style" => "",
          "text" => "Gurusamy Sarathy <gsar\@cpan.org>  1998-02-22 02:40:56 \@568 [win32] get compiler building under win32 (needed Makefile.PL hacks that could be applicable to other platforms)"
        },
        {
          "line" => 2015,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-25 17:44:34\n    \@585 More compiler tweaks.\n\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-25 17:44:34 \@585 More compiler tweaks."
        },
        {
          "line" => 2018,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 18:23:47\n    \@565 Remove compiler files from their old lib/B locations. The compiler\n    now builds by default (without the byteperl executable so far) and\n    seems to work at least minimally.\n\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 18:23:47 \@565 Remove compiler files from their old lib/B locations. The compiler now builds by default (without the byteperl executable so far) and seems to work at least minimally."
        },
        {
          "line" => 2023,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 18:05:33\n    \@564 Move lib/B/... and lib/[BO].pm over to where they should be,\n    under ext/B.\n\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 18:05:33 \@564 Move lib/B/... and lib/[BO].pm over to where they should be, under ext/B."
        },
        {
          "entries" => [
            {
              "line" => 2029,
              "raw" => "    [Still won't work as of this change.]\n\n",
              "style" => "[]",
              "text" => "Still won't work as of this change."
            }
          ],
          "line" => 2027,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 17:54:58\n    \@563 Start getting compiler to work when built with the core.\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 17:54:58 \@563 Start getting compiler to work when built with the core."
        },
        {
          "entries" => [
            {
              "line" => 2033,
              "raw" => "\t* Merge perlext/Compiler/... into mainline. Some files move to\n",
              "style" => "*",
              "text" => "Merge perlext/Compiler/... into mainline. Some files move to"
            },
            {
              "line" => 2034,
              "raw" => "    ext/B/..., some to lib/B/..., O.pm and B.pm go in lib and some\n",
              "style" => "",
              "text" => "ext/B/..., some to lib/B/..., O.pm and B.pm go in lib and some"
            },
            {
              "line" => 2035,
              "raw" => "    move to the base perl directory (e.g. headers). Will need some\n",
              "style" => "",
              "text" => "move to the base perl directory (e.g. headers). Will need some"
            },
            {
              "line" => 2036,
              "raw" => "    cleaning up before it builds properly, I would guess.\n\n",
              "style" => "",
              "text" => "cleaning up before it builds properly, I would guess."
            }
          ],
          "line" => 2031,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 16:42:13\n\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 16:42:13"
        },
        {
          "entries" => [
            {
              "line" => 2039,
              "raw" => "\t* [compiler] Win32 changes from Sarathy, tweaked slightly by me.\n\n",
              "style" => "*",
              "text" => "[compiler] Win32 changes from Sarathy, tweaked slightly by me."
            }
          ],
          "line" => 2038,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 16:39:38\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-20 16:39:38"
        },
        {
          "entries" => [
            {
              "line" => 2042,
              "raw" => "\t* Assorted changes to the compiler\n\n",
              "style" => "*",
              "text" => "Assorted changes to the compiler"
            }
          ],
          "line" => 2041,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-17 17:50:50\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1998-02-17 17:50:50"
        },
        {
          "entries" => [
            {
              "line" => 2045,
              "raw" => "\t* Fix typo in compiler B/C.pm.\n\n",
              "style" => "*",
              "text" => "Fix typo in compiler B/C.pm."
            }
          ],
          "line" => 2044,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-12-17 10:59:40\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-12-17 10:59:40"
        },
        {
          "entries" => [
            {
              "line" => 2049,
              "raw" => "\t* Start overhauling compiler. It was working at least minimally\n",
              "style" => "*",
              "text" => "Start overhauling compiler. It was working at least minimally"
            },
            {
              "line" => 2050,
              "raw" => "    right up until the final tweak of B.xs to add threadsv_names\n",
              "style" => "",
              "text" => "right up until the final tweak of B.xs to add threadsv_names"
            },
            {
              "line" => 2051,
              "raw" => "    at which point building it provokes a seg fault in perl while\n",
              "style" => "",
              "text" => "at which point building it provokes a seg fault in perl while"
            },
            {
              "line" => 2052,
              "raw" => "    doing the xsubpp :-(.\n\n",
              "style" => "",
              "text" => "doing the xsubpp :-(."
            }
          ],
          "line" => 2047,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-12-10 18:33:53\n\tAlpha5\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-12-10 18:33:53 Alpha5"
        },
        {
          "entries" => [
            {
              "line" => 2055,
              "raw" => "\t* Make compiler build/work with devel 5.005\n\n",
              "style" => "*",
              "text" => "Make compiler build/work with devel 5.005"
            }
          ],
          "line" => 2054,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-09-03 12:31:48\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-09-03 12:31:48"
        },
        {
          "entries" => [
            {
              "line" => 2058,
              "raw" => "\t* Change %lx to %x in B::CV::save to prevent some CV\n",
              "style" => "*",
              "text" => "Change %lx to %x in B::CV::save to prevent some CV"
            },
            {
              "line" => 2059,
              "raw" => "    fields becoming 0 in the init section. Add missing\n",
              "style" => "",
              "text" => "fields becoming 0 in the init section. Add missing"
            },
            {
              "line" => 2060,
              "raw" => "    write_back in B::Stackobj::Padsv::load_double to fix\n",
              "style" => "",
              "text" => "write_back in B::Stackobj::Padsv::load_double to fix"
            },
            {
              "line" => 2061,
              "raw" => "    test 22 of op/my.t.\n\n",
              "style" => "",
              "text" => "test 22 of op/my.t."
            }
          ],
          "line" => 2057,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-07-05 11:58:05\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-07-05 11:58:05"
        },
        {
          "entries" => [
            {
              "line" => 2064,
              "raw" => "\t* B::CC::pp_padsv must cope with vivify_ref (5.004)\n\t  as well as provide_ref (5.003)\n\n",
              "style" => "*",
              "text" => "B::CC::pp_padsv must cope with vivify_ref (5.004) as well as provide_ref (5.003)"
            }
          ],
          "line" => 2063,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-07-05 11:58:05\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-07-05 11:58:05"
        },
        {
          "entries" => [
            {
              "line" => 2069,
              "raw" => "\t* initial check in of compiler\n\tfrom version Alpha a3 to a4\n",
              "style" => "*",
              "text" => "initial check in of compiler from version Alpha a3 to a4"
            }
          ],
          "line" => 2067,
          "raw" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-05-03 14:47:06\n\tAlpha 4\n",
          "style" => "",
          "text" => "Malcolm Beattie <mbeattie\@sable.ox.ac.uk>  1997-05-03 14:47:06 Alpha 4"
        }
      ],
      "line" => 1381,
      "note" => "rurban (never uploaded)",
      "raw" => "1.04_01 2008-01-15 rurban (never uploaded)\n",
      "raw_date" => "2008-01-15",
      "version" => "1.04_01"
    }
  ]
}
