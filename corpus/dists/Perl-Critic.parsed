{
  "preamble" => "[1.120_01] Released on 2013-10-29\n\n      * DEVELOPER RELEASE *\n\n      Added new themes based on CERT guidelines. Thanks Kirk Kimmel.\n\n      First release from the new GitHub repository.\n\n[1.120] Released on 2013-10-25\n\n     Bug Fixes:\n     * Corrected \"Possible precedence issue with control flow operator\" \n       warning.  This fixes RT #88866\n\n[1.119] Released on 2013-09-25\n\n     Bug Fixes:\n     * Tests were failing with Config::Tiny 2.17 or later, due to a\n       change in the error messages produced by that module. \n       This fixes #16 on Github,  #88679 & #88889 on RT.\n\n\n     Policy Changes:\n     * BuiltinFunctions::ProhibitVoidGrep and ::ProhibitVoidMap: grep\n       and map called as functions are now allowed in slice operations.\n       RT #79289\n       Thanks to Wade at Anomaly dot org for the patch.\n     * Subroutines::RequireArgUnpacking: Most tests of the size of \@_\n       are now allowed.  RT #79138\n\n     Other Changes:\n     * Modernized our usage of Exporter.  See RT #75300.  \n       Thanks to Olivier Mengu\303\251 for the patch.\n\n[1.118] Released on 2012-07-10\n\n    Policy Changes:\n    * CodeLayout::RequireTidyCode: Revise to work with incompatible\n      changes in Perl::Tidy 20120619. RT #77977.\n    * TestingAndDebugging::ProhibitNoWarnings: Correct the parse of the\n      'no warnings' statement, so that 'no warnings \"qw\"' is recognized\n      as supressing just 'qw' warnings. RT #74647.\n    * Miscellanea::RequireRcsKeywords has been moved to the Perl-Critic-More\n      distribution,  RT #69546\n\n    Other Changes:\n    * Make all unescaped literal \"{\" characters in regexps into\n      character classes. These are deprecated, and became noisy with\n      Perl 5.17.0.  RT #77510.\n\n[1.117] Released on 2011-12-21\n\n    HAPPY HOLIDAYS!\n\n    New Policies:\n    * Variables::ProhibitAugmentedAssignmentInDeclaration reports\n      constructs like 'my \$x += 1'. Contributed by Mike O'Regan\n\n    Policy Changes:\n    * BuiltinFunctions::ProhibitLvalueSubstr: Add explicit 'use version'.\n      RT #68498.\n    * CodeLayout::ProhibitHardTabs: Add 'pbp' to the default_themes list.\n      RT #71093.\n    * ControlStructures::ProhibitMutatingListFunctions now understands that\n      tr///r (introduced in 5.13.7) does not change its operand.\n    * ControlStructures::ProhibitMutatingListFunctions now understands that\n      '//=', '<<=', and '>>=' are assignment operators. RT #70901.\n    * ErrorHandling::RequireCheckingReturnValueOfEval now allows things\n      like grep { eval \$_ }. RT #69489.\n    * Modules::RequireExplicitPackage now has configuraion option\n      allow_import_of, to allow the import of specified modules before\n      the package statement. RT #72660.\n    * RegularExpressions::ProhibitEnumeratedClasses no longer thinks\n      that [A-Za-z_] matches \\w. RT #69322.\n    * RegularExpressions::ProhibitUnusedCaptures now skips the first\n      block of an 'if' or 'elsif' if the regular expression is bound to\n      its operand with the '!~' operator. RT #69867.\n    * RegularExpressions::ProhibitUnusedCaptures now looks into lists\n      and blocks in the replacement portion of the regular expression if\n      /e is asserted. RT #72086.\n    * RegularExpressions::RequireDotMatchAnything,\n      RegularExpressions::RequireExtendedFormatting and\n      RegularExpressions::RequireLineBoundaryMatching now honor defaults\n      set with 'use re \"/modifiers\"'. RT #72151.\n    * Subroutines::ProhibitManyArgs now recognizes '+' as a prototype\n      character.\n    * Variables::ProhibitPunctuationVars now recognizes bracketed\n      variables embedded in interpolated strings (e.g. \"\${\$}\"). For the\n      purpose of the 'allow' configuration, these are considered\n      equivalent to the unbracketed form. RT #72910.\n    Other Changes:\n    * Corrected POD in Perl::Critic::PPI::Utils. RT #68898.\n    * Perl::Critic::Violation source() method now returns the line\n      containing the violation (not the first line) when the statement\n      containing the violation spans multiple lines.\n\n[1.116] Released on 2011-05-15\n\n    Policy Changes:\n    * BuiltInFunctions::ProhibitLvalueSubstr does not report violations\n      if the document contains an explicit 'use n.nnn;' where the\n      version is before 5.005.  RT #59112\n    * Documentation::RequirePodSections no longer blows up on code\n      having POD but no =head1. This problem was introduced with RT\n      #59268. RT #67231\n    * RegularExpressions::ProhibitUnusedCapture should more reliably\n      find things like s/(a)/\${1}2/.  RT #67273.\n    * ValuesAndExpressions::ProhibitMagicNumbers and\n      Module::RequireVersionVar now treat versions passed as the second\n      argument of a 'package' statement the same as versions declared as\n      'our \$VERSION ...'.  RT #67159\n    * Variables::RequireLexicalLoopIterators does not report violations\n      if the document contains an explicit 'use n.nnn;' where the\n      version is before 5.004.  RT #67760\n\n[1.115] Released on 2011-03-31\n\n    Minor bits:\n    * Fatal error in RegularExpressions::ProhibitUnusedCapture here\n      document check.  RT #67116.\n    * Internal POD error in Documentation::RequirePodLinksIncludeText.  Patch\n      by Salvatore Bonaccorso.  RT #67012\n\n[1.114] Released on 2011-03-26\n\n    Policy Changes:\n    * Documentation::RequirePodLinksIncludeText now handles nested POD\n      formatting. RT #65569\n    * Clarified relation of severity numbers to names in Perl::Critic\n      POD. RT #66017\n    * Removed caveats from Variables::RequireLocalizedPunctuationVars,\n      no longer necessary with PPI 1.208. RT #65514\n    * Have InputOutput::RequireBriefOpen attempt to expand scope as\n      necessary to deal with the case where the open() and the\n      corresponding close() are not in the same scope. RT #64437\n    * RegularExpressions::ProhibitUnusedCapture now looks inside\n      double-quotish things. RT #38942.\n    * RegularExpressions::ProhibitUnusedCapture now takes logical\n      alternation into account, so that (e.g.)\n          if ( /(a)/ || /(b)/ ) {\n              say \$1;\n          }\n      is not a violation. RT #38942.\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements now\n      recognizes 'return { foo => 1, bar => 2 }' as containing a hash\n      constructor, not a block. This was fixed by PPI 1.215. RT #61301.\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements now\n      recognizes 'bless { foo => 1, bar => 2 }' as containing a hash\n      constructor, not a block. This was fixed by PPI 1.215. RT #64132.\n\n[1.113] Released on 2011-02-14\n\n    New Policies:\n    * InputOutput::RequireEncodingWithUTF8Layer recommends\n      ':encoding(utf8)' over ':utf8' in open() and binmode(). It is severity 5\n      because of the bad things that can happen if invalid UTF8 gets loose in\n      your code.\n    * Modules::ProhibitConditionalUseStatements prohibits\n      'use module' inside a conditional, since the statement is executed\n      unconditionally at compile time.  Thanks to Peter Guzis for submitting\n      the policy and tests in RT #59065.\n\n    Policy Changes:\n    * CodeLayout::RequireConsistentNewlines produces multiple undefined\n      value errors when a violation is found. RT #65663\n    * ControlStructures::ProhibitMutatingListFunctions allows s///r,\n      which was introduced in 5.13.2.\n    * ControlStructures::ProhibitPostfixControls now looks for \"when\".  It is\n      treated in the same way as \"if\".\n    * Documentation::RequirePodSections now honors '## no critic'\n      annotation anywhere before the '__END__', '__DATA__', or first\n      '=head1', whichever comes first.  The line number of the offending\n      '=head1 NAME' was added to the violation description.  RT #59268.\n    * RegularExpressions::ProhibitUnusedCapture now takes account of the\n      use of \$- and \$+ (and their English equivalents under 'use\n      English') provided the subscripts are literal integers.\n    * RegularExpressions::ProhibitUnusedCapture now takes account of the\n      use of capture variables in the replacement portion of\n      s/.../.../e.\n    * Subroutines::ProhibitUnusedPrivateSubroutines now looks inside\n      regular expressions.\n    * ValuesAndExpressions::ProhibitMagicNumbers now supports Const::Fast.\n    * ValuesAndExpressions::ProhibitMagicNumbers now has a\n      constant_creator_subroutines parameter to allow the user to\n      configure the names of subroutines that create constants. RT #62562.\n    * ValuesAndExpressions::ProhibitMismatchedOperators didn't handle file\n      test operators properly.  Patch by H.Merijn Brand.  RT #58751\n    * Variables::ProhibitUnusedVariables now looks inside regular\n      expressions.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now detects\n      and complains about \"\\b\" and \"\\l\" as documented in perlop, and\n      \"\\1\" through \"\\7\", which are not documented there, but were found\n      in toke.c.\n\n    New Developer Features:\n    * uses_module(), namespaces(), and subdocuments_for_namespace() methods on\n      Perl::Critic::Document.\n    * Perl::Critic::Document->new() now accepts a -filename-override argument\n      for setting the filename when the source code comes from something\n      other than an actual file.\n\n    Other Changes:\n    * Test::Perl::Critic::Policy no longer exports by default.\n    * Build phase now requires Test::Deep.\n    * Added example using Try::Tiny to documentation of\n      ErrorHandling::RequireCheckingReturnValueOfEval. Suggested by Andy\n      Lester on the developers mailing list.\n    * In order to get more consistent behavior across all installations of\n      Perl::Critic, IPC::Open2 (which actually is part of core), PPIx::Regexp,\n      Perl::Tidy, Pod::Spell, and Text::ParseWords are no longer optional\n      prerequisites.\n    * Now depends upon PPIx::Utilities v1.1.0.\n\n    Bug Fixes:\n    * Build.PL/Makefile.PL didn't specify a minimum version of version.pm, but\n      TestingAndDebugging::RequireUseStrict did.  RT #58952\n    * Perl::Critic::Annotation needs to look inside the __END__ statement to\n      find the true end of the document, otherwise POD policies may give false\n      positives.  RT #59176\n    * BuiltinFunctions::ProhibitStringyEval no longer dies on eval\n      \"#...\".  RT #60179\n    * RegularExpressions::ProhibitUnusedCapture now takes account of the\n      %LAST_PAREN_MATCH as well as %+ if English has been loaded.  RT #60002\n    * Subroutines::ProhibitManyArgs now interprets prototype groups (e.g.\n      \\[\$\@%]) as representing a single argument.\n    * Require Exporter version 5.63 (versus version 0) to get sane handling of\n      export tags.  RT# 61071\n    * Prevent Subroutines::ProhibitUnusedPrivateSubroutines from failing\n      on &_subroutine().  RT #61311\n    * Subroutines::ProhibitAmpersandSigils now allows references of the\n      form \\( &sub1, &sub2 ).  RT #49609\n\n[1.112_002] Released on 2011-02-09\n[1.112_001] Released on 2010-12-14\n\n    Changes summarized into 1.113 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.111] Released on 2010-12-14\n\n    Bug Fixes:\n    * TestingAndDebugging::ProhibitNoStrict and ProhibitNoWarnings no longer\n      rely on the behavior of all() when the list is empty due to change in\n      List::MoreUtils 0.28.  RT #63816\n\n[1.110_001] Released on 2010-11-30\n\n    Changes summarized into 1.113 above.  For exact details, see Changes on\n    BackPAN.  (Yes, all of this stuff was not in 1.111.)\n\n[1.109] Released on 2010-08-29\n\n    Bug Fixes:\n    * ValuesAndExpressions::RequireInterpolationOfMetachars fix due to changes\n      in Email::Address 1.890.  Note that this may find problems in code that\n      it didn't before, e.g. q<'\@foo'>.\n\n[1.108] Released on 2010-06-22\n\n    This is the \"Give Shawn Moore what we promised him a year ago and hurry up\n    and get this out before Brad Oaks gives his YAPC::NA talk\" release.\n\n    New Policies:\n    * Documentation::RequirePodLinksIncludeText\n    * Subroutines::ProhibitUnusedPrivateSubroutines\n\n    New Features:\n    * There is a new global configuration item, 'program-extensions', which\n      configures Perl::Critic's idea of which file name extensions represent\n      programs.  The desired extensions are specified as a space-separated list,\n      with leading '.' on each if that is desired.  Files whose names end in\n      '.PL' will always be considered programs.  This can be overridden by\n      command option --programs-extensions, which can be specified multiple\n      times.\n    * There is now a perlcritic --allow-unsafe switch.  Without this switch,\n      Perl::Critic will silently refuse to load any Policy that is marked\n      unsafe.  Unsafe Policies are usually ones that may compile or execute\n      untrusted code (see Perl::Critic::DynamicPolicy for an example); Policy\n      authors can mark their policies as unsafe by overriding the is_safe()\n      method.\n    * The framework that we use to test Perl::Critic Policies has been\n      packaged into a convenient module that you can use to test your own\n      Policies.  See Test::Perl::Critic::Policy and Perl::Critic::TestUtils\n      for details.\n\n    Policy Changes\n    * BuiltInFunctions::ProhibitLvalueSubstr no longer complains when there\n      is a low-precedence operator between the substr() and the assignment\n      operator.\n    * CodeLayout::ProhibitParensWithBuiltins now allows 'state (\$foo)'.  RT\n      #52029\n    * ErrorHandling::RequireCarping now has an\n      allow_in_main_if_not_in_subroutine option to allow \"die\" directly in\n      the default namespace.\n    * InputOutput::RequireBriefOpen now recognizes CORE::open(),\n      CORE::close(), CORE::GLOBAL::open(), and CORE::GLOBAL::close().  RT\n      #52391\n    * Modules::ProhibitEvilModules now complains by default about the modules\n      deprecated by the Perl 5 Porters in 5.12.\n    * Modules::RequireVersionVar documentation updated to make clear that \"my\n      \$VERSION\" does not work as a module version declaration.  RT #56667\n    * The RegularExpressions::* policies have been converted from using\n      Regexp::Parser to using PPIx::Regexp for their heavy lifting.\n    * RegularExpressions::ProhibitCaptureWithoutTest now allows capture\n      variables inside when() {}.  RT #36081.\n    * RegularExpressions::ProhibitUnusedCapture now checks for unused named\n      captures.\n    * Subroutines::ProhibitManyArgs revised to count only characters in the\n      prototype that represent arguments.  RT #56627\n    * Subroutines::ProhibitNestedSubs no longer complains about scheduled\n      blocks (BEGIN, etc.) inside subroutines and vice versa.\n    * Subroutines::RequireFinalReturn should now understand a final given/when\n      statement, and declare an error if there is no 'default' block or if any\n      branch does not return.\n    * TestingAndDebugging::RequireUseStrict now accepts 'use 5.011' or greater\n      as equivalent to 'use strict'.\n    * ValuesAndExpressions::ProhibitMismatchedOperators false positive with\n      \"'foo' x 15 . 'bar'\".  RT #54524\n    * Variables::ProhibitPunctuationVars gave false positives on qr// regexp's\n      ending in '\$'.  RT #55604\n\n    Bug Fixes:\n    * The \"## no critic\" annotations now respect #line directives.\n    * Annotations on statements spanning more than one line (e.g.\n            my \$foo =\n                '\$bar'; ## no critic (RequireInterpolationOfMetachars)\n      ) are now handled as single-line annotations, not block annotations.\n    * All instances of L<Foo> in the POD have been changed to L<Foo|Foo>.\n      L</bar> and L<Foo/bar> were allowed to stand.  RT #37485\n    * Spaces are now allowed immediately inside the enclosing parentheses in\n      \"## no critic ( Foo )\".  RT #52038\n    * With the introduction of PPIx::Regexp, Perl::Critic no longer dies\n      when it encounters a Perl 5.010 regexp.  RT #49442.\n    * DEVELOPER.pod typo in link to\n      ValuesAndExpressions::ProhibitConstantPragma policy. RT #57818\n    * Spelling errors in documentation.  RT #57375\n    * \"die\" used instead of \"croak\".  RT #56619\n    * Fixed regex test that caused test failures on every Perl 5.11\n      (credit Tom Wyant).\n    * t/20_policy_pod_spelling.t now works (or at least no longer fails)\n      in non-English locales (again).  RT #43291 and RT #48986.\n    * Perldoc hae broken link for McCabe score definition.  RT #53219\n    * RT #33935 and #49679 were fixed by upgrading to PPI 1.208\n\n    Other Changes:\n    * Perl::Critic::Utils::is_unchecked_call() updated to include chmod in the\n      set of things covered by autodie (this happened in autodie v2.08).  The\n      primary effect of this is on InputOutput::RequireCheckedSyscalls.\n    * Now depends upon Task::Weaken to ensure that we only install with perls\n      where Scalar::Util::weaken() works.\n    * Email::Address was optional, but is now required.  So everyone\n      gets the optimal behavior from RequireInterpolationOfMetachars.\n    * Some infrastructure has been extracted to the new PPIx-Utilities\n      distro.  It is also a required dependency here.  Over time a good\n      portion of Perl::Critic::Utils* will be migrated to this distribution.\n    * Perl::Critic::Utils::PPI::get_constant_name_element_from_declaring_statement()\n      is deprecated because it doesn't handle multiple constants being\n      declared within a single \"use constant\" statement.  Use\n      PPIx::Utilities::Statement::get_constant_name_elements_from_declaring_statement()\n      instead.\n    * Removed all uses of Perl::Critic::Utils::PPIRegep.  Since the\n      PPIx::Regexp update, Perl::Critic only used get_match_string() and\n      friends, which were superseded by the corresponding PPI methods.\n      Perl::Critic now depends on PPI-1.208 or newer.\n    * Moved Perl::Critic::Utils::PPIRegexp to the Perl-Critic-Deprecated.\n    * The PolicySummary.pod file is now generated when the distribution\n      is created, rather than when you install it.  This ensures the file\n      will be available on http://search.cpan.org.  Thanks to Bear Longyear\n      for bringing this to our attention.\n\n[1.107_001] Released on 2010-06-20\n\n    Changes summarized into 1.108 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.106] Released on 2010-05-10\n\n    Bug Fixes:\n    * NamingConventions::Capitalization fix for PPI 1.212.  RT #57348\n\n[1.105_03] Released on 2010-03-21\n[1.105_02] Released on 2010-01-23\n[1.105_01] Released on 2010-01-16\n\n    Changes summarized into 1.108 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.105] Released on 2009-09-07\n\n    Bug Fixes:\n    * Variables::ProhibitPunctuationVars would complain about \"%-\" appearing\n      anywhere in a string.  RT #49016\n\n    Policy Changes:\n    * InputOutput::RequireCheckedSyscalls now complains about unchecked \"say\"\n      by default.  RT #37487\n\n[1.104] Released on 2009-08-23\n\n    This release is dedicated to Tom Wyant in appreciation of the amount of\n    effort he put into the enhancements and bug fixes in this release, for\n    having the patience to wait for the amount of time that it took to get\n    them out, and for overall awesomeness.  Thank you, Tom.\n\n    New Policies:\n      Objects::ProhibitIndirectSyntax\n      ValuesAndExpressions::ProhibitComplexVersion\n      ValuesAndExpressions::RequireConstantVersion\n\n    New Optional Requirement:\n    * Email::Address, if you want\n      ValuesAndExpressions::ProhibitInterpolationOfLiterals to properly ignore\n      email addresses.\n\n    New Features:\n    * Perlcritic will list the names of files with violations if given the\n      --files-with-violations option, or the names of files without\n      violations if given the --files-without-violations options. These\n      have synonyms -l and -L respectively.\n    * Perlcritic has a new --list-enabled option, which lists the Policies\n      that will be enforced, given the current configuration.  This is\n      useful if you've written a complex command-line or modified your\n      .perlcriticrc file and you want to see which Policies *would*\n      be used with the current configuration, if you were actually going\n      to critque a file with it.\n    * Perl::Critic::Violation now takes #line directives into account in the\n      %F, %f, and %l formats.  You can get the old values via the new %G, %g,\n      and %L formats.\n\n    Policy Changes:\n    * CodeLayout::ProhibitParensWithBuiltins was complaining in certain cases\n      where parentheses are required due to operator precedence.  RT #46862.\n    * ControlStructures::ProhibitMutatingListFunctions no longer complains\n      about uses of tr/// that don't modify the operand.  Reported by EDAVIS,\n      RT #44515.\n    * Miscellanea::RequireRcsKeywords now accepts \"qw\$Keyword: ...\$\".  RT\n      #45196.\n    * Modules::RequireFilenameMatchesPackage now respects logical filenames\n      defined by the \"#line\" directives.  This allows the Policy to work\n      properly with IDEs and code generators.\n    * NamingConventions::Capitalization now allows fully qualified subroutine\n      declarations ( e.g. \"sub Foo::Bar::baz {...}\" ).  However, the\n      non-package part of the subroutine name must still conform to whatever\n      capitalization rule you have chosen.\n    * RegularExpressions::ProhibitCaptureWithoutTest no longer complains if\n      the regex is followed by an \"or die\" or similar.  Reported by EDAVIS,\n      RT #36081.\n    * RegularExpressions::ProhibitComplexRegexes no longer counts variable\n      substitutions in the length.   Reported by EDAVIS, RT #36098.\n    * RegularExpressions::ProhibitUnusedCapture now considers the body of\n      while loops and not just their condition.  Reported by EDAVIS, RT\n      #38942.\n    * ValuesAndExpressions::ProhibitVersionStrings was getting confused by\n      comments.  Reported by Kevin Ryde,  RT #44986.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now allows sigils\n      in the arguments to \"use vars\".  Contributed by Kevin Ryde, RT #47318.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now properly\n      ignores email addesses, if you have Email::Address installed.  Inspired\n      by the Kevin Ryde contribution in RT #47318.\n    * Variables::ProhibitPunctuationVars gained the ability to look inside\n      interpolated strings.  Doing this correctly is challenging and things\n      may not work out right; how the policy does this can be controlled via\n      the new \"string_mode\" option.  Contributed by Edgar Whipple\n      <perlmonk at misterwhipple dot com>.\n    * Variables::ProhibitPunctuationVars now ignores \$] by default since there\n      is no English.pm equivalent.\n\n    Other Bug Fixes:\n    * Perl::Critic::Utils::parse_arg_list() was slurping up the \"or die ...\"\n      portion of \"open my \$foo, 'somefile' or die ...\", causing\n      InputOutput::ProhibitTwoArgOpen to not complain about this example.\n      Reported by Alexandr Ciornii,  RT #44554.\n\n    Minor Changes\n    * The line count emitted by the --statistics option is further broken down\n      by line content.\n\n    Minor Documentation Fixes:\n    * ValuesAndExpressions::ProhibitInterpolationOfLiterals.  Reported by\n      Debian in http://bugs.debian.org/542814,  RT #48936\n\n    Build Fixes:\n    * There wasn't a specific version given for the List::MoreUtils dependency\n      and we're using features that weren't avialable until 0.19.  So, we now\n      require version 0.19.  Noticed by John J. Trammell,  RT #48917.\n    * Some tests were tied to the specific \"true\" and \"false\" values that some\n      functions were returning.  Reported by Michael Schwern,  RT #43910.\n\n    Other News:\n    * Komodo version 5.1.1 now has built-in support for Perl-Critic,\n      if you have the Perl::Critic and criticism modules installed.\n      Both should be available through the ActiveState Perl Package\n      Manager ppm(1).\n\n[1.103] Released on 2009-08-03\n\n    Fix configure_requires prerequisite on Module::Build 0.34_02.\n\n[1.102] Released on 2009-08-03\n\n    Bug fixes:\n    * Works with PPI 1.205.  Yay for 5.10 support!\n    * Variables::RequireLexicalLoopIterators didn't work correctly on foreach\n      loops with labels.\n\n[1.101_003] Released on 2009-07-22\n[1.101_002] Released on 2009-07-21\n[1.101_001] Released on 2009-07-21\n\n    Changes summarized into 1.102 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.100] Released on 2009-07-17\n\n    This is a POD fix release to deal with issues identified by Test::POD\n    1.40.  There is no functional difference between this release and 1.098.\n    This is the last release of Perl::Critic that will be compatible with PPI\n    1.203.  PPI's parsing of for(each)? loops is changing in its next release\n    in an incompatible manner and there will be a release in the near future\n    to make Perl::Critic compatible with that change.\n\n[1.099_002] Released on 2009-06-27\n[1.099_001] Released on 2009-06-25\n\n    Experimental releases.  For exact details, see Changes on BackPAN.\n\n[1.098] Released on 2009-03-07\n\n    Some Exciting News:\n    The Perl Development Kit (PDK 8.0) from ActiveState now includes a\n    very slick graphical interface to Perl-Critic.  I highly recommend\n    that you check it out.  Here's a link to screenshots and docs:\n\n    http://docs.activestate.com/pdk/8.0/PerlCritic_gui.html\n\n    New Features:\n    * Violation coloring is now configurable via command line or profile. The\n      profile entries are color-severity-highest, -high, -medium, -low, or\n      -lowest. Numbers are accepted in lieu of named severities (e.g.\n      'color-severity-5' for 'color-severity-highest'), and 'colour' is\n      accepted in lieu of 'color'.\n    * Handling of unrecognized policy configuration items is now controlled by\n      the profile_strictness. The default is to warn about them. The previous\n      default was that they were fatal.\n    * -p is now a synonym for --profile.\n    * The --verbose option for perlcritic now supports a %C format that will\n      displays the class of PPI::Element that caused the violation.\n\n    Policy Changes:\n    * ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions\n      didn't include \"pbp\" in its default themes even though it is derived\n      from the book.  Now it does.  :]\n    * ErrorHandling::RequireCarping now allows a here document as the last\n      element if the \"allow_messages_ending_with_newlines\" option is true.\n    * Fix Subroutines::ProhibitAmpersandSigils so it allows \"defined(&x)\" as\n      well as \"defined &x\".  Patch from Kevin Ryde, RT #38855.\n    * Subroutines::ProtectPrivateSubs now has an \"allow\" option to specify\n      subroutines which are exempt from this policy.  RT #38678.\n      Additionally, a \"private_name_regex\" option has been added that allows\n      you to specify what a private subrouting name looks like.\n    * Subroutines::RequireArgUnpacking now has an \"allow_subscripts\" option\n      to allow array slices and elements.  RT #34009.\n    * Subroutines::RequireArgUnpacking now has an \"allow_delegation_to\" option\n      to allow the usual delegation idiom. Delegation to 'SUPER::' and\n      'NEXT::' are allowed by default.  RT #33839.\n    * Subroutines::RequireArgUnpacking no longer generates a false positive\n      for '\$\$_[]', which is an obfuscated way of saying '\$_->[]'.  RT #37713.\n    * ValuesAndExpressions::ProhibitMagicNumbers now has an\n      allow_to_the_right_of_a_fat_comma option, which defaults to true.  Note\n      that it currently only works /directly/ to the right of a fat comma.\n    * Variables::ProhibitMatchVars had its default themes changed to \"core\n      performance pbp\", instead of \"core bugs pbp\" because, while the match\n      variables make regular expressions slow, it doesn't cause them to not\n      work correctly.\n    * Variables::ProhibitPackageVars has had FindBin and Log::Log4perl added\n      to the default exemptions.\n    * Variables::ProhibitReusedNames now has an \"allow\" option to specify\n      names that can be reused.  It defaults to enabling \$self and \$class.  RT\n      #42767.\n    * Variables::RequireLocalizedPunctuationVars has a customizable set of\n      exemptions via the \"allow\" option.\n\n    New Developer Features:\n    * The guts of perlcritic have been moved to Perl::Critic::Command.  You\n      can invoke Perl::Critic::Command::run() to get the equivalent of running\n      the command.  (Note, however, this interface WILL change, so don't count\n      on the current one.)\n    * Modules have had a \"INTERFACE SUPPORT\" section added which states\n      whether the Perl::Critic developers consider the particular module is\n      public or not.  Any removal of functionality from a public module will\n      go through a deprecation cycle.  Non-public modules may have their\n      interfaces changed without notice.\n    * P::C::Policy now has an is_enabled() method.\n    * P::C::Violation now has an element_class() method.\n\n    Bug Fixes:\n    * CodeLayout::ProhibitTrailingWhitespace didn't notice cases where PPI\n      would produce instances of PPI::Token::Whitespace that contained\n      multiple lines.\n    * Subroutines::ProtectPrivateSubs no longer regards the exportable POSIX\n      subroutines whose names begin with underscore as private.  RT #38678.\n    * Subroutines::RequireArgUnpacking mishandled a complicated sitation with\n      \$_ being an array reference.  RT #39601.\n    * Variables::RequireLocalizedPunctuationVars now applies to subscripted\n      names.  RT #29384.\n\n    Internals:\n    * The guts of Build.PL and Makefile.PL have been rearranged.\n\n[1.097_002] Released on 2009-03-01\n[1.097_001] Released on 2009-03-01\n\n    Changes summarized into 1.098 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.096] Released on 2009-02-01\n\n    New Policies:\n    * ValuesAndExpressions::ProhibitSpecialLiteralHeredocTerminator\n\n    Policy Changes:\n    * Documentation::PodSpelling now has a stop_words_file option.\n    * Modules::ProhibitEvilModules now has a modules_file option.\n\n    Bug Fixes:\n    * ErrorHandling::RequireCarping will now allow a literal newline\n      as well as \"\\n\".  Fixed by Kyle Hasselbacher, RT #25046\n    * Fix InputOutput::ProhibitTwoArgOpen so it allows '-|' or '|-' as the\n      second of two arguments.  Patches from Kyle Hasselbacher and Leland\n      Johnson, RT #42384.\n    * InputOutput::RequireBracedFileHandleWithPrint applies to printf as well\n      as print.  Fixed by Kyle Hasselbacher, RT #42537.\n    * TestingAndDebugging::RequireUseStrict and\n      TestingAndDebugging::RequireUseWarnings are no longer fooled by a\n      block-scoped pragma.  RT #42310.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars allows for escaped\n      backslashes.  Fixed by Tom Wyant, RT #38530.\n    * Fix for problem in P::C::Document in dealing with underscores in\n      expressions like \"use 5.009_001\".  Patch by Kevin Ryde, RT #36570 and\n      #42089.\n    * Fix in extras/perlcritic.el for a radio button.  Patch by Kevin Ryde, RT\n      #42190.\n    * Fix distclean target in Makefile.PL.  Patch by Richard Soderberg,\n      RT #42088.\n    * Fix temporary files not being cleaned up after tests.  Patch by Kyle\n      Hasselbacher, RT #41443.\n    * Deal with changes in Pod::Parser v1.36 in test in t/05_utils_pod.t.\n\n    Documentation improvements contributed by Mark Grimes in response to RT\n    #41942.\n\n[1.095_001] Released on 2009-01-18\n\n    Changes summarized into 1.096 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.094001] Released on 2009-01-01\n\n    Bug Fixes:\n    * Tests would fail on systems without Regexp::Parser installed.\n\n[1.094] Released on 2009-01-01\n\n    Incompatible Changes:\n    * The way that \"## no critic\" markers was refactored.  As\n      a result, we discovered that the syntax for the markers was pretty\n      vague.  If you didn't do it just right, it would disable all policies,\n      and not just the specific ones that you wanted.  So we've tightened this\n      up a bit.  If you followed the examples that have been in the docs for\n      the last couple years, then you should be fine.  But if you've been\n      using certain other variations in your \"## no critic\" markers, then you\n      might suddenly find yourself violating the new\n      ProhibtUnrestrictedNoCritic policy.  To fix this, just make sure your\n      Policy names appear in parentheses:\n\n        ## no critic Foo, Bar, Baz     # wrong!\n        ## no critic Foo Bar Baz       # wrong!\n\n\n        ## no critic (Foo, Bar, Baz)   # ok!\n        ## no critic qw(Foo Bar Baz)   # also ok!\n\n    * The deprecated \$FORMAT variables for Perl::Critic::Policy and\n      Perl::Critic::Violation no longer exist.  Use the corresponding\n      get_format() and set_format() functions instead.\n\n    New Policies:\n    * Miscellanea::ProhibitUnrestrictedNoCritic\n    * Miscellanea::ProhibitUselessNoCritic\n    * NamingConventions::Capitalization\n    * Subroutines::ProhibitReturnSort\n    * Variables::ProhibitReusedNames\n\n    Removed Policies:\n    * NamingConventions::ProhibitMixedCaseSubs and\n      NamingConventions::ProhibitMixedCaseVars have been moved to a separate\n      Perl-Critic-Deprecated distribution.  The\n      NamingConventions::Capitalization policy does everything they do, plus\n      more.\n\n    Policy Changes:\n    * BuiltinFunctions::ProhibitStringyEval now has an allow_includes option\n      that makes it behave (mostly) like Ricardo SIGNES'\n      Perl::Critic::Policy::Lax::ProhibitStringyEval::ExceptForRequire.\n    * InputOutput::RequireCheckedClose, InputOutput::RequireCheckedOpen, and\n      InputOutput::RequireCheckedSyscalls now all support autodie.\n      Unfortunately, autodie is currently treated like a module and not a\n      pragma, which means that the lexical scoping is not taken into account.\n    * InputOutput::RequireCheckedSyscalls now has an exclude_functions\n      parameter.\n    * Modules::ProhibitEvilModules now allows you to specify what the\n      description of a use of a bad module should be, to, say, suggest that\n      people use autodie instead of Fatal.\n    * Subroutine::ProhibitExcessComplexity violation descriptions now include\n      the name of the subroutine, thanks to Andreas Koenig, RT #40070.\n    * TestingAndDebugging::RequireUseStrict and\n      TestingAndDebugging::RequireUseWarnings now have equivalent_modules\n      parameters that allow you to designate other modules as being equivalent\n      to the strict and warnings pragmata.  This one is for all you Moose fans\n      out there.  :]\n\n    Bug Fixes:\n    * ControlStructures::ProhibitUnreachableCode would treat package\n      statements as unreachable.  Fixed by Kevin Ryde.  RT #41734\n    * Fix warning from InputOutput::ProhibitOneArgSelect when select was\n      called with no arguments.  RT #41926\n    * Miscellanea::RequireRcsKeywords couldn't find keywords after __END__\n      that didn't look like part of POD.\n    * Modules::RequireFilenameMatchesPackage would incorrectly complain about\n      programs.  Yet more greatness contributed by Schwern.  RT #39024.\n    * If a perlcriticrc file referred to a policy that wasn't installed and\n      the profile-strictness option was set to \"fatal\",\n      Perl::Critic::PolicyFactory fell over instead of reporting the\n      problematic policy name.\n\n    Miscellanea:\n    * Perl::Critic::Violation will automatically strip trailing periods\n      from your Policy description and explanation strings.  This ensures that\n      the punctuation is consistent with the format specified by the user via\n      the -verbose formatting options.\n\n    New Developer Features:\n    * Perl::Critic::Policy::prepare_to_scan_document() is now checked and a\n      Policy can disable itself for just a single document, which can speed\n      things up.\n\n[1.093_03] Released on 2008-12-11\n[1.093_02] Released on 2008-10-30\n[1.093_01] Released on 2008-09-07\n\n    Changes summarized into 1.094 above.  For exact details, see Changes in\n    1.093_003 on BackPAN.\n\n[1.092] Released on 2008-09-02\n\n    Bug Fixes:\n    * Fixed POD errors that were causing build failures.  Sorry\n      about that.\n\n[1.091] Released on 2008-09-01\n\n    New Policies:\n    * RegularExpressions::RequireDotMatchAnything\n\n    New Features:\n    * perlcritic now supports a -pager option, so you can more easily\n      send the output to your favorite pager.  You can set this option\n      on the command-line or in your .perlcriticrc file.  See the\n      perlcritic perldoc for more details.  Credit to Michael Schwern.\n    * The output from \"perlcritic -doc PATTERN\" will be automatically\n      sent to your pager if you have set the -pager option.\n\n    Policy Changes:\n    * CodeLayout::ProhibitQuotedWordLists no longer applies if the list\n      contains any non-words, by default.  A non-word is anything that does\n      not match /[\\w-]+/.  You can restore the former behavior by setting the\n      \"strict\" option.  RT #37886.\n    * CodeLayout::ProhibitQuotedWordLists also now applies to the import\n      arguments of a C<use> statement.  RT #24467.\n    * ErrorHandling::RequireCheckingReturnValueOfEval now recognizes ternary\n      left-sides as valid checks.\n    * RegularExpressions::RequireExtendedFormatting gains a\n      minimum_regex_length_to_complain_about option.  Also, regexes that\n      contain only word and whitespace characters are now exempt from this\n      policy, by default; you can make it complain about them by turning on\n      the new strict option.  Contributed by Michael Schwern.  RT #38531.\n    * TestingAndDebugging::ProhibitNoWarnings now supports a\n      allow_with_category_restriction option, thanks to Michael Schwern.\n      RT #38514.\n    * CodeLayout::ProhibitHardTabs now allows leading tabs in qw() word lists\n      and regexes with the /x modifier.  You can still configure this\n      policy to forbid all hard tabs, if you like.  RT #32440\n\n    Bug Fixes:\n    * perlcritic should now work under PAR.  RT #38380.\n    * URL for our repository in META.yml now works for anonymous\n      checkout.  The password is \"\" (empty).  RT #38628.\n    * color for high-severity violations is now magenta because\n      it is more redable than yellow on white backgrounds.  RT #38511.\n\n[1.090] Released on 2008-07-22\n\n    Bug Fixes:\n    * Test was incorrectly failing when Regexp::Parser wasn't installed.\n\n[1.089] Released on 2008-07-21\n\n    Minor Enhancements:\n    * -s is now a synonym for --single-policy.\n\n    Policy Changes:\n    * Subroutines::ProhibitBuiltinHomonyms now also prohibits subroutines\n      with the same name as a Perl keyword (e.g. if, foreach, while).\n      Inspired by RT #37632.\n    * Subroutines::ProtectPrivateSubs now allows expressions like\n      \"shift->_some_private_method();\".  Note that this *only* applies\n      to the \"shift\" function -- a private method call on the right of any\n      other bareword still causes a violation.  RT #34713.\n    * Subroutines::RequireFinalReturn now includes exec in the set of things\n      that mark a successful return.  RT #37672\n    * ValuesAndExpressions::ProhibitInterpolationOfLiterals now takes a\n      allow_if_string_contains_single_quote option.  Contributed by Ed\n      Avis <ed\@membled.com>.  RT #36125.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now supports a\n      rcs_keywords option to allow for the common case where those require\n      dollar signs.\n\n    Bug Fixes:\n    * BuiltinFunctions::ProhibitSleepViaSelect would complain if there were\n      three undefs as arguments to select(), but one of them was the timeout.\n      RT #37416.\n    * Reduced false positives in\n      RegularExpressions::ProhibitSingleCharAlternation.  Thanks to\n      Andy Lester and Elliot Shank test cases.\n    * RegularExpressions::ProhibitUnusedCapture would complain if there were\n      multiple captures used in a substitution, e.g. s/(.)(.)/\$2\$1/.\n    * Subroutines::ProhibitAmpersandSigils no longer complains about\n      \"sort &foo(...)\".\n    * Makefile.PL, Build.PL and other \".PL\" scripts which typically do not\n      have a shebang are no longer mistaken as modules.  This prevents\n      spurious warnings from Modules::RequireEndWithOne.  RT #20481.\n\n    Internals:\n    * Tests are now self compliant.\n\n[1.088] Released on 2008-07-04\n\n    New Policies\n    * ErrorHandling::RequireCheckingReturnValueOfEval\n\n    Policy Changes:\n    * ValuesAndExpressions::ProhibitLeadingZeros now accepts octal numbers\n      for the Unix permissions argument to chmod, dbmopen, mkdir, sysopen, or\n      umask, by default.  Use the \"strict\" option to get the old behavior.\n      RT #31977.\n    * Due to the consensus at YAPC::NA 2008,\n      Variables::ProhibitUnusedVariables default severity has been raised to\n      medium/3.\n\n    Minor Changes:\n    * The perlcritic \"--Version\" option is now \"--version\" in order to act\n      like the rest of the world.\n\n[1.087] Released on 2008-06-21\n\n    Policy Changes:\n    * CodeLayout::ProhibitParensWithBuiltins no longer complains about\n      sort(foo(\@x)).\n    * TestingAndDebugging::RequireUseWarnings will not complain about files\n      that contain a \"use 5.005\" statement or similar for perls prior to 5.6.\n      Lesson of the day: computer conferences where you can meet in the real\n      world can clarify conversations greatly.  Good to finally meet you Adam.\n    * InputOutput::ProhibitTwoArgOpen similarly will not complain if there's\n      a \"use/require 5.005\" statement in the file.  RT #34385.\n\n    Bug fixes:\n    * Perl::Critic can now critique a file named \"0\".  However, PPI will give\n      a parse error until the next version comes out.  Fixes RT #36127.\n    * Moved detection of the lack of any enabled Policies from P::C::Config\n      to Perl::Critic.  This was causing the perlcritic.t in Parrot to fail.\n      Note, however, there are plans afoot to change how Perl::Critic is\n      configured and things that depend upon that may break.  Please contact\n      users\@perlcritic.tigris.org and tell us how you're using P::C::Config\n      directly so that we can take your needs into account.\n\n[1.086] Released on 2008-06-12\n\n    Policy Changes:\n    * NamingConventions::ProhibitAmbiguousNames now specifies the name that\n      it had problems with in its violation descriptions.\n\n    Bug fixes:\n    * The color option wasn't being correctly set from a .perlcriticrc.\n      RT #36569.\n\n    Minor changes:\n    * --colour is now a synonym for --color.\n\n[1.085] Released on 2008-06-07\n\n    New Policies:\n    * Documentation::RequirePackageMatchesPodName\n\n    Policy Changes:\n    * Variables::ProhibitUnusedVariables detects a few more cases.  It's\n      still very limited, though.\n\n    Bug fixes:\n    * ControlStructures::ProhibitUnreachableCode didn't notice \"until\" was an\n      conditional expression.\n\n    Minor documentation updates.\n\n[1.084] Released on 2008-05-24\n\n    New Features:\n    * perlcritic now supports a --list-themes option.\n    * You can specify the maximum number of violations you want per Policy\n      per document.  Developers can give a default value for this for a\n      Policy by overriding default_maximum_violations_per_document().\n      See RequireUseStrict and ProhibitMagicNumbers for examples.\n\n    Policy Moved:\n    * The ValuesAndExpressions::ProhibitMagicNumbers policy has been moved\n      from Perl::Critic::More into the primary Perl::Critic distribution.\n\n    New Policies:\n    * Variables::ProhibitUnusedVariables (very dumb, limited initial\n      implementation.)\n    * ControlStructures::ProhibitLabelsWithSpecialBlockNames\n      Contributed by Mike O'Regan.  Kickin' ass, Mike.\n\n    Policy Changes:\n    * ControlStructures::ProhibitUnreachableCode now handles the perl 5.10\n      \"//\" and \"err\" operators.  RT #36080\n    * InputOutput::RequireBriefOpen now ignores opens of STDIN, STDOUT,\n      and STDERR.  You're generally trying to make long-lasting global\n      effects when manipulating these.  (RT #35774)\n    * RegularExpressions::ProhibitUnusualDelimiters now supports an\n      \"allow_all_brackets\" option.\n    * RegularExpressions::RequireBracesForMultiline now supports an\n      \"allow_all_brackets\" option.\n    * TestingAndDebugging::RequireUseStrict now accepts \"use Moose::Role\"\n      as equivalent to \"use strict\".  (RT #34838)\n    * TestingAndDebugging::RequireUseWarnings now accepts \"use Moose::Role\"\n      as equivalent to \"use warnings\".  (RT #34838)\n    * ValuesAndExpressions::ProhibitMagicNumbers now accepts constant\n      subroutines.\n    * Variables::ProhibitMatchVars no longer detects \"use English;\".\n      This problem is detected in a more clear way by\n      Modules::RequireNoMatchVarsWithUseEnglish.\n    * Variables::ProhibitPerl4PackageNames no longer complains about\n      \$'/\$POSTMATCH.  RT #36059\n    * Variables::RequireLocalizedPunctuationVars now allows the use of \"my\".\n      RT #33937\n\n    Bug Fixes:\n    * No longer falls over if a single file has a parse error.\n\n    New Developer Features:\n    * If a document specifies a minimum perl version, e.g. \"use 5.008003\",\n      P::C::Document::highest_explicit_perl_version() will tell you what it\n      is.\n    * The parameter to P::C::Policy::initialize_if_enabled is now a\n      P::C::PolicyConfig object instead of a hash reference.\n\n    Minor Changes:\n    * LOTS of documentation updates.\n    * A few more statistics are emitted by perlcritic with the --statistics\n      option.\n    * perlcritic --profile-proto now includes policy abstracts in its\n      output.\n\n    Prerequisites:\n    * Now depends upon PPI 1.203.\n    * New dependency upon version.\n\n[1.083_006] Released on 2008-05-20\n[1.083_005] Released on 2008-05-19\n[1.083_004] Released on 2008-05-18\n[1.083_003] Released on 2008-05-17\n[1.083_002] Released on 2008-05-17\n[1.083_001] Released on 2008-04-13\n\n    Changes summarized into 1.084 above.  For exact details, see Changes in\n    1.083_006 on BackPAN.\n\n[1.082] Released on 2008-03-08\n\n    New Features:\n    * A new metadata system for defining policy parameters/options has been\n      added.  This makes the life of policy authors easier because\n      configuration validation and parsing can be taken care of\n      automatically, in most cases.  This allows greater integration with\n      IDEs and allows the perlcritic \"--profile-proto\" option to produce\n      better output.\n\n      Note: This change does NOT REQUIRE ANY CHANGES to policies outside of\n      this distribution; they should continue to work as is.  However, use\n      of this facility can reduce the size of your code and provide the\n      means for tools to discover more about your policy.  If this change\n      does break any of your policies, please let us know.\n\n      To learn how to take advantage of this facility, read\n      Perl::Critic::DEVELOPER and look at the source of any of the\n      configurable policies included in this distribution.\n\n      There is a discussion of the design considerations for this facility in\n      the source repository under doc/PolicyParameter_Notes.pod.\n\n    * Added support for \"criticism-fatal\" option in your perlcriticrc\n      file.  This will be used by the criticism pragma to cause execution\n      to abort if the file contains any violations.\n\n    New Policy:\n    * Module::RequireNoMatchVarsWithUseEnglish\n\n    Policy Changes:\n    * Added an allow_last_statement_to_be_comma_separated_in_map_and_grep\n      option to ValuesAndExpressions::ProhibitCommaSeparatedStatements.\n      Partial response to http://rt.cpan.org/Public/Bug/Display.html?id=27654.\n    * ControlStructures::ProhibitPostfixControls gains the ability to have\n      the flow control statements allowed to be modified.  This in response\n      to RT #29540.\n    * TestingAndDebugging::RequireUseStrict now accepts \"use Moose\" as\n      equivalent to \"use strict\".\n    * TestingAndDebugging::RequireUseWarnings now accepts \"use Moose\" as\n      equivalent to \"use warnings\".\n\n    Bug Fixes:\n    * RT #31281 perlcritic doesn't recognize \"#!/bin/env perl\" shebang\n    * Replace usage of Unicode property escapes with POSIX character classes\n      order to restore 5.6 compatability.\n    * RT #30388 ValuesAndExpressions::ProhibitVersionStrings complained\n      about numbered directories in \"use lib\".\n    * Fixed handling of badly behaved spelling programs in PodSpelling.\n\n[1.081_006] Released on 2008-03-02\n[1.081_005] Released on 2007-12-29\n[1.081_004] Released on 2007-12-20\n[1.081_003] Released on 2007-12-16\n[1.081_002] Released on 2007-12-16\n[1.081_001] Released on 2007-12-15\n\n    Changes summarized into 1.082 above.  For exact details, see Changes in\n    1.081_006 on BackPAN.\n\n[1.080] Released on 2007-11-11\n\n    New Features:\n    * Allow a \"## no critic\" statement after a shebang on line 1 of a\n      file.  This allows users to block violations that apply to\n      whole files and still allow shebangs.\n\n    New Policies: (funded by a Perl Foundation grant)\n    * InputOutput::ProhibitExplicitStdin\n    * RegularExpressions::ProhibitFixedStringMatches\n    * RegularExpressions::RequireBracesForMultiline\n    * RegularExpressions::ProhibitUnusualDelimiters\n    * RegularExpressions::ProhibitUnusedCapture\n    * RegularExpressions::ProhibitComplexRegexes\n    * RegularExpressions::ProhibitSingleCharAlternation\n    * RegularExpressions::ProhibitEscapedMetacharacters\n    * RegularExpressions::ProhibitEnumeratedClasses\n    * InputOutput::RequireBriefOpen\n    * InputOutput::RequireCheckedSyscalls\n\n    Other New Policies\n    * ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions\n\n    Policy Changes:\n    * Variables::ProhibitConditionalDeclarations now permits you to local-ize\n      variables in conditional declarations.  This makes sense, since\n      C<local> is actually a variable modifier, rather than a declaration.\n      Thanks to David Golden for reporting this.\n\n    New Developer Features:\n    * Perl::Critic::Utils::PPIRegexp encapsulates interaction with\n      the PPI Regexp token classes.  Those classes have very sparse\n      APIs, so this package hides away the ugly fiddling with PPI\n      internals.\n    * Added a new optional_modules parameter for the .run syntax.\n\n    Bug fixes:\n    * PPI::Structure::List can now contain multiple children,\n      so P::C::Utils::parse_arg_list() needs to handle it.\n\n      This was done in the process of fixing\n      http://rt.cpan.org/Ticket/Display.html?id=24924, which was a problem\n      with TestingAndDebugging::RequireTestLabels.\n\n    * ValuesAndExpressions::ProhibitLongChainsOfMethodCalls wasn't resetting\n      chain length when it ran into the end of a sub-expression.\n\n      http://rt.cpan.org/Public/Bug/Display.html?id=30040\n\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements was reporting\n      false positives when builtins which accept both no and multiple\n      arguments were involved.\n\n      http://rt.cpan.org/Public/Bug/Display.html?id=27654\n\n    Internals:\n    * Removed all use of Carp in favor of exceptions.\n\n    Prerequisites:\n    * Now requires PPI 1.201.  A number of workarounds for PPI bugs have been\n      removed.\n    * New dependency upon Exception::Class.\n\n    Installation:\n    * Use Devel::CheckOS to see whether Perl::Critic is being installed on\n      a Solaris system and warn about tar(1) chopping file names off if it\n      is.\n\n[1.079_003]  Released on 2007-10-22\n[1.079_002]  Released on 2007-10-21\n[1.079_001]  Released on 2007-10-09\n\n    Changes summarized into 1.080 above.  For exact details, see Changes in\n    1.079_003 on BackPAN.\n\n[1.078]  Released on 2007-09-19\n\n    Restore Perl::Critic::TestUtils::should_skip_author_tests() and\n    get_author_test_skip_message().  Some Perl::Critic add-on distributions\n    are using them.\n\n[1.077]  Released on 2007-09-15\n\n    Note: if you don't have any problems installing Perl::Critic 1.076, there\n    is no need to upgrade to this version.  There are no functionality\n    changes.  This release only contains changes related to installation that\n    a few people were experiencing.\n\n    Minor changes:\n    * Removed build-time use of Readonly, again, due to problems some people\n      were having when trying to compile the code by hand, rather than using\n      CPAN(PLUS)?.\n    * Don't run author tests if there's a .svn directory present because\n      users who grabbed the code from the source repository were executing\n      them and getting failures.\n    * Don't generate optional, module-hiding test wrappers if author tests\n      are not enabled.\n\n\n[1.076]  Released on 2007-09-07\n\n    It appears from reports on the 1.075_001 release that the subroutine\n    sigils were indeed the problem.  Release to the general populace.\n\n\n[1.075_001]  Released on 2007-09-06\n\n    Bug Fixes:\n    Undo the changes in 1.073 and 1.074.  Instead, stop using the subroutine\n    sigil in import and export lists.  It is suspected that the problem lies\n    with Exporter stripping off ampersands.\n\n[1.074]  Released on 2007-09-04\n\n    Bug Fixes:\n    Repeat the Makefile.PL change on\n    t/generate_without_optional_dependencies_wrappers.PL.\n    I love CPAN Testers.\n\n[1.073]  Released on 2007-09-04\n\n    Bug Fixes:\n    Work around problems with the combination of Exporter & Readonly in\n    Makefile.PL on some machines.\n\n[1.072]  Released on 2007-09-03\n\n    Bug Fixes:\n    * The Makefile generated by Makefile.PL was not syntactically correct\n      according to some versions of Solaris.  Thanks to Diab Jerius\n      (DJERIUS) for discovery and testing.\n    * Fixed mis-definition of \"quiet\" value for the \"--profile-strictness\"\n      option.\n    * Enhanced testing with the absence of optional modules.\n\n[1.071]  Released on 2007-08-24\n\n    The \"Brown Paper Bag\" Release\n\n    Bug Fixes:\n    * Tests would not pass in environments that did not have all optional\n      dependencies installed.\n\n[1.07]  Released on 2007-08-21\n\n    New Policies: (funded by a Perl Foundation grant)\n    * BuiltinFunctions::ProhibitBooleanGrep\n    * BuiltinFunctions::ProhibitComplexMappings\n    * Documentation::PodSpelling\n    * InputOutput::ProhibitJoinedReadline\n    * Subroutines::ProhibitManyArgs\n    * Subroutines::RequireArgUnpacking\n    * ValuesAndExpressions::ProhibitImplicitNewlines\n    * Variables::RequireLocalizedPunctuationVars\n\n    Other New Policies\n    * Subroutines::ProhibitNestedSubs\n\n    New Features:\n    * The \"perlcritic --profile-proto\" output now includes the \"add_themes\"\n      parameter for each policy.\n    * The perlcritic \"--strict-profile\" option has been replaced with a\n      \"--profile-strictness\" option.  This new option takes values of \"warn\"\n      (the default), \"fatal\", and \"quiet\", which controls what happens with\n      ignorable problems in a .perlcriticrc file.\n\n    New Developer Features:\n    * Perl::Critic::Policy now has an overridable initialize_if_enabled()\n      method which allows a Policy to perform expensive initialization after\n      it has been determined whether the user has it enabled or not.  Also,\n      this method allows a Policy to say that it should be disabled\n      regardless of what the user says.\n\n      Actually, use of this method is now encouraged over using a\n      constructor.\n\n    Other Stuff:\n    * Now requires the Readonly module in order to be more self-compliant.\n\n[1.061]  Released on 2007-07-24\n\n    Bug Fixes:\n    * Fix P::C::Theme-- Exporter in Perl 5.6 does not export import(), so you\n      must subclass it.  *sigh*\n    * Fix P::C::Config::_validate_and_save_theme()-- eval of an empty string\n      does not reset \$\@/\$EVAL_ERROR in Perl 5.6.\n\n    Big thanks to Anirvan Chatterjee for identifying and helping debug these\n    issues.\n\n[1.06]  Released on 2007-06-27\n\n    New Features:\n    * perlcritic now emits errors for all the problems it can find for the\n      global options in the command-line parameters and .perlcriticrc file,\n      rather than bailing on the first one it encounters.\n\n    * perlcritic now has a \"--strict-profile\" option which will make warnings\n      about problems in a profile fatal.\n\n    * perlcritic now has a \"--statistics-only\" option which suppresses the\n      display of individual violations and only shows the additional output\n      produced by the \"--statistics\" option.\n\n    Feature requests:\n    * A value for \"color\" can now be specified in a .perlcriticrc.\n      http://rt.cpan.org/Ticket/Display.html?id=24877\n\n    New Policies:\n    * ValuesAndExpressions::ProhibitQuotesAsQuotelikeOperatorDelimiters\n      As suggested in http://rt.cpan.org/Ticket/Display.html?id=23290.\n    * ValuesAndExpressions::ProhibitLongChainsOfMethodCalls\n    * Modules::ProhibitExcessMainComplexity\n      As suggested in http://rt.cpan.org/Ticket/Display.html?id=24699\n\n    Minor changes:\n    * The perlcritic \"--profile-proto\" option now emits the short names for\n      policies, rather than the full ones.\n\n    * The \"-profileproto\" and \"-singlepolicy\" options have been renamed to\n      \"-profile-proto\" and \"-single-policy\" in order to make the growing\n      number of command-line options comprehensible.  The change of\n      \"singlepolicy\" also affects your F<.perlcriticrc> file.\n\n[1.053]  Released on 2007-06-02\n\n    *DEVELOPMENT RELEASE*\n\n    Bug Fixes:\n    Fixed bug in 15_statustics.t test script, which caused the build\n    to fail on machines that don't have Perl::Tidy installed.\n\n[1.052]  Released on 2007-06-01\n\n    *DEVELOPMENT RELEASE*\n\n    New Features:\n    * perlcritic now emits a summary about the scanned code when enabled by\n      the \"-statistics\" option.\n\n    Policy Enhancements:\n    * InputOutput::ProhibitBacktickOperators can now be configured to only\n      check in void contexts.\n\n    Bug Fixes:\n    * 27073: False positive in RequireUpperCaseHeredocTerminator\n    * 27065: CodeLayout::ProhibitTrailingWhitespace breaks under Perl 5.6.1\n    * 26462: ControlStructures::ProhibitCascadingIfElse pod typo\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements was complaining\n      about multiple values in the list to be iterated over by a foreach loop.\n    * Corrected PBP page numbers for some policies (Quinn Weaver).\n\n[1.051]  Released on 2007-04-12\n\n    *DEVELOPMENT RELEASE*\n\n    No new policies.\n    No particular bug fixes.\n\n    Internals:\n    * Added several new utility functions to support the StricterSubs distro.\n      Also, some of the existing functions in Perl-Critic-Utils have\n      changed in ways that might break your custom policies.\n\n    Miscellanea:\n    * Updated Emacs plugin (Courtesy Josh ben Jore).\n      See extras/perlcritic.el for details.\n    * Added copy of BBEdit plugin (Courtesy of Josh Clark).\n      See extras/perl_critic_for_bbedit-1_0.zip for details\n\n[1.05]  Released on 2007-03-19\n\n    Bug Fixes:\n    * 25557: t/20_policy_prohibittrailingwhitespace.t fails on Perl 5.8.0\n\n[1.04]  Released on 2007-03-18\n\n    Bug Fixes:\n    * 25008: Subroutines::RequireFinalReturn should allow \"throw\"\n    * 25085: False Positive - Heredoc terminator must be quoted\n    * 18423: VERSION check does not notice Readonly::Scalar version\n    * 25449: Proposal of \$VERSION declaration (DUPLICATE)\n\n    New Policies:\n    * CodeLayout::ProhibitTrailingWhitespace\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements\n    * Variables::ProhibitPerl4PackageNames\n\n    Policy Enhancements:\n    * Subroutines::RequireFinalReturn can now be configured to recognize\n      your custom functions that behave like \"die\" or \"exit\".\n    * Documentation::RequirePodSections can be configured to match\n      Module::Starter:PBP or to really match the PBP book.\n\n[1.03]  Released on 2007-02-13\n\n    Bug Fixes:\n    * Fixed a few more problems with the %f, %F, and %r format escapes.\n    * I forgot to put Conway's perlcriticrc file in the MANIFEST. Sorry.\n\n    Interface Changes:\n    * Perl::Critic::Utils automatically exports everything.  However,\n      this is deprecated.  In the future, you must request your exports.\n\n    Policy Changes:\n    * Duplicate violations of RequireExcplicitPackage are now squelched,\n      in the same way as RequireUseStrict and RequireUseWarnings.\n\n[1.02]  Released on 2007-02-11\n\n    Bug Fixes:\n    * \"undef\" incorrectly triggered ProhibitMutatingListFunctions.\n    * 24876: %f and %F escapes not working in custom \"verbose\" format strings.\n    * 24875: Documentation bug in TestingAndDebugging::ProhibitNoStrict\n\n    New Policies:\n    * InputOutput::RequireCheckedOpen\n    * InputOutput::RequireCheckedClose\n\n    Other Cool Stuff:\n    * Added Conway's own suggested Perl::Critic configuration as\n      examples/perlcriticrc-conway.\n\n    * See the examples/ directory for some neat demonstrations of using\n      the Perl::Critic API. Contributed by Elliot Shank.\n\n    Interface Changes:\n    * Perl::Critic::Utils no longer exports anything by default.  Policies\n      outside the distribution will need to specify what exactly they need\n      from this module.  There are a number of tags that can be used in\n      addition to individual imports.\n\n[1.01]  Released on 2007-01-24\n\n    PRODUCTION RELEASE:  You may now consider the public Perl::Critic\n    API as \"stable.\"  Future minor releases will focus on bug fixes,\n    new policies, and internal refactoring.\n\n    Bug Fixes:\n    * Fixed memory leak.  This was reported by the Parrot team at\n      http://rt.perl.org/rt3/Ticket/Display.html?id=41230\n\n[0.23]  Released on 2007-01-19\n\n    Bug Fixes:\n    * 23994: Test 56 in t/05_utils.t of Perl::Critic v0.22 fails\n    * 24005: test 95 in t/13_bundled_policies fails in 0.22\n\n\n    Groovy New Features:\n    * Added '%F' to the Violation format specifications.  This will\n      give you just the name of file where the violation occurred\n      (i.e. without the path).\n\n    * Improved validation of .perlcriticrc file.  An invalid\n      default setting will now cause a fatal exception. A\n      strange-looking policy name will cause a warning.\n\n\n    Interface Changes:\n    * The syntax for theme expressions has changed.  Instead of using\n      mathematical operators qw(+ * -) you must now use the logical\n      operators qw(|| && !).  See the Perl::Critic docs for more info.\n\n    * The \@GLOBALS and \@BUILTINS variables are no longer exported by\n      Perl::Critic::Utils.  Use the is_perl_global() and is_perl_builtin()\n      functions instead.\n\n    * Perl::Critic::Policy::policy_parameters() has bee renamed to\n      Perl::Critic::Policy::supported_paramters().  This was an\n      undocumented feature anyway, so it shouldn't affect anyone.\n\n\n    Other Internal Changes:\n    * Perl::Critic now requires B::Keywords v1.05 or newer.\n\n    * A few internal classes have been refactored.  As a result,\n      Set::Scalar is no longer a required dependency.\n\n\n[0.22]  Released on 2006-12-15\n\n    New Features:\n    * Introduced named severity levels: gentle, stern, harsh, cruel, brutal\n      You can use these named levels instead of the numeric ones.\n      For example: \"perlcritic --severity=cruel MyModule.pm\"\n      Or just:     \"perlcritic --cruel MyModule.pm\"\n\n    * For perlcritic, the \"-List\" option has been renamed to\n      \"-profileproto\".  The output now includes the names of the\n      parameters that each Policy supports, if any.\n\n    * Improved validation of Policy parameters in your F<.perlcriticrc>\n      Any invalid parameter now causes a fatal exception.\n\n    Major Changes:\n    * Reassigned themes for most policies.  Now there are fewer\n      themes and they are organized around programming concepts\n      instead of severity levels.  If you have assigned your own\n      themes to any Policies, they should still work as expected.\n\n    Policy Changes:\n    * ErrorHandling::RequireCarping will not complain if it can figure\n      out that the die or warn message will always end in a newline\n      (\"\\n\").  The idea is that, if you put the newline there, you\n      don't indend for there to be any file/line/stack information\n      emitted, in which case you really don't want carp/croak.\n\n      You can restore the old strict behavior by giving the policy\n      a false value for \"allow_messages_ending_with_newlines\" in your\n      configuration.\n\n    Misc Changes:\n\n    Added single-letter uppercase alternatives for some perlcritic options.\n\n[0.21_01] Released on 2006-12-03\n\n    New Policies:\n    * TestingAndDebugging::ProhibitProlongedStrictureOverride\n    * ControlStructures::ProhibitMutatingListFunctions\n\n    New Features:\n    * Say \"perlcritic -List\" to get an expanded listing of all Policies.\n      The format is suitable for use as your .perlcriticrc file.\n    * Say \"perlcritic -doc PATTERN\" to get the documentation for all\n      Policies that match m/PATTERN/imx.  This is a little easier than\n      typing in the full name of the Policy module with \"perldoc\".\n    * Say \"perlcritic --singlepolicy PATTERN\" to use one and only one\n      policy.\n    * Can now specify exceptions to Variables::ProhibitPackageVars,\n      for packages like File::Find that only interface through\n      package variables.\n\n    Bug Fixes:\n    * 21713 false positive for parens used with substr and unpack.\n    * 22890 allow Rcs keywords in POD.\n\n    Internals:\n    * Testing system overhauled.  Details on the Policy/subtest\n      framework is in t/run.t.\n    * Added Perl::Critic::Utils::words_from_string.  This is safer\n      than plain old C<split /\\s+/>.\n\n[0.21]  Released on 2006-11-05\n\n    New Policies:\n    * BuiltinFunctions::ProhibitReverseSortBlock\n    * BuiltinFunctions::ProhibitVoidGrep\n    * BuiltinFunctions::ProhibitVoidMap\n    * CodeLayout::RequireConsistentNewlines\n    * Modules::RequireFilenameMatchesPackage\n    * TestingAndDebugging::RequireTestLabels\n    * ValuesAndExpressions::ProhibitMismatchedOperators\n\n    New Features:\n    * Introduced policy \"themes.\"  Themes are arbitrary names that can\n      be used to identify a group of related Policies.  You can select\n      your favorite policies by combining themes in a mathematic expression\n      such as \"pbp * (danger + risky)\".  See POD for details.\n    * perlcritic output is colorized if you have Term::ANSIColor.  This\n      only works on non-Win32 platforms.  Use -nocolor switch to disable.\n    * Say \"perlcritic -count\" to get just the the total number of\n      violations per file.  Use this feature to quickly identify hot-spots.\n    * Use the -only switch to choose only from policies mentioned in your\n      .perlcriticrc file.  This is useful if you usually only want to\n      work with a small subset of the policies.\n    * Default values for most of the perlcritic and Perl::Critic options\n      can now be defined in your .perlcriticrc file.  See POD for details.\n\n    Bug Fixes:\n    * 21236: wrong page number for \"printing to filehandles\"\n    * 21916: File handle ... wrong page reference in PBP [DUPE]\n    * 21714: false positive for capture var used in ternary condition\n    * 21718: No skip for File::Slurp in includes.t\n    * ProhibitBarewordFilehandles doesn't complain if you open\n      STDIN, STDOUT or STDERR.\n    * Parrot 40564: Subroutines::RequireFinalReturn should allow die,\n      exit, etc.\n    * Each \"for\" and \"foreach\" loop now adds one point to the McCabe\n      complexity score.\n\n    Other Stuff:\n    * The internals of Perl::Critic have been significantly refactored,\n      but should still be compatible with existing third-party Policies.\n    * Added author-only tests to the release, but disabled by default\n    * New Perl::Critic::Utils::shebang_line() method\n    * Support for filename-based policies\n    * Additional prerequisite: Set::Scalar\n    * Now requires PPI version 1.118\n\n[0.20]  Released on 2006-09-10\n\n    Perl::Critic now requires PPI version 1.117, which fixes\n    several bugs that were introduced in version 1.116.\n\n    Bug Fixes:\n    * 21079: grep clears \@SITE_POLICIES\n    * 21352: Test failures with PPI 1.117\n    * 11365: sub DESTROY detected as a builtin homonym\n\n[0.19]  Released on 2006-08-20\n\n    New Policies:\n    * BuiltinFunctions::ProhibitStringySplit\n    * ControlStructures::ProhibitDeepNests\n    * RegularExpressions::ProhibitCaptureWithoutTest\n    * Variables::RequireLexicalLoopIterator\n\n    New Features:\n    * \"perlcritic -quiet\" suppresses the \"source OK\" message.\n    * Variables::ProhibitPunctuationVars is now configurable.\n\n    Bug Fixes:\n    * 20965: \"Hard tabs used at\" shouldn't check __DATA__\n    * 21070: ProhibitNoisyQuotes hates overload\n    * Punctuation variables are now exempt from ProhibitLocalVars\n\n    Other Stuff:\n    * Test coverage is now over 95%\n\n[0.18_01]  Released on 2006-08-06\n\n    New Policies:\n    * Variables::RequireNegativeIndices\n    * InputOutput::ProhibitInteractiveTest\n    * ErrorHandling::RequireCarping\n\n    Bug Fixes:\n    * RequireTidyCode tests fail if user has custom .perltidyrc file\n    * 20612: RequirePerlTidy was ignoring HEREDOCs\n    * 20659: __END__ statement considered \"unreachable\"\n    * Fix for PPI::XS (no C<use overload '\"\"'> support)\n    * Support for 'goto' in ProhibitAmpersandSigils and\n      Subroutines::RequireFinalReturn\n\n    Performance Enhancements:\n    * Introduced Perl::Critic::Document class.  This is a facade for\n      PPI::Document which internally caches search results.  This\n      reduces the running time by about 35%.  The facade should be\n      invisible, unless you are doing something really sneaky.\n    * Extraction of the 'diagnostics' information is postponed\n      until it is really needed.  Speedup has not been measured.\n    * Calls to helper-subs have been reordered for maximum efficiency.\n\n    Other Cool Stuff:\n    * Includes updated version of perlcritic mode for emacs.  See\n      \"extras/perlcritic.el\" for details.\n\n[0.18]  Released on 2006-07-16\n\n    Bug Fixes:\n    * 14855: Home discovery is dangerously naive.\n    * 20060: Incorrect page numbers in ProhibitLeadingZeros\n      and RequireNumberSeparator policies.\n    * 20068: .perlrc file - inconsistent documentation\n    * 20254: \"use vars qw(\@EXPORT_OK)\" not recognized\n    * 20463: No-case heredoc terminator incorrectly detected as lower case.\n    * ProhibitOneArgBless doesn't understand \"bless {} => \$class;\"\n    * ProhibitExcessComplexity doesn't count 'while' and 'until' stmnts\n    * ProhibitLeadingZeros was falsely hits '.0456'\n\n    Enhancements:\n    * If File::HomeDir is available, we use it to locate the\n      .perlcriticrc file.  This should help make Perl::Critic\n      more portable to Win32 platforms.  If File::HomeDir is\n      not installed, we resort to looking at the usual\n      environment variables.\n\n    Other Stuff:\n    * Added \"perlcritic.el\", which is a super-cool emacs minor-mode\n      that runs perl-critic on the current buffer and returns the\n      results in a sexy hot-linked \"compiler\" window.  You can run\n      it on demand, or have it run automatically every time you\n      save the buffer.  You can find this in the extras/ directory.\n      Thanks to Josh ben Jore for contributing this.\n\n    * Moved \"Perl::Critic::TestUtils\" into the installed build.  This\n      module is only used for unit-testing Perl::Critic, but we\n      are putting it in the installation so folks who want to\n      extend Perl::Critic can make use of it.\n\n[0.17]  Released on 2006-06-13\n\n    Bug Fixes:\n    * 19836: Perl-Critic0.16 fails tests during install.  This was\n      caused by a bug in version 3.01 of Module::Pluggable.  See\n      http://rt.cpan.org/Ticket/Display.html?id=19857 for details.\n    * Fixed bug in no-critic pragma parser.\n\n    New Policies:\n    * ValuesAndExpressions::ProhibitEscapedCharacters\n    * BuiltinFunctions::RequireSimpleSortBlock\n\n    Enhancements:\n    * Perl::Critic can export critique() as a static function.  This\n      may appeal to folks who dislike the object-oriented interface.\n\n[0.16]  Released on 2006-05-14\n\n    Enhancements:\n    * Perl::Critic->critique() now accepts a PPI::Document as the\n      argument.  This feature creates an additional dependency on\n      Scalar::Util, but that shouldn't be a problem because it is\n      included with List::Util, which we already use.\n\n    Miscellanea:\n    * Increased PPI dependency from v1.110 to v1.112\n\n[0.15_03] Released on 2006-05-07\n\n    Bug Fixes:\n    * The \"## no critic\" feature is now implemented without eval-ing\n      the code.  This keeps Perl::Critic pure and safe :)\n    * 19082: Page number for AUTOLOAD is incorrect\n\n    New Policies:\n    * ControlStructures::ProhibitUnreachableCode (by Peter Guzis)\n    * Modules::ProhibitAutomaticExportation\n    * ValuesAndExpressions::ProhibitVersionStrings\n\n[0.15_02] Released on 2006-04-26\n\n    Bug Fixes:\n    * Reimplemented the '##no critic' pragmas to have effect on the\n      line where the violation is reported, not on the line where\n      the candidate element lives.  This is because some policies\n      may report violations that are nowhere near the element that\n      is being evaluated.\n    * RequireUseStrict, RequireUseWarnings, and RequireExplcitPackage\n      all emit violations for _every_ statement that violates the\n      Policy.  This closes a loophole that allowed you to circumvent\n      the Policy by using '## no critic' on just the first statement\n      that violated the policy.\n    * Fixed the workaround for the magic shebang that is inserted\n      by EU::MM and M::B.  This had stopped working around version 13.\n    * Fixed -noprofile option on 'perlcritic'.  This also had stopped\n      working at some point.\n\n[0.15_01] Released on 2006-04-16\n\n    Enhancements:\n    * Added diagnostic messages if the .perlcriticrc contains entries\n      for Policy modules that don't seem to exist.\n    * Now you can specify which policies to disable with the\n      \"## no critic\" pseudo-pragmas.  This feature is still\n      experimental.  See docs for details.\n    * perlcritic's directory searching now skips backup files, such\n      as *.swp, *.bak and *~.  It also ignores version control system\n      directories, and the blib directory in module build directories.\n\n    Bug Fixes:\n    * 18386: Bad example in POD for Documentation::RequirePodSections\n    * 18670: Test failure if Perl::Tidy is not installed\n    * 18698: Policy idea ProhibitUniversalFunctions (see New Policies)\n    * RequireInterpolationOfMetachars falsely hit strings like 'foo=s\@'\n      which are commonly used with Getopt::Long.\n\n    New Policies:\n    * BuiltinFunctions::ProhibitUniversalCan (by Chris Dolan)\n    * BuiltinFunctions::ProhibitUniversalIsa (by Chris Dolan)\n\n    Miscellanea:\n    * All spurrious options for `perlcritic` are now fatal.\n    * Changed several of the -verbose formats to be more readable.\n    * Explicit -severity option now overrides -[12345] shortcuts instead\n      of being the other way around.\n\n\n\n[0.15] Released on 2006-03-26\n\n    Bug Fixes:\n    * 17964: Insists my code is not tidy (may not be fixed for all cases)\n\n[0.14_02] Released on 2006-03-19\n\n    Bug Fixes:\n    * 15653: False positive in OneArgSelect (fixed for real this time)\n\n    New Policies:\n    * ClassHierarchies::ProhibitAutoloading\n    * Documentation::RequirePodSections\n    * InputOutput::RequireBracedFileHandleWithPrint\n    * ValuesAndExpressions::ProhibitMixedBooleanOperators\n    * Variables::RequireInitializationForLocalVars\n\n[0.14_01] Released on 2006-03-05\n\n    Bug Fixes:\n    * 14731: False positive: Builtin function called with parens\n    * 17554: False positive in CodeLayout::RequireTrailingCommas\n\n    New Policies:\n    * ClassHierarchies::ProhibitExplicitISA\n    * InputOutput::ProhibitReadlineInForLoop\n    * Miscellanea::ProhibitFormats\n    * Miscellanea::ProhibitTies\n    * Variables::ProhibitConditionalDeclarations\n\n[0.14] Released on 2006-01-29\n\n    More documentation edits.\n\n    New Policies:\n    * Documentation::RequirePodAtEnd\n    * Subroutines::ProtectPrivateSubs\n    * Variables::ProhibitMatchVars\n    * Variables::ProtectPrivateVars\n\n    Bug Fixes:\n    * 15295: \"## no critic\" pragmas too aggresive on compound statements.\n    * t/01_config.t failed in the presence of third-party policies\n\n[0.13_05] Not released\n\n    More documentation edits.\n\n    Implemented workaround for failing pod_coverage tests.\n\n    Bug Fixes:\n    * 16906:  tr/// created false-postives with RegularExpression polices.\n\n[0.13_04] Released on 2005-12-31\n\n    Moved DEVELOPER.pod file into the Perl/Critic dir.\n\n    More documentation edits.\n\n[0.13_03] Released on 20051230\n\n    perlcritic now prints 'source OK' if it doesn't find any\n    violations.  This gives folks a warm fuzzy feeling.\n\n    Tweaked some test cases that were failing on my Solaris\n    environment at work.\n\n[0.13_02] Released on 2005-12-29\n\n    Fixed Config to recognize fully-qualified module names in the\n    .perlcriticrc file.\n\n    Various documentation edits.\n\n[0.13_01] Released on 2005-12-28\n\n    Replaced 'priority' concept with 'severity'.  Now each Policy module\n    has a predefined severity level ranging from 1 to 5.  By default,\n    perlcritic only reports the most severe violations.  You can adjust\n    the severity threshold at the command line, and you can change\n    the severity for any Policy using the config file.\n\n    Chris implemented the applies_to() mechanism, which allows each Policy\n    class to declare the types of PPI elements that it wants to examine.\n    When traversing the document, Perl::Critic invokes the Policy only\n    for elements that are of the correct type.  This improves performance\n    by about 33%.\n\n    Perl::Critic now uses a Plugin architecture to automatically\n    discover Policy modules.  So if you have custom Policies, all you\n    have to do is install them in the Perl::Critic::Policy namespace --\n    no need to add anything to your .perlcriticrc file.  If you write\n    policies in a different namespace, you can configure that too.  See\n    the Perl::Critic::Config docs for details.\n\n    New Policies:\n    * Modules::RequireEndWithOne\n    * NamingConventions::ProhibitAmbiguousNames\n    * References::ProhibitDoubleSigils\n    * Subroutines::RequireFinalReturn\n    * Subroutines::ProhibitAmpersandSigils\n    * Subroutines::ProhibitExcessComplexity\n    * TestingAndDebugging::ProhibitNoStrict\n    * TestingAndDebugging::ProhibitNoWarnings\n\n    Bug Fixes:\n    * 15101: Plugin architecture improves support for 3rd-party code\n    * 16319: Fixed incorrect PBP page number in ProhibitBarwordFilehandle\n    * 16321: Lists of empty quotes are now allowed by ProhibitQuotedWordLists\n    * 16288: Empty lists caused a fatal error RequireTrailingCommas\n    * 15653: Fixed false positive in OneArgSelect.\n\n[0.13] Released on 2005-10-31\n\n    Official release of 0.12_03.  No code major changes.\n\n[0.12_03] Not released\n\n    Renamed -Policy option to -include.  Added -exclude to give the\n    opposite effect.\n\n    Refactored constructor of Perl::Critic.  Now, most of the work\n    is delegated to Perl::Critic::Config.  I'm not sure I like how\n    this turned out, but we'll see how it goes.\n\n    Renamed some Policy modules to be a bit more comprehensible.  Note\n    that you may need to change your .perlcriticrc file accordingly.\n    I also suggest removing your current Perl::Critic installation\n    before installing this one.\n\n    Name Changes:\n    * ProhibitUnpackagedCode => RequireExplicitPackage\n    * RequireQuotedWords     => ProhibitQuotedWordLists\n\n    Improved error message when Perl::Critic dies because PPI can't\n    parsee the input code.\n\n    Changed output of -help to be more terse.\n\n    Edited POD.\n\n[0.12_02] Not released\n\n    Added -Policy option to perlcritic.  The idea is to provide a\n    compact interface for selecting Policy modules at the command-line.\n    This feature is experimental and subject to change.\n\n    Added a warning message if -verbose value looks strange.  In most\n    applications, the -verbose option does not require a value, so people\n    might be puzzled when they write 'perlcritic -verbose my_file.pm' and\n    nothing seems to happen.\n\n    Command-line options to perlcritic are now case-sensitive.  This\n    makes it easier to abbreviate options that start with the same letters\n    (e.g. 'Version' and 'verbose')\n\n    Fixed the new Policy modules that were misnamed and misplaced in the\n    previous distribution.\n\n[0.12_01] Not released\n\n    Rewrote some of the ControlStructures and BuiltinFunction\n    policies to be simpler (and probably a little faster).\n\n    Edited POD.  Fixed some typos.  Added PREREQUISITES section\n    to Perl::Critic documentation.\n\n    Fixed the -verbose FORMAT option so that you can put metachars\n    in the FORMAT specification.  If using perlcritic, be careful to\n    protect them from getting munged by the shell first.\n\n    Replaced ProhibitRequireStatements with RequireBarewordIncludes\n    module. Courtesy of Chris Dolan <cdolan\@cpan.org>\n\n    Added configuration to ProhibitInterpolationOfLiterals so that\n    certain flavors of quotes can be exempt.  This is for folks who\n    have configured their editor to use special syntax highlighting\n    for certain kinds of strings (SQL, for example).\n\n    perlcritic now accepts multiple file arguments, so now you can\n    critique your entire distribution in one shot.  As a result, the\n    output-formats have changed slightly.\n\n    New Policy modules:\n    * BuiltinFunctions::ProhibitLvalueSubstr\n    * BuiltinFunctions::ProhibitSleepViaSelect\n    * ClassHierarchies::ProhibitOneArgBless\n    * CodeLayout::RequireTrailingCommas\n    * CodeLayout::RequireQuotedWordLists\n    * InputOutput::ProhibitTwoArgOpen\n    * InputOutput::ProhibitOneArgSelect\n    * InputOutput::ProhibitBarewordFileHandles\n    * Miscellanea::RequireRcsKeywords\n    * Modules::RequireVersionVar\n    * RegularExpressions::RequireExtendedFormatting\n    * RegularExpressions::RequireLineBoundaryMatching\n\n\n    Bug fixes:\n    14923: 'require' is now permitted. See RequireBarewordIncludes.\n    15022: Fixed false-positives when keywords are used as hash keys.\n    15023: Fixed spurious Violations by removing magic shebang.\n    15031: Fixed spelling mistakes (and probably added some new ones).\n    15233: Postfix 'if' is now allowed with 'die', 'croak', etc.\n\n[0.12] Released 2005-10-10\n\n    Redesigned the 'verbose' feature.  Now the output format\n    can be user-defined using a sprintf-like specification.\n    perlciritc also has a predefined output format that is\n    compatible with grep mode in editors like vim and emacs.\n\n    'return' is now exempt from ProhibitParensWithBuiltins.  I may\n    extend this exemption to all unary functions.\n\n    Edited POD. Added a super brief description of each policy\n    in the main Perl::Critic documentation.  Added details about\n    editor integration.\n\n    Additional Prerequisites:\n    * String::Format\n\n[0.11] Not released\n\n    The internal dynamics and API of Perl::Critic have changed\n    considerably.  The result is a 300% increase in performance.\n    See the POD in Perl::Critic::Policy for details.\n\n    New Features:\n    * Added -verbose option to put more stuff in the output.  In the\n      extreme, you can get the POD from Policy attached to each\n      and every violation.\n\n    Additional Prerequisites:\n    * IO::String\n    * Pod::PlainText\n\n[0.10] Released 2005-10-05\n\n    Fixed stupid bug in newest Policy modules.  They were returning\n    PPI objects instead of Perl::Critic::Violation objects.  Doh!\n\n    Fixed test scripts to prevent failures if the user already has a\n    .perlcriticrc file.\n\n    'ProhibitHardTabs' now allows leading tabs by default.\n\n    Put the Changes file in reverse-chronological order, so the most\n    recent stuff is easy to find at the top of the file\n\n[0.09] Released 2005-10-04\n\n    Fixed several bugs:\n    * 14810: Now you are allowed to create your own 'import' function,\n             since this is frequently done with fancy modules.\n    * 14817: Parens, brackets, and braces are now excluded from\n             'ProhibitNoisyQuotes' since they look better in quotes anyway.\n    * 14787: \$1..\$9 and '_' are exempt from ProhibitPunctuationVars\n    * 14899: Object methods with the same name as a built-in can\n             be called with parens (ProhibitParensWithBuiltins).\n    * 14901: Normalized the exit status of perlcritic to 0, 1, or 2.\n             See documentation for explanation.\n    * 14855: Partially fixed home directory discovery.  Still not\n             completely portable, but at least doesn't create warnings.\n\n    New features:\n    * 14734: Limit for number separators is now configurable\n\n    New Policy modules:\n    * CodeLayout::ProhibitHardTabs\n    * ControlStructures::ProhibitUnlessBlocks\n    * ControlStructures::ProhibitUntilBlocks\n    * ControlStructures::ProhibitCStyleForLoops\n\n    Changed the syntax for the magic comments.  Adam had the\n    idea of using a pragma-like notation.  I liked it.\n\n[0.08_2] Released 2005-09-27\n\n    Fixed problems with Perl::Critic::Config that caused File::Spec\n    to emit 'uninitialized value' warnings during the build.\n\n    Added 1 Policy module contributed by Graham TerMarsch\n\n    Switched from File::Spec::Functions to plain File::Spec because\n    I think its usage is more common.\n\n    Removed 'FindBin' from the test files so I can be sure that the\n    right libraries are getting loaded.  This means I'll have to\n    use the -l option with C<prove>.\n\n    Edited more POD.\n\n[0.08_01] Not released\n\n    Fixed \"ProhibitParensWithBuiltins\" to allow parens to be used with\n    object method calls that have the same name as a builtin functions.\n\n    Introduced magical comments that allow developers to configure\n    Perl::Critic on-the-fly from within their code.\n\n    Added META.yml files and POD tests to the build.  I did this\n    mostly just to boost the Kwalitee score on CPANTS.\n\n    Switched from \"Config::Std\" to \"Config::Tiny\" because it doesn't\n    require those fancy Damian modules that don't seem to work on\n    some older versions of Perl.\n\n[0.07] Released on 2005-09-21\n\n    Fixed bugs in the ProhibitCascadingIfElse policy.\n\n    Added ProhibitExplicitReturnUndef policy\n\n    Made ProhibitUnpackagedCode configurable so you can exempt scripts,\n    which typically don't have an explicit 'package' statement.\n\n    ProhibitPackageVars policy now exempts vars in ALL_CAPS.  This\n    is to permit common package variables like \@EXPORT and \$VERSION.\n\n    Renamed \"ProhibitStringyGrep and \"ProhibitStringyMap\" because\n    the so-called string form doesn't really exist.  Now called\n    \"RequireBlockGrep\" and \"RequireBlockMap\"\n\n    Corrected documentation on defining Policy names within the\n    configuration file.  This still isn't very clear and needs\n    to be rewritten.\n\n    Perl::Critic now requires PPI version 1.003, which has a few bug\n    fixes of its own.\n\n    Rewrite some code just to make Perl::Critic more self-compliant.\n\n    Added test cases to verify the configuration functionality.  These\n    are not completely thorough and need more work.\n\n[0.06] Released on 2005-09-17\n\n    Now called 'Perl::Critic'.\n\n    Added 4 new policy modules.\n\n    Fixed bugs in build process.\n\n    Added support for Module::Build.\n\n[0.05] Released on 2005-09-17\n\n    End of 'Perl::Review' releases.  I have changed the name to\n    'Perl::Critic' to avoid possible confusion with \"The Perl Review\"\n    magazine.\n\n[0.04] Released on 2005-09-14\n\n    Version 0.03 was a bust because I uploaded the wrong tarball to PAUSE.\n\n[0.03] Released on 2005-09-13.\n\n    Fixed some POD links.\n\n    Removed test cases for missing policy module.\n\n[0.02] Released on 2005-09-13.\n\n    Major overhaul based on feedback from Perl community.\n\n    Factored coding standards into separate modules (known as\n    Policies).  The idea here is to allow other developers to easily\n    contribute additional coding standards.\n\n    Reworked Perl::Review into a simple engine for loading and running\n    Policy modules.\n\n    Gave perlreview a command-line interface and configuration file\n    for selecting which Policy modules to use.\n\n[0.01] Released on 2005-08-16.\n\n    Initial version.\n\n##############################################################################\n#      \$URL: http://perlcritic.tigris.org/svn/perlcritic/trunk/distributions/Perl-Critic/Changes \$\n#     \$Date: 2013-09-25 21:18:04 -0700 (Wed, 25 Sep 2013) \$\n#   \$Author: thaljef \$\n# \$Revision: 4169 \$\n##############################################################################\n\n# ex: set ts=8 sts=4 sw=4 tw=78 ft= expandtab shiftround :",
  "raw_preamble" => "[1.120_01] Released on 2013-10-29\n\n      * DEVELOPER RELEASE *\n\n      Added new themes based on CERT guidelines. Thanks Kirk Kimmel.\n\n      First release from the new GitHub repository.\n\n[1.120] Released on 2013-10-25\n\n     Bug Fixes:\n     * Corrected \"Possible precedence issue with control flow operator\" \n       warning.  This fixes RT #88866\n\n[1.119] Released on 2013-09-25\n\n     Bug Fixes:\n     * Tests were failing with Config::Tiny 2.17 or later, due to a\n       change in the error messages produced by that module. \n       This fixes #16 on Github,  #88679 & #88889 on RT.\n\n\n     Policy Changes:\n     * BuiltinFunctions::ProhibitVoidGrep and ::ProhibitVoidMap: grep\n       and map called as functions are now allowed in slice operations.\n       RT #79289\n       Thanks to Wade at Anomaly dot org for the patch.\n     * Subroutines::RequireArgUnpacking: Most tests of the size of \@_\n       are now allowed.  RT #79138\n\n     Other Changes:\n     * Modernized our usage of Exporter.  See RT #75300.  \n       Thanks to Olivier Mengu\303\251 for the patch.\n\n[1.118] Released on 2012-07-10\n\n    Policy Changes:\n    * CodeLayout::RequireTidyCode: Revise to work with incompatible\n      changes in Perl::Tidy 20120619. RT #77977.\n    * TestingAndDebugging::ProhibitNoWarnings: Correct the parse of the\n      'no warnings' statement, so that 'no warnings \"qw\"' is recognized\n      as supressing just 'qw' warnings. RT #74647.\n    * Miscellanea::RequireRcsKeywords has been moved to the Perl-Critic-More\n      distribution,  RT #69546\n\n    Other Changes:\n    * Make all unescaped literal \"{\" characters in regexps into\n      character classes. These are deprecated, and became noisy with\n      Perl 5.17.0.  RT #77510.\n\n[1.117] Released on 2011-12-21\n\n    HAPPY HOLIDAYS!\n\n    New Policies:\n    * Variables::ProhibitAugmentedAssignmentInDeclaration reports\n      constructs like 'my \$x += 1'. Contributed by Mike O'Regan\n\n    Policy Changes:\n    * BuiltinFunctions::ProhibitLvalueSubstr: Add explicit 'use version'.\n      RT #68498.\n    * CodeLayout::ProhibitHardTabs: Add 'pbp' to the default_themes list.\n      RT #71093.\n    * ControlStructures::ProhibitMutatingListFunctions now understands that\n      tr///r (introduced in 5.13.7) does not change its operand.\n    * ControlStructures::ProhibitMutatingListFunctions now understands that\n      '//=', '<<=', and '>>=' are assignment operators. RT #70901.\n    * ErrorHandling::RequireCheckingReturnValueOfEval now allows things\n      like grep { eval \$_ }. RT #69489.\n    * Modules::RequireExplicitPackage now has configuraion option\n      allow_import_of, to allow the import of specified modules before\n      the package statement. RT #72660.\n    * RegularExpressions::ProhibitEnumeratedClasses no longer thinks\n      that [A-Za-z_] matches \\w. RT #69322.\n    * RegularExpressions::ProhibitUnusedCaptures now skips the first\n      block of an 'if' or 'elsif' if the regular expression is bound to\n      its operand with the '!~' operator. RT #69867.\n    * RegularExpressions::ProhibitUnusedCaptures now looks into lists\n      and blocks in the replacement portion of the regular expression if\n      /e is asserted. RT #72086.\n    * RegularExpressions::RequireDotMatchAnything,\n      RegularExpressions::RequireExtendedFormatting and\n      RegularExpressions::RequireLineBoundaryMatching now honor defaults\n      set with 'use re \"/modifiers\"'. RT #72151.\n    * Subroutines::ProhibitManyArgs now recognizes '+' as a prototype\n      character.\n    * Variables::ProhibitPunctuationVars now recognizes bracketed\n      variables embedded in interpolated strings (e.g. \"\${\$}\"). For the\n      purpose of the 'allow' configuration, these are considered\n      equivalent to the unbracketed form. RT #72910.\n    Other Changes:\n    * Corrected POD in Perl::Critic::PPI::Utils. RT #68898.\n    * Perl::Critic::Violation source() method now returns the line\n      containing the violation (not the first line) when the statement\n      containing the violation spans multiple lines.\n\n[1.116] Released on 2011-05-15\n\n    Policy Changes:\n    * BuiltInFunctions::ProhibitLvalueSubstr does not report violations\n      if the document contains an explicit 'use n.nnn;' where the\n      version is before 5.005.  RT #59112\n    * Documentation::RequirePodSections no longer blows up on code\n      having POD but no =head1. This problem was introduced with RT\n      #59268. RT #67231\n    * RegularExpressions::ProhibitUnusedCapture should more reliably\n      find things like s/(a)/\${1}2/.  RT #67273.\n    * ValuesAndExpressions::ProhibitMagicNumbers and\n      Module::RequireVersionVar now treat versions passed as the second\n      argument of a 'package' statement the same as versions declared as\n      'our \$VERSION ...'.  RT #67159\n    * Variables::RequireLexicalLoopIterators does not report violations\n      if the document contains an explicit 'use n.nnn;' where the\n      version is before 5.004.  RT #67760\n\n[1.115] Released on 2011-03-31\n\n    Minor bits:\n    * Fatal error in RegularExpressions::ProhibitUnusedCapture here\n      document check.  RT #67116.\n    * Internal POD error in Documentation::RequirePodLinksIncludeText.  Patch\n      by Salvatore Bonaccorso.  RT #67012\n\n[1.114] Released on 2011-03-26\n\n    Policy Changes:\n    * Documentation::RequirePodLinksIncludeText now handles nested POD\n      formatting. RT #65569\n    * Clarified relation of severity numbers to names in Perl::Critic\n      POD. RT #66017\n    * Removed caveats from Variables::RequireLocalizedPunctuationVars,\n      no longer necessary with PPI 1.208. RT #65514\n    * Have InputOutput::RequireBriefOpen attempt to expand scope as\n      necessary to deal with the case where the open() and the\n      corresponding close() are not in the same scope. RT #64437\n    * RegularExpressions::ProhibitUnusedCapture now looks inside\n      double-quotish things. RT #38942.\n    * RegularExpressions::ProhibitUnusedCapture now takes logical\n      alternation into account, so that (e.g.)\n          if ( /(a)/ || /(b)/ ) {\n              say \$1;\n          }\n      is not a violation. RT #38942.\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements now\n      recognizes 'return { foo => 1, bar => 2 }' as containing a hash\n      constructor, not a block. This was fixed by PPI 1.215. RT #61301.\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements now\n      recognizes 'bless { foo => 1, bar => 2 }' as containing a hash\n      constructor, not a block. This was fixed by PPI 1.215. RT #64132.\n\n[1.113] Released on 2011-02-14\n\n    New Policies:\n    * InputOutput::RequireEncodingWithUTF8Layer recommends\n      ':encoding(utf8)' over ':utf8' in open() and binmode(). It is severity 5\n      because of the bad things that can happen if invalid UTF8 gets loose in\n      your code.\n    * Modules::ProhibitConditionalUseStatements prohibits\n      'use module' inside a conditional, since the statement is executed\n      unconditionally at compile time.  Thanks to Peter Guzis for submitting\n      the policy and tests in RT #59065.\n\n    Policy Changes:\n    * CodeLayout::RequireConsistentNewlines produces multiple undefined\n      value errors when a violation is found. RT #65663\n    * ControlStructures::ProhibitMutatingListFunctions allows s///r,\n      which was introduced in 5.13.2.\n    * ControlStructures::ProhibitPostfixControls now looks for \"when\".  It is\n      treated in the same way as \"if\".\n    * Documentation::RequirePodSections now honors '## no critic'\n      annotation anywhere before the '__END__', '__DATA__', or first\n      '=head1', whichever comes first.  The line number of the offending\n      '=head1 NAME' was added to the violation description.  RT #59268.\n    * RegularExpressions::ProhibitUnusedCapture now takes account of the\n      use of \$- and \$+ (and their English equivalents under 'use\n      English') provided the subscripts are literal integers.\n    * RegularExpressions::ProhibitUnusedCapture now takes account of the\n      use of capture variables in the replacement portion of\n      s/.../.../e.\n    * Subroutines::ProhibitUnusedPrivateSubroutines now looks inside\n      regular expressions.\n    * ValuesAndExpressions::ProhibitMagicNumbers now supports Const::Fast.\n    * ValuesAndExpressions::ProhibitMagicNumbers now has a\n      constant_creator_subroutines parameter to allow the user to\n      configure the names of subroutines that create constants. RT #62562.\n    * ValuesAndExpressions::ProhibitMismatchedOperators didn't handle file\n      test operators properly.  Patch by H.Merijn Brand.  RT #58751\n    * Variables::ProhibitUnusedVariables now looks inside regular\n      expressions.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now detects\n      and complains about \"\\b\" and \"\\l\" as documented in perlop, and\n      \"\\1\" through \"\\7\", which are not documented there, but were found\n      in toke.c.\n\n    New Developer Features:\n    * uses_module(), namespaces(), and subdocuments_for_namespace() methods on\n      Perl::Critic::Document.\n    * Perl::Critic::Document->new() now accepts a -filename-override argument\n      for setting the filename when the source code comes from something\n      other than an actual file.\n\n    Other Changes:\n    * Test::Perl::Critic::Policy no longer exports by default.\n    * Build phase now requires Test::Deep.\n    * Added example using Try::Tiny to documentation of\n      ErrorHandling::RequireCheckingReturnValueOfEval. Suggested by Andy\n      Lester on the developers mailing list.\n    * In order to get more consistent behavior across all installations of\n      Perl::Critic, IPC::Open2 (which actually is part of core), PPIx::Regexp,\n      Perl::Tidy, Pod::Spell, and Text::ParseWords are no longer optional\n      prerequisites.\n    * Now depends upon PPIx::Utilities v1.1.0.\n\n    Bug Fixes:\n    * Build.PL/Makefile.PL didn't specify a minimum version of version.pm, but\n      TestingAndDebugging::RequireUseStrict did.  RT #58952\n    * Perl::Critic::Annotation needs to look inside the __END__ statement to\n      find the true end of the document, otherwise POD policies may give false\n      positives.  RT #59176\n    * BuiltinFunctions::ProhibitStringyEval no longer dies on eval\n      \"#...\".  RT #60179\n    * RegularExpressions::ProhibitUnusedCapture now takes account of the\n      %LAST_PAREN_MATCH as well as %+ if English has been loaded.  RT #60002\n    * Subroutines::ProhibitManyArgs now interprets prototype groups (e.g.\n      \\[\$\@%]) as representing a single argument.\n    * Require Exporter version 5.63 (versus version 0) to get sane handling of\n      export tags.  RT# 61071\n    * Prevent Subroutines::ProhibitUnusedPrivateSubroutines from failing\n      on &_subroutine().  RT #61311\n    * Subroutines::ProhibitAmpersandSigils now allows references of the\n      form \\( &sub1, &sub2 ).  RT #49609\n\n[1.112_002] Released on 2011-02-09\n[1.112_001] Released on 2010-12-14\n\n    Changes summarized into 1.113 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.111] Released on 2010-12-14\n\n    Bug Fixes:\n    * TestingAndDebugging::ProhibitNoStrict and ProhibitNoWarnings no longer\n      rely on the behavior of all() when the list is empty due to change in\n      List::MoreUtils 0.28.  RT #63816\n\n[1.110_001] Released on 2010-11-30\n\n    Changes summarized into 1.113 above.  For exact details, see Changes on\n    BackPAN.  (Yes, all of this stuff was not in 1.111.)\n\n[1.109] Released on 2010-08-29\n\n    Bug Fixes:\n    * ValuesAndExpressions::RequireInterpolationOfMetachars fix due to changes\n      in Email::Address 1.890.  Note that this may find problems in code that\n      it didn't before, e.g. q<'\@foo'>.\n\n[1.108] Released on 2010-06-22\n\n    This is the \"Give Shawn Moore what we promised him a year ago and hurry up\n    and get this out before Brad Oaks gives his YAPC::NA talk\" release.\n\n    New Policies:\n    * Documentation::RequirePodLinksIncludeText\n    * Subroutines::ProhibitUnusedPrivateSubroutines\n\n    New Features:\n    * There is a new global configuration item, 'program-extensions', which\n      configures Perl::Critic's idea of which file name extensions represent\n      programs.  The desired extensions are specified as a space-separated list,\n      with leading '.' on each if that is desired.  Files whose names end in\n      '.PL' will always be considered programs.  This can be overridden by\n      command option --programs-extensions, which can be specified multiple\n      times.\n    * There is now a perlcritic --allow-unsafe switch.  Without this switch,\n      Perl::Critic will silently refuse to load any Policy that is marked\n      unsafe.  Unsafe Policies are usually ones that may compile or execute\n      untrusted code (see Perl::Critic::DynamicPolicy for an example); Policy\n      authors can mark their policies as unsafe by overriding the is_safe()\n      method.\n    * The framework that we use to test Perl::Critic Policies has been\n      packaged into a convenient module that you can use to test your own\n      Policies.  See Test::Perl::Critic::Policy and Perl::Critic::TestUtils\n      for details.\n\n    Policy Changes\n    * BuiltInFunctions::ProhibitLvalueSubstr no longer complains when there\n      is a low-precedence operator between the substr() and the assignment\n      operator.\n    * CodeLayout::ProhibitParensWithBuiltins now allows 'state (\$foo)'.  RT\n      #52029\n    * ErrorHandling::RequireCarping now has an\n      allow_in_main_if_not_in_subroutine option to allow \"die\" directly in\n      the default namespace.\n    * InputOutput::RequireBriefOpen now recognizes CORE::open(),\n      CORE::close(), CORE::GLOBAL::open(), and CORE::GLOBAL::close().  RT\n      #52391\n    * Modules::ProhibitEvilModules now complains by default about the modules\n      deprecated by the Perl 5 Porters in 5.12.\n    * Modules::RequireVersionVar documentation updated to make clear that \"my\n      \$VERSION\" does not work as a module version declaration.  RT #56667\n    * The RegularExpressions::* policies have been converted from using\n      Regexp::Parser to using PPIx::Regexp for their heavy lifting.\n    * RegularExpressions::ProhibitCaptureWithoutTest now allows capture\n      variables inside when() {}.  RT #36081.\n    * RegularExpressions::ProhibitUnusedCapture now checks for unused named\n      captures.\n    * Subroutines::ProhibitManyArgs revised to count only characters in the\n      prototype that represent arguments.  RT #56627\n    * Subroutines::ProhibitNestedSubs no longer complains about scheduled\n      blocks (BEGIN, etc.) inside subroutines and vice versa.\n    * Subroutines::RequireFinalReturn should now understand a final given/when\n      statement, and declare an error if there is no 'default' block or if any\n      branch does not return.\n    * TestingAndDebugging::RequireUseStrict now accepts 'use 5.011' or greater\n      as equivalent to 'use strict'.\n    * ValuesAndExpressions::ProhibitMismatchedOperators false positive with\n      \"'foo' x 15 . 'bar'\".  RT #54524\n    * Variables::ProhibitPunctuationVars gave false positives on qr// regexp's\n      ending in '\$'.  RT #55604\n\n    Bug Fixes:\n    * The \"## no critic\" annotations now respect #line directives.\n    * Annotations on statements spanning more than one line (e.g.\n            my \$foo =\n                '\$bar'; ## no critic (RequireInterpolationOfMetachars)\n      ) are now handled as single-line annotations, not block annotations.\n    * All instances of L<Foo> in the POD have been changed to L<Foo|Foo>.\n      L</bar> and L<Foo/bar> were allowed to stand.  RT #37485\n    * Spaces are now allowed immediately inside the enclosing parentheses in\n      \"## no critic ( Foo )\".  RT #52038\n    * With the introduction of PPIx::Regexp, Perl::Critic no longer dies\n      when it encounters a Perl 5.010 regexp.  RT #49442.\n    * DEVELOPER.pod typo in link to\n      ValuesAndExpressions::ProhibitConstantPragma policy. RT #57818\n    * Spelling errors in documentation.  RT #57375\n    * \"die\" used instead of \"croak\".  RT #56619\n    * Fixed regex test that caused test failures on every Perl 5.11\n      (credit Tom Wyant).\n    * t/20_policy_pod_spelling.t now works (or at least no longer fails)\n      in non-English locales (again).  RT #43291 and RT #48986.\n    * Perldoc hae broken link for McCabe score definition.  RT #53219\n    * RT #33935 and #49679 were fixed by upgrading to PPI 1.208\n\n    Other Changes:\n    * Perl::Critic::Utils::is_unchecked_call() updated to include chmod in the\n      set of things covered by autodie (this happened in autodie v2.08).  The\n      primary effect of this is on InputOutput::RequireCheckedSyscalls.\n    * Now depends upon Task::Weaken to ensure that we only install with perls\n      where Scalar::Util::weaken() works.\n    * Email::Address was optional, but is now required.  So everyone\n      gets the optimal behavior from RequireInterpolationOfMetachars.\n    * Some infrastructure has been extracted to the new PPIx-Utilities\n      distro.  It is also a required dependency here.  Over time a good\n      portion of Perl::Critic::Utils* will be migrated to this distribution.\n    * Perl::Critic::Utils::PPI::get_constant_name_element_from_declaring_statement()\n      is deprecated because it doesn't handle multiple constants being\n      declared within a single \"use constant\" statement.  Use\n      PPIx::Utilities::Statement::get_constant_name_elements_from_declaring_statement()\n      instead.\n    * Removed all uses of Perl::Critic::Utils::PPIRegep.  Since the\n      PPIx::Regexp update, Perl::Critic only used get_match_string() and\n      friends, which were superseded by the corresponding PPI methods.\n      Perl::Critic now depends on PPI-1.208 or newer.\n    * Moved Perl::Critic::Utils::PPIRegexp to the Perl-Critic-Deprecated.\n    * The PolicySummary.pod file is now generated when the distribution\n      is created, rather than when you install it.  This ensures the file\n      will be available on http://search.cpan.org.  Thanks to Bear Longyear\n      for bringing this to our attention.\n\n[1.107_001] Released on 2010-06-20\n\n    Changes summarized into 1.108 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.106] Released on 2010-05-10\n\n    Bug Fixes:\n    * NamingConventions::Capitalization fix for PPI 1.212.  RT #57348\n\n[1.105_03] Released on 2010-03-21\n[1.105_02] Released on 2010-01-23\n[1.105_01] Released on 2010-01-16\n\n    Changes summarized into 1.108 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.105] Released on 2009-09-07\n\n    Bug Fixes:\n    * Variables::ProhibitPunctuationVars would complain about \"%-\" appearing\n      anywhere in a string.  RT #49016\n\n    Policy Changes:\n    * InputOutput::RequireCheckedSyscalls now complains about unchecked \"say\"\n      by default.  RT #37487\n\n[1.104] Released on 2009-08-23\n\n    This release is dedicated to Tom Wyant in appreciation of the amount of\n    effort he put into the enhancements and bug fixes in this release, for\n    having the patience to wait for the amount of time that it took to get\n    them out, and for overall awesomeness.  Thank you, Tom.\n\n    New Policies:\n      Objects::ProhibitIndirectSyntax\n      ValuesAndExpressions::ProhibitComplexVersion\n      ValuesAndExpressions::RequireConstantVersion\n\n    New Optional Requirement:\n    * Email::Address, if you want\n      ValuesAndExpressions::ProhibitInterpolationOfLiterals to properly ignore\n      email addresses.\n\n    New Features:\n    * Perlcritic will list the names of files with violations if given the\n      --files-with-violations option, or the names of files without\n      violations if given the --files-without-violations options. These\n      have synonyms -l and -L respectively.\n    * Perlcritic has a new --list-enabled option, which lists the Policies\n      that will be enforced, given the current configuration.  This is\n      useful if you've written a complex command-line or modified your\n      .perlcriticrc file and you want to see which Policies *would*\n      be used with the current configuration, if you were actually going\n      to critque a file with it.\n    * Perl::Critic::Violation now takes #line directives into account in the\n      %F, %f, and %l formats.  You can get the old values via the new %G, %g,\n      and %L formats.\n\n    Policy Changes:\n    * CodeLayout::ProhibitParensWithBuiltins was complaining in certain cases\n      where parentheses are required due to operator precedence.  RT #46862.\n    * ControlStructures::ProhibitMutatingListFunctions no longer complains\n      about uses of tr/// that don't modify the operand.  Reported by EDAVIS,\n      RT #44515.\n    * Miscellanea::RequireRcsKeywords now accepts \"qw\$Keyword: ...\$\".  RT\n      #45196.\n    * Modules::RequireFilenameMatchesPackage now respects logical filenames\n      defined by the \"#line\" directives.  This allows the Policy to work\n      properly with IDEs and code generators.\n    * NamingConventions::Capitalization now allows fully qualified subroutine\n      declarations ( e.g. \"sub Foo::Bar::baz {...}\" ).  However, the\n      non-package part of the subroutine name must still conform to whatever\n      capitalization rule you have chosen.\n    * RegularExpressions::ProhibitCaptureWithoutTest no longer complains if\n      the regex is followed by an \"or die\" or similar.  Reported by EDAVIS,\n      RT #36081.\n    * RegularExpressions::ProhibitComplexRegexes no longer counts variable\n      substitutions in the length.   Reported by EDAVIS, RT #36098.\n    * RegularExpressions::ProhibitUnusedCapture now considers the body of\n      while loops and not just their condition.  Reported by EDAVIS, RT\n      #38942.\n    * ValuesAndExpressions::ProhibitVersionStrings was getting confused by\n      comments.  Reported by Kevin Ryde,  RT #44986.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now allows sigils\n      in the arguments to \"use vars\".  Contributed by Kevin Ryde, RT #47318.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now properly\n      ignores email addesses, if you have Email::Address installed.  Inspired\n      by the Kevin Ryde contribution in RT #47318.\n    * Variables::ProhibitPunctuationVars gained the ability to look inside\n      interpolated strings.  Doing this correctly is challenging and things\n      may not work out right; how the policy does this can be controlled via\n      the new \"string_mode\" option.  Contributed by Edgar Whipple\n      <perlmonk at misterwhipple dot com>.\n    * Variables::ProhibitPunctuationVars now ignores \$] by default since there\n      is no English.pm equivalent.\n\n    Other Bug Fixes:\n    * Perl::Critic::Utils::parse_arg_list() was slurping up the \"or die ...\"\n      portion of \"open my \$foo, 'somefile' or die ...\", causing\n      InputOutput::ProhibitTwoArgOpen to not complain about this example.\n      Reported by Alexandr Ciornii,  RT #44554.\n\n    Minor Changes\n    * The line count emitted by the --statistics option is further broken down\n      by line content.\n\n    Minor Documentation Fixes:\n    * ValuesAndExpressions::ProhibitInterpolationOfLiterals.  Reported by\n      Debian in http://bugs.debian.org/542814,  RT #48936\n\n    Build Fixes:\n    * There wasn't a specific version given for the List::MoreUtils dependency\n      and we're using features that weren't avialable until 0.19.  So, we now\n      require version 0.19.  Noticed by John J. Trammell,  RT #48917.\n    * Some tests were tied to the specific \"true\" and \"false\" values that some\n      functions were returning.  Reported by Michael Schwern,  RT #43910.\n\n    Other News:\n    * Komodo version 5.1.1 now has built-in support for Perl-Critic,\n      if you have the Perl::Critic and criticism modules installed.\n      Both should be available through the ActiveState Perl Package\n      Manager ppm(1).\n\n[1.103] Released on 2009-08-03\n\n    Fix configure_requires prerequisite on Module::Build 0.34_02.\n\n[1.102] Released on 2009-08-03\n\n    Bug fixes:\n    * Works with PPI 1.205.  Yay for 5.10 support!\n    * Variables::RequireLexicalLoopIterators didn't work correctly on foreach\n      loops with labels.\n\n[1.101_003] Released on 2009-07-22\n[1.101_002] Released on 2009-07-21\n[1.101_001] Released on 2009-07-21\n\n    Changes summarized into 1.102 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.100] Released on 2009-07-17\n\n    This is a POD fix release to deal with issues identified by Test::POD\n    1.40.  There is no functional difference between this release and 1.098.\n    This is the last release of Perl::Critic that will be compatible with PPI\n    1.203.  PPI's parsing of for(each)? loops is changing in its next release\n    in an incompatible manner and there will be a release in the near future\n    to make Perl::Critic compatible with that change.\n\n[1.099_002] Released on 2009-06-27\n[1.099_001] Released on 2009-06-25\n\n    Experimental releases.  For exact details, see Changes on BackPAN.\n\n[1.098] Released on 2009-03-07\n\n    Some Exciting News:\n    The Perl Development Kit (PDK 8.0) from ActiveState now includes a\n    very slick graphical interface to Perl-Critic.  I highly recommend\n    that you check it out.  Here's a link to screenshots and docs:\n\n    http://docs.activestate.com/pdk/8.0/PerlCritic_gui.html\n\n    New Features:\n    * Violation coloring is now configurable via command line or profile. The\n      profile entries are color-severity-highest, -high, -medium, -low, or\n      -lowest. Numbers are accepted in lieu of named severities (e.g.\n      'color-severity-5' for 'color-severity-highest'), and 'colour' is\n      accepted in lieu of 'color'.\n    * Handling of unrecognized policy configuration items is now controlled by\n      the profile_strictness. The default is to warn about them. The previous\n      default was that they were fatal.\n    * -p is now a synonym for --profile.\n    * The --verbose option for perlcritic now supports a %C format that will\n      displays the class of PPI::Element that caused the violation.\n\n    Policy Changes:\n    * ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions\n      didn't include \"pbp\" in its default themes even though it is derived\n      from the book.  Now it does.  :]\n    * ErrorHandling::RequireCarping now allows a here document as the last\n      element if the \"allow_messages_ending_with_newlines\" option is true.\n    * Fix Subroutines::ProhibitAmpersandSigils so it allows \"defined(&x)\" as\n      well as \"defined &x\".  Patch from Kevin Ryde, RT #38855.\n    * Subroutines::ProtectPrivateSubs now has an \"allow\" option to specify\n      subroutines which are exempt from this policy.  RT #38678.\n      Additionally, a \"private_name_regex\" option has been added that allows\n      you to specify what a private subrouting name looks like.\n    * Subroutines::RequireArgUnpacking now has an \"allow_subscripts\" option\n      to allow array slices and elements.  RT #34009.\n    * Subroutines::RequireArgUnpacking now has an \"allow_delegation_to\" option\n      to allow the usual delegation idiom. Delegation to 'SUPER::' and\n      'NEXT::' are allowed by default.  RT #33839.\n    * Subroutines::RequireArgUnpacking no longer generates a false positive\n      for '\$\$_[]', which is an obfuscated way of saying '\$_->[]'.  RT #37713.\n    * ValuesAndExpressions::ProhibitMagicNumbers now has an\n      allow_to_the_right_of_a_fat_comma option, which defaults to true.  Note\n      that it currently only works /directly/ to the right of a fat comma.\n    * Variables::ProhibitMatchVars had its default themes changed to \"core\n      performance pbp\", instead of \"core bugs pbp\" because, while the match\n      variables make regular expressions slow, it doesn't cause them to not\n      work correctly.\n    * Variables::ProhibitPackageVars has had FindBin and Log::Log4perl added\n      to the default exemptions.\n    * Variables::ProhibitReusedNames now has an \"allow\" option to specify\n      names that can be reused.  It defaults to enabling \$self and \$class.  RT\n      #42767.\n    * Variables::RequireLocalizedPunctuationVars has a customizable set of\n      exemptions via the \"allow\" option.\n\n    New Developer Features:\n    * The guts of perlcritic have been moved to Perl::Critic::Command.  You\n      can invoke Perl::Critic::Command::run() to get the equivalent of running\n      the command.  (Note, however, this interface WILL change, so don't count\n      on the current one.)\n    * Modules have had a \"INTERFACE SUPPORT\" section added which states\n      whether the Perl::Critic developers consider the particular module is\n      public or not.  Any removal of functionality from a public module will\n      go through a deprecation cycle.  Non-public modules may have their\n      interfaces changed without notice.\n    * P::C::Policy now has an is_enabled() method.\n    * P::C::Violation now has an element_class() method.\n\n    Bug Fixes:\n    * CodeLayout::ProhibitTrailingWhitespace didn't notice cases where PPI\n      would produce instances of PPI::Token::Whitespace that contained\n      multiple lines.\n    * Subroutines::ProtectPrivateSubs no longer regards the exportable POSIX\n      subroutines whose names begin with underscore as private.  RT #38678.\n    * Subroutines::RequireArgUnpacking mishandled a complicated sitation with\n      \$_ being an array reference.  RT #39601.\n    * Variables::RequireLocalizedPunctuationVars now applies to subscripted\n      names.  RT #29384.\n\n    Internals:\n    * The guts of Build.PL and Makefile.PL have been rearranged.\n\n[1.097_002] Released on 2009-03-01\n[1.097_001] Released on 2009-03-01\n\n    Changes summarized into 1.098 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.096] Released on 2009-02-01\n\n    New Policies:\n    * ValuesAndExpressions::ProhibitSpecialLiteralHeredocTerminator\n\n    Policy Changes:\n    * Documentation::PodSpelling now has a stop_words_file option.\n    * Modules::ProhibitEvilModules now has a modules_file option.\n\n    Bug Fixes:\n    * ErrorHandling::RequireCarping will now allow a literal newline\n      as well as \"\\n\".  Fixed by Kyle Hasselbacher, RT #25046\n    * Fix InputOutput::ProhibitTwoArgOpen so it allows '-|' or '|-' as the\n      second of two arguments.  Patches from Kyle Hasselbacher and Leland\n      Johnson, RT #42384.\n    * InputOutput::RequireBracedFileHandleWithPrint applies to printf as well\n      as print.  Fixed by Kyle Hasselbacher, RT #42537.\n    * TestingAndDebugging::RequireUseStrict and\n      TestingAndDebugging::RequireUseWarnings are no longer fooled by a\n      block-scoped pragma.  RT #42310.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars allows for escaped\n      backslashes.  Fixed by Tom Wyant, RT #38530.\n    * Fix for problem in P::C::Document in dealing with underscores in\n      expressions like \"use 5.009_001\".  Patch by Kevin Ryde, RT #36570 and\n      #42089.\n    * Fix in extras/perlcritic.el for a radio button.  Patch by Kevin Ryde, RT\n      #42190.\n    * Fix distclean target in Makefile.PL.  Patch by Richard Soderberg,\n      RT #42088.\n    * Fix temporary files not being cleaned up after tests.  Patch by Kyle\n      Hasselbacher, RT #41443.\n    * Deal with changes in Pod::Parser v1.36 in test in t/05_utils_pod.t.\n\n    Documentation improvements contributed by Mark Grimes in response to RT\n    #41942.\n\n[1.095_001] Released on 2009-01-18\n\n    Changes summarized into 1.096 above.  For exact details, see Changes on\n    BackPAN.\n\n[1.094001] Released on 2009-01-01\n\n    Bug Fixes:\n    * Tests would fail on systems without Regexp::Parser installed.\n\n[1.094] Released on 2009-01-01\n\n    Incompatible Changes:\n    * The way that \"## no critic\" markers was refactored.  As\n      a result, we discovered that the syntax for the markers was pretty\n      vague.  If you didn't do it just right, it would disable all policies,\n      and not just the specific ones that you wanted.  So we've tightened this\n      up a bit.  If you followed the examples that have been in the docs for\n      the last couple years, then you should be fine.  But if you've been\n      using certain other variations in your \"## no critic\" markers, then you\n      might suddenly find yourself violating the new\n      ProhibtUnrestrictedNoCritic policy.  To fix this, just make sure your\n      Policy names appear in parentheses:\n\n        ## no critic Foo, Bar, Baz     # wrong!\n        ## no critic Foo Bar Baz       # wrong!\n\n\n        ## no critic (Foo, Bar, Baz)   # ok!\n        ## no critic qw(Foo Bar Baz)   # also ok!\n\n    * The deprecated \$FORMAT variables for Perl::Critic::Policy and\n      Perl::Critic::Violation no longer exist.  Use the corresponding\n      get_format() and set_format() functions instead.\n\n    New Policies:\n    * Miscellanea::ProhibitUnrestrictedNoCritic\n    * Miscellanea::ProhibitUselessNoCritic\n    * NamingConventions::Capitalization\n    * Subroutines::ProhibitReturnSort\n    * Variables::ProhibitReusedNames\n\n    Removed Policies:\n    * NamingConventions::ProhibitMixedCaseSubs and\n      NamingConventions::ProhibitMixedCaseVars have been moved to a separate\n      Perl-Critic-Deprecated distribution.  The\n      NamingConventions::Capitalization policy does everything they do, plus\n      more.\n\n    Policy Changes:\n    * BuiltinFunctions::ProhibitStringyEval now has an allow_includes option\n      that makes it behave (mostly) like Ricardo SIGNES'\n      Perl::Critic::Policy::Lax::ProhibitStringyEval::ExceptForRequire.\n    * InputOutput::RequireCheckedClose, InputOutput::RequireCheckedOpen, and\n      InputOutput::RequireCheckedSyscalls now all support autodie.\n      Unfortunately, autodie is currently treated like a module and not a\n      pragma, which means that the lexical scoping is not taken into account.\n    * InputOutput::RequireCheckedSyscalls now has an exclude_functions\n      parameter.\n    * Modules::ProhibitEvilModules now allows you to specify what the\n      description of a use of a bad module should be, to, say, suggest that\n      people use autodie instead of Fatal.\n    * Subroutine::ProhibitExcessComplexity violation descriptions now include\n      the name of the subroutine, thanks to Andreas Koenig, RT #40070.\n    * TestingAndDebugging::RequireUseStrict and\n      TestingAndDebugging::RequireUseWarnings now have equivalent_modules\n      parameters that allow you to designate other modules as being equivalent\n      to the strict and warnings pragmata.  This one is for all you Moose fans\n      out there.  :]\n\n    Bug Fixes:\n    * ControlStructures::ProhibitUnreachableCode would treat package\n      statements as unreachable.  Fixed by Kevin Ryde.  RT #41734\n    * Fix warning from InputOutput::ProhibitOneArgSelect when select was\n      called with no arguments.  RT #41926\n    * Miscellanea::RequireRcsKeywords couldn't find keywords after __END__\n      that didn't look like part of POD.\n    * Modules::RequireFilenameMatchesPackage would incorrectly complain about\n      programs.  Yet more greatness contributed by Schwern.  RT #39024.\n    * If a perlcriticrc file referred to a policy that wasn't installed and\n      the profile-strictness option was set to \"fatal\",\n      Perl::Critic::PolicyFactory fell over instead of reporting the\n      problematic policy name.\n\n    Miscellanea:\n    * Perl::Critic::Violation will automatically strip trailing periods\n      from your Policy description and explanation strings.  This ensures that\n      the punctuation is consistent with the format specified by the user via\n      the -verbose formatting options.\n\n    New Developer Features:\n    * Perl::Critic::Policy::prepare_to_scan_document() is now checked and a\n      Policy can disable itself for just a single document, which can speed\n      things up.\n\n[1.093_03] Released on 2008-12-11\n[1.093_02] Released on 2008-10-30\n[1.093_01] Released on 2008-09-07\n\n    Changes summarized into 1.094 above.  For exact details, see Changes in\n    1.093_003 on BackPAN.\n\n[1.092] Released on 2008-09-02\n\n    Bug Fixes:\n    * Fixed POD errors that were causing build failures.  Sorry\n      about that.\n\n[1.091] Released on 2008-09-01\n\n    New Policies:\n    * RegularExpressions::RequireDotMatchAnything\n\n    New Features:\n    * perlcritic now supports a -pager option, so you can more easily\n      send the output to your favorite pager.  You can set this option\n      on the command-line or in your .perlcriticrc file.  See the\n      perlcritic perldoc for more details.  Credit to Michael Schwern.\n    * The output from \"perlcritic -doc PATTERN\" will be automatically\n      sent to your pager if you have set the -pager option.\n\n    Policy Changes:\n    * CodeLayout::ProhibitQuotedWordLists no longer applies if the list\n      contains any non-words, by default.  A non-word is anything that does\n      not match /[\\w-]+/.  You can restore the former behavior by setting the\n      \"strict\" option.  RT #37886.\n    * CodeLayout::ProhibitQuotedWordLists also now applies to the import\n      arguments of a C<use> statement.  RT #24467.\n    * ErrorHandling::RequireCheckingReturnValueOfEval now recognizes ternary\n      left-sides as valid checks.\n    * RegularExpressions::RequireExtendedFormatting gains a\n      minimum_regex_length_to_complain_about option.  Also, regexes that\n      contain only word and whitespace characters are now exempt from this\n      policy, by default; you can make it complain about them by turning on\n      the new strict option.  Contributed by Michael Schwern.  RT #38531.\n    * TestingAndDebugging::ProhibitNoWarnings now supports a\n      allow_with_category_restriction option, thanks to Michael Schwern.\n      RT #38514.\n    * CodeLayout::ProhibitHardTabs now allows leading tabs in qw() word lists\n      and regexes with the /x modifier.  You can still configure this\n      policy to forbid all hard tabs, if you like.  RT #32440\n\n    Bug Fixes:\n    * perlcritic should now work under PAR.  RT #38380.\n    * URL for our repository in META.yml now works for anonymous\n      checkout.  The password is \"\" (empty).  RT #38628.\n    * color for high-severity violations is now magenta because\n      it is more redable than yellow on white backgrounds.  RT #38511.\n\n[1.090] Released on 2008-07-22\n\n    Bug Fixes:\n    * Test was incorrectly failing when Regexp::Parser wasn't installed.\n\n[1.089] Released on 2008-07-21\n\n    Minor Enhancements:\n    * -s is now a synonym for --single-policy.\n\n    Policy Changes:\n    * Subroutines::ProhibitBuiltinHomonyms now also prohibits subroutines\n      with the same name as a Perl keyword (e.g. if, foreach, while).\n      Inspired by RT #37632.\n    * Subroutines::ProtectPrivateSubs now allows expressions like\n      \"shift->_some_private_method();\".  Note that this *only* applies\n      to the \"shift\" function -- a private method call on the right of any\n      other bareword still causes a violation.  RT #34713.\n    * Subroutines::RequireFinalReturn now includes exec in the set of things\n      that mark a successful return.  RT #37672\n    * ValuesAndExpressions::ProhibitInterpolationOfLiterals now takes a\n      allow_if_string_contains_single_quote option.  Contributed by Ed\n      Avis <ed\@membled.com>.  RT #36125.\n    * ValuesAndExpressions::RequireInterpolationOfMetachars now supports a\n      rcs_keywords option to allow for the common case where those require\n      dollar signs.\n\n    Bug Fixes:\n    * BuiltinFunctions::ProhibitSleepViaSelect would complain if there were\n      three undefs as arguments to select(), but one of them was the timeout.\n      RT #37416.\n    * Reduced false positives in\n      RegularExpressions::ProhibitSingleCharAlternation.  Thanks to\n      Andy Lester and Elliot Shank test cases.\n    * RegularExpressions::ProhibitUnusedCapture would complain if there were\n      multiple captures used in a substitution, e.g. s/(.)(.)/\$2\$1/.\n    * Subroutines::ProhibitAmpersandSigils no longer complains about\n      \"sort &foo(...)\".\n    * Makefile.PL, Build.PL and other \".PL\" scripts which typically do not\n      have a shebang are no longer mistaken as modules.  This prevents\n      spurious warnings from Modules::RequireEndWithOne.  RT #20481.\n\n    Internals:\n    * Tests are now self compliant.\n\n[1.088] Released on 2008-07-04\n\n    New Policies\n    * ErrorHandling::RequireCheckingReturnValueOfEval\n\n    Policy Changes:\n    * ValuesAndExpressions::ProhibitLeadingZeros now accepts octal numbers\n      for the Unix permissions argument to chmod, dbmopen, mkdir, sysopen, or\n      umask, by default.  Use the \"strict\" option to get the old behavior.\n      RT #31977.\n    * Due to the consensus at YAPC::NA 2008,\n      Variables::ProhibitUnusedVariables default severity has been raised to\n      medium/3.\n\n    Minor Changes:\n    * The perlcritic \"--Version\" option is now \"--version\" in order to act\n      like the rest of the world.\n\n[1.087] Released on 2008-06-21\n\n    Policy Changes:\n    * CodeLayout::ProhibitParensWithBuiltins no longer complains about\n      sort(foo(\@x)).\n    * TestingAndDebugging::RequireUseWarnings will not complain about files\n      that contain a \"use 5.005\" statement or similar for perls prior to 5.6.\n      Lesson of the day: computer conferences where you can meet in the real\n      world can clarify conversations greatly.  Good to finally meet you Adam.\n    * InputOutput::ProhibitTwoArgOpen similarly will not complain if there's\n      a \"use/require 5.005\" statement in the file.  RT #34385.\n\n    Bug fixes:\n    * Perl::Critic can now critique a file named \"0\".  However, PPI will give\n      a parse error until the next version comes out.  Fixes RT #36127.\n    * Moved detection of the lack of any enabled Policies from P::C::Config\n      to Perl::Critic.  This was causing the perlcritic.t in Parrot to fail.\n      Note, however, there are plans afoot to change how Perl::Critic is\n      configured and things that depend upon that may break.  Please contact\n      users\@perlcritic.tigris.org and tell us how you're using P::C::Config\n      directly so that we can take your needs into account.\n\n[1.086] Released on 2008-06-12\n\n    Policy Changes:\n    * NamingConventions::ProhibitAmbiguousNames now specifies the name that\n      it had problems with in its violation descriptions.\n\n    Bug fixes:\n    * The color option wasn't being correctly set from a .perlcriticrc.\n      RT #36569.\n\n    Minor changes:\n    * --colour is now a synonym for --color.\n\n[1.085] Released on 2008-06-07\n\n    New Policies:\n    * Documentation::RequirePackageMatchesPodName\n\n    Policy Changes:\n    * Variables::ProhibitUnusedVariables detects a few more cases.  It's\n      still very limited, though.\n\n    Bug fixes:\n    * ControlStructures::ProhibitUnreachableCode didn't notice \"until\" was an\n      conditional expression.\n\n    Minor documentation updates.\n\n[1.084] Released on 2008-05-24\n\n    New Features:\n    * perlcritic now supports a --list-themes option.\n    * You can specify the maximum number of violations you want per Policy\n      per document.  Developers can give a default value for this for a\n      Policy by overriding default_maximum_violations_per_document().\n      See RequireUseStrict and ProhibitMagicNumbers for examples.\n\n    Policy Moved:\n    * The ValuesAndExpressions::ProhibitMagicNumbers policy has been moved\n      from Perl::Critic::More into the primary Perl::Critic distribution.\n\n    New Policies:\n    * Variables::ProhibitUnusedVariables (very dumb, limited initial\n      implementation.)\n    * ControlStructures::ProhibitLabelsWithSpecialBlockNames\n      Contributed by Mike O'Regan.  Kickin' ass, Mike.\n\n    Policy Changes:\n    * ControlStructures::ProhibitUnreachableCode now handles the perl 5.10\n      \"//\" and \"err\" operators.  RT #36080\n    * InputOutput::RequireBriefOpen now ignores opens of STDIN, STDOUT,\n      and STDERR.  You're generally trying to make long-lasting global\n      effects when manipulating these.  (RT #35774)\n    * RegularExpressions::ProhibitUnusualDelimiters now supports an\n      \"allow_all_brackets\" option.\n    * RegularExpressions::RequireBracesForMultiline now supports an\n      \"allow_all_brackets\" option.\n    * TestingAndDebugging::RequireUseStrict now accepts \"use Moose::Role\"\n      as equivalent to \"use strict\".  (RT #34838)\n    * TestingAndDebugging::RequireUseWarnings now accepts \"use Moose::Role\"\n      as equivalent to \"use warnings\".  (RT #34838)\n    * ValuesAndExpressions::ProhibitMagicNumbers now accepts constant\n      subroutines.\n    * Variables::ProhibitMatchVars no longer detects \"use English;\".\n      This problem is detected in a more clear way by\n      Modules::RequireNoMatchVarsWithUseEnglish.\n    * Variables::ProhibitPerl4PackageNames no longer complains about\n      \$'/\$POSTMATCH.  RT #36059\n    * Variables::RequireLocalizedPunctuationVars now allows the use of \"my\".\n      RT #33937\n\n    Bug Fixes:\n    * No longer falls over if a single file has a parse error.\n\n    New Developer Features:\n    * If a document specifies a minimum perl version, e.g. \"use 5.008003\",\n      P::C::Document::highest_explicit_perl_version() will tell you what it\n      is.\n    * The parameter to P::C::Policy::initialize_if_enabled is now a\n      P::C::PolicyConfig object instead of a hash reference.\n\n    Minor Changes:\n    * LOTS of documentation updates.\n    * A few more statistics are emitted by perlcritic with the --statistics\n      option.\n    * perlcritic --profile-proto now includes policy abstracts in its\n      output.\n\n    Prerequisites:\n    * Now depends upon PPI 1.203.\n    * New dependency upon version.\n\n[1.083_006] Released on 2008-05-20\n[1.083_005] Released on 2008-05-19\n[1.083_004] Released on 2008-05-18\n[1.083_003] Released on 2008-05-17\n[1.083_002] Released on 2008-05-17\n[1.083_001] Released on 2008-04-13\n\n    Changes summarized into 1.084 above.  For exact details, see Changes in\n    1.083_006 on BackPAN.\n\n[1.082] Released on 2008-03-08\n\n    New Features:\n    * A new metadata system for defining policy parameters/options has been\n      added.  This makes the life of policy authors easier because\n      configuration validation and parsing can be taken care of\n      automatically, in most cases.  This allows greater integration with\n      IDEs and allows the perlcritic \"--profile-proto\" option to produce\n      better output.\n\n      Note: This change does NOT REQUIRE ANY CHANGES to policies outside of\n      this distribution; they should continue to work as is.  However, use\n      of this facility can reduce the size of your code and provide the\n      means for tools to discover more about your policy.  If this change\n      does break any of your policies, please let us know.\n\n      To learn how to take advantage of this facility, read\n      Perl::Critic::DEVELOPER and look at the source of any of the\n      configurable policies included in this distribution.\n\n      There is a discussion of the design considerations for this facility in\n      the source repository under doc/PolicyParameter_Notes.pod.\n\n    * Added support for \"criticism-fatal\" option in your perlcriticrc\n      file.  This will be used by the criticism pragma to cause execution\n      to abort if the file contains any violations.\n\n    New Policy:\n    * Module::RequireNoMatchVarsWithUseEnglish\n\n    Policy Changes:\n    * Added an allow_last_statement_to_be_comma_separated_in_map_and_grep\n      option to ValuesAndExpressions::ProhibitCommaSeparatedStatements.\n      Partial response to http://rt.cpan.org/Public/Bug/Display.html?id=27654.\n    * ControlStructures::ProhibitPostfixControls gains the ability to have\n      the flow control statements allowed to be modified.  This in response\n      to RT #29540.\n    * TestingAndDebugging::RequireUseStrict now accepts \"use Moose\" as\n      equivalent to \"use strict\".\n    * TestingAndDebugging::RequireUseWarnings now accepts \"use Moose\" as\n      equivalent to \"use warnings\".\n\n    Bug Fixes:\n    * RT #31281 perlcritic doesn't recognize \"#!/bin/env perl\" shebang\n    * Replace usage of Unicode property escapes with POSIX character classes\n      order to restore 5.6 compatability.\n    * RT #30388 ValuesAndExpressions::ProhibitVersionStrings complained\n      about numbered directories in \"use lib\".\n    * Fixed handling of badly behaved spelling programs in PodSpelling.\n\n[1.081_006] Released on 2008-03-02\n[1.081_005] Released on 2007-12-29\n[1.081_004] Released on 2007-12-20\n[1.081_003] Released on 2007-12-16\n[1.081_002] Released on 2007-12-16\n[1.081_001] Released on 2007-12-15\n\n    Changes summarized into 1.082 above.  For exact details, see Changes in\n    1.081_006 on BackPAN.\n\n[1.080] Released on 2007-11-11\n\n    New Features:\n    * Allow a \"## no critic\" statement after a shebang on line 1 of a\n      file.  This allows users to block violations that apply to\n      whole files and still allow shebangs.\n\n    New Policies: (funded by a Perl Foundation grant)\n    * InputOutput::ProhibitExplicitStdin\n    * RegularExpressions::ProhibitFixedStringMatches\n    * RegularExpressions::RequireBracesForMultiline\n    * RegularExpressions::ProhibitUnusualDelimiters\n    * RegularExpressions::ProhibitUnusedCapture\n    * RegularExpressions::ProhibitComplexRegexes\n    * RegularExpressions::ProhibitSingleCharAlternation\n    * RegularExpressions::ProhibitEscapedMetacharacters\n    * RegularExpressions::ProhibitEnumeratedClasses\n    * InputOutput::RequireBriefOpen\n    * InputOutput::RequireCheckedSyscalls\n\n    Other New Policies\n    * ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions\n\n    Policy Changes:\n    * Variables::ProhibitConditionalDeclarations now permits you to local-ize\n      variables in conditional declarations.  This makes sense, since\n      C<local> is actually a variable modifier, rather than a declaration.\n      Thanks to David Golden for reporting this.\n\n    New Developer Features:\n    * Perl::Critic::Utils::PPIRegexp encapsulates interaction with\n      the PPI Regexp token classes.  Those classes have very sparse\n      APIs, so this package hides away the ugly fiddling with PPI\n      internals.\n    * Added a new optional_modules parameter for the .run syntax.\n\n    Bug fixes:\n    * PPI::Structure::List can now contain multiple children,\n      so P::C::Utils::parse_arg_list() needs to handle it.\n\n      This was done in the process of fixing\n      http://rt.cpan.org/Ticket/Display.html?id=24924, which was a problem\n      with TestingAndDebugging::RequireTestLabels.\n\n    * ValuesAndExpressions::ProhibitLongChainsOfMethodCalls wasn't resetting\n      chain length when it ran into the end of a sub-expression.\n\n      http://rt.cpan.org/Public/Bug/Display.html?id=30040\n\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements was reporting\n      false positives when builtins which accept both no and multiple\n      arguments were involved.\n\n      http://rt.cpan.org/Public/Bug/Display.html?id=27654\n\n    Internals:\n    * Removed all use of Carp in favor of exceptions.\n\n    Prerequisites:\n    * Now requires PPI 1.201.  A number of workarounds for PPI bugs have been\n      removed.\n    * New dependency upon Exception::Class.\n\n    Installation:\n    * Use Devel::CheckOS to see whether Perl::Critic is being installed on\n      a Solaris system and warn about tar(1) chopping file names off if it\n      is.\n\n[1.079_003]  Released on 2007-10-22\n[1.079_002]  Released on 2007-10-21\n[1.079_001]  Released on 2007-10-09\n\n    Changes summarized into 1.080 above.  For exact details, see Changes in\n    1.079_003 on BackPAN.\n\n[1.078]  Released on 2007-09-19\n\n    Restore Perl::Critic::TestUtils::should_skip_author_tests() and\n    get_author_test_skip_message().  Some Perl::Critic add-on distributions\n    are using them.\n\n[1.077]  Released on 2007-09-15\n\n    Note: if you don't have any problems installing Perl::Critic 1.076, there\n    is no need to upgrade to this version.  There are no functionality\n    changes.  This release only contains changes related to installation that\n    a few people were experiencing.\n\n    Minor changes:\n    * Removed build-time use of Readonly, again, due to problems some people\n      were having when trying to compile the code by hand, rather than using\n      CPAN(PLUS)?.\n    * Don't run author tests if there's a .svn directory present because\n      users who grabbed the code from the source repository were executing\n      them and getting failures.\n    * Don't generate optional, module-hiding test wrappers if author tests\n      are not enabled.\n\n\n[1.076]  Released on 2007-09-07\n\n    It appears from reports on the 1.075_001 release that the subroutine\n    sigils were indeed the problem.  Release to the general populace.\n\n\n[1.075_001]  Released on 2007-09-06\n\n    Bug Fixes:\n    Undo the changes in 1.073 and 1.074.  Instead, stop using the subroutine\n    sigil in import and export lists.  It is suspected that the problem lies\n    with Exporter stripping off ampersands.\n\n[1.074]  Released on 2007-09-04\n\n    Bug Fixes:\n    Repeat the Makefile.PL change on\n    t/generate_without_optional_dependencies_wrappers.PL.\n    I love CPAN Testers.\n\n[1.073]  Released on 2007-09-04\n\n    Bug Fixes:\n    Work around problems with the combination of Exporter & Readonly in\n    Makefile.PL on some machines.\n\n[1.072]  Released on 2007-09-03\n\n    Bug Fixes:\n    * The Makefile generated by Makefile.PL was not syntactically correct\n      according to some versions of Solaris.  Thanks to Diab Jerius\n      (DJERIUS) for discovery and testing.\n    * Fixed mis-definition of \"quiet\" value for the \"--profile-strictness\"\n      option.\n    * Enhanced testing with the absence of optional modules.\n\n[1.071]  Released on 2007-08-24\n\n    The \"Brown Paper Bag\" Release\n\n    Bug Fixes:\n    * Tests would not pass in environments that did not have all optional\n      dependencies installed.\n\n[1.07]  Released on 2007-08-21\n\n    New Policies: (funded by a Perl Foundation grant)\n    * BuiltinFunctions::ProhibitBooleanGrep\n    * BuiltinFunctions::ProhibitComplexMappings\n    * Documentation::PodSpelling\n    * InputOutput::ProhibitJoinedReadline\n    * Subroutines::ProhibitManyArgs\n    * Subroutines::RequireArgUnpacking\n    * ValuesAndExpressions::ProhibitImplicitNewlines\n    * Variables::RequireLocalizedPunctuationVars\n\n    Other New Policies\n    * Subroutines::ProhibitNestedSubs\n\n    New Features:\n    * The \"perlcritic --profile-proto\" output now includes the \"add_themes\"\n      parameter for each policy.\n    * The perlcritic \"--strict-profile\" option has been replaced with a\n      \"--profile-strictness\" option.  This new option takes values of \"warn\"\n      (the default), \"fatal\", and \"quiet\", which controls what happens with\n      ignorable problems in a .perlcriticrc file.\n\n    New Developer Features:\n    * Perl::Critic::Policy now has an overridable initialize_if_enabled()\n      method which allows a Policy to perform expensive initialization after\n      it has been determined whether the user has it enabled or not.  Also,\n      this method allows a Policy to say that it should be disabled\n      regardless of what the user says.\n\n      Actually, use of this method is now encouraged over using a\n      constructor.\n\n    Other Stuff:\n    * Now requires the Readonly module in order to be more self-compliant.\n\n[1.061]  Released on 2007-07-24\n\n    Bug Fixes:\n    * Fix P::C::Theme-- Exporter in Perl 5.6 does not export import(), so you\n      must subclass it.  *sigh*\n    * Fix P::C::Config::_validate_and_save_theme()-- eval of an empty string\n      does not reset \$\@/\$EVAL_ERROR in Perl 5.6.\n\n    Big thanks to Anirvan Chatterjee for identifying and helping debug these\n    issues.\n\n[1.06]  Released on 2007-06-27\n\n    New Features:\n    * perlcritic now emits errors for all the problems it can find for the\n      global options in the command-line parameters and .perlcriticrc file,\n      rather than bailing on the first one it encounters.\n\n    * perlcritic now has a \"--strict-profile\" option which will make warnings\n      about problems in a profile fatal.\n\n    * perlcritic now has a \"--statistics-only\" option which suppresses the\n      display of individual violations and only shows the additional output\n      produced by the \"--statistics\" option.\n\n    Feature requests:\n    * A value for \"color\" can now be specified in a .perlcriticrc.\n      http://rt.cpan.org/Ticket/Display.html?id=24877\n\n    New Policies:\n    * ValuesAndExpressions::ProhibitQuotesAsQuotelikeOperatorDelimiters\n      As suggested in http://rt.cpan.org/Ticket/Display.html?id=23290.\n    * ValuesAndExpressions::ProhibitLongChainsOfMethodCalls\n    * Modules::ProhibitExcessMainComplexity\n      As suggested in http://rt.cpan.org/Ticket/Display.html?id=24699\n\n    Minor changes:\n    * The perlcritic \"--profile-proto\" option now emits the short names for\n      policies, rather than the full ones.\n\n    * The \"-profileproto\" and \"-singlepolicy\" options have been renamed to\n      \"-profile-proto\" and \"-single-policy\" in order to make the growing\n      number of command-line options comprehensible.  The change of\n      \"singlepolicy\" also affects your F<.perlcriticrc> file.\n\n[1.053]  Released on 2007-06-02\n\n    *DEVELOPMENT RELEASE*\n\n    Bug Fixes:\n    Fixed bug in 15_statustics.t test script, which caused the build\n    to fail on machines that don't have Perl::Tidy installed.\n\n[1.052]  Released on 2007-06-01\n\n    *DEVELOPMENT RELEASE*\n\n    New Features:\n    * perlcritic now emits a summary about the scanned code when enabled by\n      the \"-statistics\" option.\n\n    Policy Enhancements:\n    * InputOutput::ProhibitBacktickOperators can now be configured to only\n      check in void contexts.\n\n    Bug Fixes:\n    * 27073: False positive in RequireUpperCaseHeredocTerminator\n    * 27065: CodeLayout::ProhibitTrailingWhitespace breaks under Perl 5.6.1\n    * 26462: ControlStructures::ProhibitCascadingIfElse pod typo\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements was complaining\n      about multiple values in the list to be iterated over by a foreach loop.\n    * Corrected PBP page numbers for some policies (Quinn Weaver).\n\n[1.051]  Released on 2007-04-12\n\n    *DEVELOPMENT RELEASE*\n\n    No new policies.\n    No particular bug fixes.\n\n    Internals:\n    * Added several new utility functions to support the StricterSubs distro.\n      Also, some of the existing functions in Perl-Critic-Utils have\n      changed in ways that might break your custom policies.\n\n    Miscellanea:\n    * Updated Emacs plugin (Courtesy Josh ben Jore).\n      See extras/perlcritic.el for details.\n    * Added copy of BBEdit plugin (Courtesy of Josh Clark).\n      See extras/perl_critic_for_bbedit-1_0.zip for details\n\n[1.05]  Released on 2007-03-19\n\n    Bug Fixes:\n    * 25557: t/20_policy_prohibittrailingwhitespace.t fails on Perl 5.8.0\n\n[1.04]  Released on 2007-03-18\n\n    Bug Fixes:\n    * 25008: Subroutines::RequireFinalReturn should allow \"throw\"\n    * 25085: False Positive - Heredoc terminator must be quoted\n    * 18423: VERSION check does not notice Readonly::Scalar version\n    * 25449: Proposal of \$VERSION declaration (DUPLICATE)\n\n    New Policies:\n    * CodeLayout::ProhibitTrailingWhitespace\n    * ValuesAndExpressions::ProhibitCommaSeparatedStatements\n    * Variables::ProhibitPerl4PackageNames\n\n    Policy Enhancements:\n    * Subroutines::RequireFinalReturn can now be configured to recognize\n      your custom functions that behave like \"die\" or \"exit\".\n    * Documentation::RequirePodSections can be configured to match\n      Module::Starter:PBP or to really match the PBP book.\n\n[1.03]  Released on 2007-02-13\n\n    Bug Fixes:\n    * Fixed a few more problems with the %f, %F, and %r format escapes.\n    * I forgot to put Conway's perlcriticrc file in the MANIFEST. Sorry.\n\n    Interface Changes:\n    * Perl::Critic::Utils automatically exports everything.  However,\n      this is deprecated.  In the future, you must request your exports.\n\n    Policy Changes:\n    * Duplicate violations of RequireExcplicitPackage are now squelched,\n      in the same way as RequireUseStrict and RequireUseWarnings.\n\n[1.02]  Released on 2007-02-11\n\n    Bug Fixes:\n    * \"undef\" incorrectly triggered ProhibitMutatingListFunctions.\n    * 24876: %f and %F escapes not working in custom \"verbose\" format strings.\n    * 24875: Documentation bug in TestingAndDebugging::ProhibitNoStrict\n\n    New Policies:\n    * InputOutput::RequireCheckedOpen\n    * InputOutput::RequireCheckedClose\n\n    Other Cool Stuff:\n    * Added Conway's own suggested Perl::Critic configuration as\n      examples/perlcriticrc-conway.\n\n    * See the examples/ directory for some neat demonstrations of using\n      the Perl::Critic API. Contributed by Elliot Shank.\n\n    Interface Changes:\n    * Perl::Critic::Utils no longer exports anything by default.  Policies\n      outside the distribution will need to specify what exactly they need\n      from this module.  There are a number of tags that can be used in\n      addition to individual imports.\n\n[1.01]  Released on 2007-01-24\n\n    PRODUCTION RELEASE:  You may now consider the public Perl::Critic\n    API as \"stable.\"  Future minor releases will focus on bug fixes,\n    new policies, and internal refactoring.\n\n    Bug Fixes:\n    * Fixed memory leak.  This was reported by the Parrot team at\n      http://rt.perl.org/rt3/Ticket/Display.html?id=41230\n\n[0.23]  Released on 2007-01-19\n\n    Bug Fixes:\n    * 23994: Test 56 in t/05_utils.t of Perl::Critic v0.22 fails\n    * 24005: test 95 in t/13_bundled_policies fails in 0.22\n\n\n    Groovy New Features:\n    * Added '%F' to the Violation format specifications.  This will\n      give you just the name of file where the violation occurred\n      (i.e. without the path).\n\n    * Improved validation of .perlcriticrc file.  An invalid\n      default setting will now cause a fatal exception. A\n      strange-looking policy name will cause a warning.\n\n\n    Interface Changes:\n    * The syntax for theme expressions has changed.  Instead of using\n      mathematical operators qw(+ * -) you must now use the logical\n      operators qw(|| && !).  See the Perl::Critic docs for more info.\n\n    * The \@GLOBALS and \@BUILTINS variables are no longer exported by\n      Perl::Critic::Utils.  Use the is_perl_global() and is_perl_builtin()\n      functions instead.\n\n    * Perl::Critic::Policy::policy_parameters() has bee renamed to\n      Perl::Critic::Policy::supported_paramters().  This was an\n      undocumented feature anyway, so it shouldn't affect anyone.\n\n\n    Other Internal Changes:\n    * Perl::Critic now requires B::Keywords v1.05 or newer.\n\n    * A few internal classes have been refactored.  As a result,\n      Set::Scalar is no longer a required dependency.\n\n\n[0.22]  Released on 2006-12-15\n\n    New Features:\n    * Introduced named severity levels: gentle, stern, harsh, cruel, brutal\n      You can use these named levels instead of the numeric ones.\n      For example: \"perlcritic --severity=cruel MyModule.pm\"\n      Or just:     \"perlcritic --cruel MyModule.pm\"\n\n    * For perlcritic, the \"-List\" option has been renamed to\n      \"-profileproto\".  The output now includes the names of the\n      parameters that each Policy supports, if any.\n\n    * Improved validation of Policy parameters in your F<.perlcriticrc>\n      Any invalid parameter now causes a fatal exception.\n\n    Major Changes:\n    * Reassigned themes for most policies.  Now there are fewer\n      themes and they are organized around programming concepts\n      instead of severity levels.  If you have assigned your own\n      themes to any Policies, they should still work as expected.\n\n    Policy Changes:\n    * ErrorHandling::RequireCarping will not complain if it can figure\n      out that the die or warn message will always end in a newline\n      (\"\\n\").  The idea is that, if you put the newline there, you\n      don't indend for there to be any file/line/stack information\n      emitted, in which case you really don't want carp/croak.\n\n      You can restore the old strict behavior by giving the policy\n      a false value for \"allow_messages_ending_with_newlines\" in your\n      configuration.\n\n    Misc Changes:\n\n    Added single-letter uppercase alternatives for some perlcritic options.\n\n[0.21_01] Released on 2006-12-03\n\n    New Policies:\n    * TestingAndDebugging::ProhibitProlongedStrictureOverride\n    * ControlStructures::ProhibitMutatingListFunctions\n\n    New Features:\n    * Say \"perlcritic -List\" to get an expanded listing of all Policies.\n      The format is suitable for use as your .perlcriticrc file.\n    * Say \"perlcritic -doc PATTERN\" to get the documentation for all\n      Policies that match m/PATTERN/imx.  This is a little easier than\n      typing in the full name of the Policy module with \"perldoc\".\n    * Say \"perlcritic --singlepolicy PATTERN\" to use one and only one\n      policy.\n    * Can now specify exceptions to Variables::ProhibitPackageVars,\n      for packages like File::Find that only interface through\n      package variables.\n\n    Bug Fixes:\n    * 21713 false positive for parens used with substr and unpack.\n    * 22890 allow Rcs keywords in POD.\n\n    Internals:\n    * Testing system overhauled.  Details on the Policy/subtest\n      framework is in t/run.t.\n    * Added Perl::Critic::Utils::words_from_string.  This is safer\n      than plain old C<split /\\s+/>.\n\n[0.21]  Released on 2006-11-05\n\n    New Policies:\n    * BuiltinFunctions::ProhibitReverseSortBlock\n    * BuiltinFunctions::ProhibitVoidGrep\n    * BuiltinFunctions::ProhibitVoidMap\n    * CodeLayout::RequireConsistentNewlines\n    * Modules::RequireFilenameMatchesPackage\n    * TestingAndDebugging::RequireTestLabels\n    * ValuesAndExpressions::ProhibitMismatchedOperators\n\n    New Features:\n    * Introduced policy \"themes.\"  Themes are arbitrary names that can\n      be used to identify a group of related Policies.  You can select\n      your favorite policies by combining themes in a mathematic expression\n      such as \"pbp * (danger + risky)\".  See POD for details.\n    * perlcritic output is colorized if you have Term::ANSIColor.  This\n      only works on non-Win32 platforms.  Use -nocolor switch to disable.\n    * Say \"perlcritic -count\" to get just the the total number of\n      violations per file.  Use this feature to quickly identify hot-spots.\n    * Use the -only switch to choose only from policies mentioned in your\n      .perlcriticrc file.  This is useful if you usually only want to\n      work with a small subset of the policies.\n    * Default values for most of the perlcritic and Perl::Critic options\n      can now be defined in your .perlcriticrc file.  See POD for details.\n\n    Bug Fixes:\n    * 21236: wrong page number for \"printing to filehandles\"\n    * 21916: File handle ... wrong page reference in PBP [DUPE]\n    * 21714: false positive for capture var used in ternary condition\n    * 21718: No skip for File::Slurp in includes.t\n    * ProhibitBarewordFilehandles doesn't complain if you open\n      STDIN, STDOUT or STDERR.\n    * Parrot 40564: Subroutines::RequireFinalReturn should allow die,\n      exit, etc.\n    * Each \"for\" and \"foreach\" loop now adds one point to the McCabe\n      complexity score.\n\n    Other Stuff:\n    * The internals of Perl::Critic have been significantly refactored,\n      but should still be compatible with existing third-party Policies.\n    * Added author-only tests to the release, but disabled by default\n    * New Perl::Critic::Utils::shebang_line() method\n    * Support for filename-based policies\n    * Additional prerequisite: Set::Scalar\n    * Now requires PPI version 1.118\n\n[0.20]  Released on 2006-09-10\n\n    Perl::Critic now requires PPI version 1.117, which fixes\n    several bugs that were introduced in version 1.116.\n\n    Bug Fixes:\n    * 21079: grep clears \@SITE_POLICIES\n    * 21352: Test failures with PPI 1.117\n    * 11365: sub DESTROY detected as a builtin homonym\n\n[0.19]  Released on 2006-08-20\n\n    New Policies:\n    * BuiltinFunctions::ProhibitStringySplit\n    * ControlStructures::ProhibitDeepNests\n    * RegularExpressions::ProhibitCaptureWithoutTest\n    * Variables::RequireLexicalLoopIterator\n\n    New Features:\n    * \"perlcritic -quiet\" suppresses the \"source OK\" message.\n    * Variables::ProhibitPunctuationVars is now configurable.\n\n    Bug Fixes:\n    * 20965: \"Hard tabs used at\" shouldn't check __DATA__\n    * 21070: ProhibitNoisyQuotes hates overload\n    * Punctuation variables are now exempt from ProhibitLocalVars\n\n    Other Stuff:\n    * Test coverage is now over 95%\n\n[0.18_01]  Released on 2006-08-06\n\n    New Policies:\n    * Variables::RequireNegativeIndices\n    * InputOutput::ProhibitInteractiveTest\n    * ErrorHandling::RequireCarping\n\n    Bug Fixes:\n    * RequireTidyCode tests fail if user has custom .perltidyrc file\n    * 20612: RequirePerlTidy was ignoring HEREDOCs\n    * 20659: __END__ statement considered \"unreachable\"\n    * Fix for PPI::XS (no C<use overload '\"\"'> support)\n    * Support for 'goto' in ProhibitAmpersandSigils and\n      Subroutines::RequireFinalReturn\n\n    Performance Enhancements:\n    * Introduced Perl::Critic::Document class.  This is a facade for\n      PPI::Document which internally caches search results.  This\n      reduces the running time by about 35%.  The facade should be\n      invisible, unless you are doing something really sneaky.\n    * Extraction of the 'diagnostics' information is postponed\n      until it is really needed.  Speedup has not been measured.\n    * Calls to helper-subs have been reordered for maximum efficiency.\n\n    Other Cool Stuff:\n    * Includes updated version of perlcritic mode for emacs.  See\n      \"extras/perlcritic.el\" for details.\n\n[0.18]  Released on 2006-07-16\n\n    Bug Fixes:\n    * 14855: Home discovery is dangerously naive.\n    * 20060: Incorrect page numbers in ProhibitLeadingZeros\n      and RequireNumberSeparator policies.\n    * 20068: .perlrc file - inconsistent documentation\n    * 20254: \"use vars qw(\@EXPORT_OK)\" not recognized\n    * 20463: No-case heredoc terminator incorrectly detected as lower case.\n    * ProhibitOneArgBless doesn't understand \"bless {} => \$class;\"\n    * ProhibitExcessComplexity doesn't count 'while' and 'until' stmnts\n    * ProhibitLeadingZeros was falsely hits '.0456'\n\n    Enhancements:\n    * If File::HomeDir is available, we use it to locate the\n      .perlcriticrc file.  This should help make Perl::Critic\n      more portable to Win32 platforms.  If File::HomeDir is\n      not installed, we resort to looking at the usual\n      environment variables.\n\n    Other Stuff:\n    * Added \"perlcritic.el\", which is a super-cool emacs minor-mode\n      that runs perl-critic on the current buffer and returns the\n      results in a sexy hot-linked \"compiler\" window.  You can run\n      it on demand, or have it run automatically every time you\n      save the buffer.  You can find this in the extras/ directory.\n      Thanks to Josh ben Jore for contributing this.\n\n    * Moved \"Perl::Critic::TestUtils\" into the installed build.  This\n      module is only used for unit-testing Perl::Critic, but we\n      are putting it in the installation so folks who want to\n      extend Perl::Critic can make use of it.\n\n[0.17]  Released on 2006-06-13\n\n    Bug Fixes:\n    * 19836: Perl-Critic0.16 fails tests during install.  This was\n      caused by a bug in version 3.01 of Module::Pluggable.  See\n      http://rt.cpan.org/Ticket/Display.html?id=19857 for details.\n    * Fixed bug in no-critic pragma parser.\n\n    New Policies:\n    * ValuesAndExpressions::ProhibitEscapedCharacters\n    * BuiltinFunctions::RequireSimpleSortBlock\n\n    Enhancements:\n    * Perl::Critic can export critique() as a static function.  This\n      may appeal to folks who dislike the object-oriented interface.\n\n[0.16]  Released on 2006-05-14\n\n    Enhancements:\n    * Perl::Critic->critique() now accepts a PPI::Document as the\n      argument.  This feature creates an additional dependency on\n      Scalar::Util, but that shouldn't be a problem because it is\n      included with List::Util, which we already use.\n\n    Miscellanea:\n    * Increased PPI dependency from v1.110 to v1.112\n\n[0.15_03] Released on 2006-05-07\n\n    Bug Fixes:\n    * The \"## no critic\" feature is now implemented without eval-ing\n      the code.  This keeps Perl::Critic pure and safe :)\n    * 19082: Page number for AUTOLOAD is incorrect\n\n    New Policies:\n    * ControlStructures::ProhibitUnreachableCode (by Peter Guzis)\n    * Modules::ProhibitAutomaticExportation\n    * ValuesAndExpressions::ProhibitVersionStrings\n\n[0.15_02] Released on 2006-04-26\n\n    Bug Fixes:\n    * Reimplemented the '##no critic' pragmas to have effect on the\n      line where the violation is reported, not on the line where\n      the candidate element lives.  This is because some policies\n      may report violations that are nowhere near the element that\n      is being evaluated.\n    * RequireUseStrict, RequireUseWarnings, and RequireExplcitPackage\n      all emit violations for _every_ statement that violates the\n      Policy.  This closes a loophole that allowed you to circumvent\n      the Policy by using '## no critic' on just the first statement\n      that violated the policy.\n    * Fixed the workaround for the magic shebang that is inserted\n      by EU::MM and M::B.  This had stopped working around version 13.\n    * Fixed -noprofile option on 'perlcritic'.  This also had stopped\n      working at some point.\n\n[0.15_01] Released on 2006-04-16\n\n    Enhancements:\n    * Added diagnostic messages if the .perlcriticrc contains entries\n      for Policy modules that don't seem to exist.\n    * Now you can specify which policies to disable with the\n      \"## no critic\" pseudo-pragmas.  This feature is still\n      experimental.  See docs for details.\n    * perlcritic's directory searching now skips backup files, such\n      as *.swp, *.bak and *~.  It also ignores version control system\n      directories, and the blib directory in module build directories.\n\n    Bug Fixes:\n    * 18386: Bad example in POD for Documentation::RequirePodSections\n    * 18670: Test failure if Perl::Tidy is not installed\n    * 18698: Policy idea ProhibitUniversalFunctions (see New Policies)\n    * RequireInterpolationOfMetachars falsely hit strings like 'foo=s\@'\n      which are commonly used with Getopt::Long.\n\n    New Policies:\n    * BuiltinFunctions::ProhibitUniversalCan (by Chris Dolan)\n    * BuiltinFunctions::ProhibitUniversalIsa (by Chris Dolan)\n\n    Miscellanea:\n    * All spurrious options for `perlcritic` are now fatal.\n    * Changed several of the -verbose formats to be more readable.\n    * Explicit -severity option now overrides -[12345] shortcuts instead\n      of being the other way around.\n\n\n\n[0.15] Released on 2006-03-26\n\n    Bug Fixes:\n    * 17964: Insists my code is not tidy (may not be fixed for all cases)\n\n[0.14_02] Released on 2006-03-19\n\n    Bug Fixes:\n    * 15653: False positive in OneArgSelect (fixed for real this time)\n\n    New Policies:\n    * ClassHierarchies::ProhibitAutoloading\n    * Documentation::RequirePodSections\n    * InputOutput::RequireBracedFileHandleWithPrint\n    * ValuesAndExpressions::ProhibitMixedBooleanOperators\n    * Variables::RequireInitializationForLocalVars\n\n[0.14_01] Released on 2006-03-05\n\n    Bug Fixes:\n    * 14731: False positive: Builtin function called with parens\n    * 17554: False positive in CodeLayout::RequireTrailingCommas\n\n    New Policies:\n    * ClassHierarchies::ProhibitExplicitISA\n    * InputOutput::ProhibitReadlineInForLoop\n    * Miscellanea::ProhibitFormats\n    * Miscellanea::ProhibitTies\n    * Variables::ProhibitConditionalDeclarations\n\n[0.14] Released on 2006-01-29\n\n    More documentation edits.\n\n    New Policies:\n    * Documentation::RequirePodAtEnd\n    * Subroutines::ProtectPrivateSubs\n    * Variables::ProhibitMatchVars\n    * Variables::ProtectPrivateVars\n\n    Bug Fixes:\n    * 15295: \"## no critic\" pragmas too aggresive on compound statements.\n    * t/01_config.t failed in the presence of third-party policies\n\n[0.13_05] Not released\n\n    More documentation edits.\n\n    Implemented workaround for failing pod_coverage tests.\n\n    Bug Fixes:\n    * 16906:  tr/// created false-postives with RegularExpression polices.\n\n[0.13_04] Released on 2005-12-31\n\n    Moved DEVELOPER.pod file into the Perl/Critic dir.\n\n    More documentation edits.\n\n[0.13_03] Released on 20051230\n\n    perlcritic now prints 'source OK' if it doesn't find any\n    violations.  This gives folks a warm fuzzy feeling.\n\n    Tweaked some test cases that were failing on my Solaris\n    environment at work.\n\n[0.13_02] Released on 2005-12-29\n\n    Fixed Config to recognize fully-qualified module names in the\n    .perlcriticrc file.\n\n    Various documentation edits.\n\n[0.13_01] Released on 2005-12-28\n\n    Replaced 'priority' concept with 'severity'.  Now each Policy module\n    has a predefined severity level ranging from 1 to 5.  By default,\n    perlcritic only reports the most severe violations.  You can adjust\n    the severity threshold at the command line, and you can change\n    the severity for any Policy using the config file.\n\n    Chris implemented the applies_to() mechanism, which allows each Policy\n    class to declare the types of PPI elements that it wants to examine.\n    When traversing the document, Perl::Critic invokes the Policy only\n    for elements that are of the correct type.  This improves performance\n    by about 33%.\n\n    Perl::Critic now uses a Plugin architecture to automatically\n    discover Policy modules.  So if you have custom Policies, all you\n    have to do is install them in the Perl::Critic::Policy namespace --\n    no need to add anything to your .perlcriticrc file.  If you write\n    policies in a different namespace, you can configure that too.  See\n    the Perl::Critic::Config docs for details.\n\n    New Policies:\n    * Modules::RequireEndWithOne\n    * NamingConventions::ProhibitAmbiguousNames\n    * References::ProhibitDoubleSigils\n    * Subroutines::RequireFinalReturn\n    * Subroutines::ProhibitAmpersandSigils\n    * Subroutines::ProhibitExcessComplexity\n    * TestingAndDebugging::ProhibitNoStrict\n    * TestingAndDebugging::ProhibitNoWarnings\n\n    Bug Fixes:\n    * 15101: Plugin architecture improves support for 3rd-party code\n    * 16319: Fixed incorrect PBP page number in ProhibitBarwordFilehandle\n    * 16321: Lists of empty quotes are now allowed by ProhibitQuotedWordLists\n    * 16288: Empty lists caused a fatal error RequireTrailingCommas\n    * 15653: Fixed false positive in OneArgSelect.\n\n[0.13] Released on 2005-10-31\n\n    Official release of 0.12_03.  No code major changes.\n\n[0.12_03] Not released\n\n    Renamed -Policy option to -include.  Added -exclude to give the\n    opposite effect.\n\n    Refactored constructor of Perl::Critic.  Now, most of the work\n    is delegated to Perl::Critic::Config.  I'm not sure I like how\n    this turned out, but we'll see how it goes.\n\n    Renamed some Policy modules to be a bit more comprehensible.  Note\n    that you may need to change your .perlcriticrc file accordingly.\n    I also suggest removing your current Perl::Critic installation\n    before installing this one.\n\n    Name Changes:\n    * ProhibitUnpackagedCode => RequireExplicitPackage\n    * RequireQuotedWords     => ProhibitQuotedWordLists\n\n    Improved error message when Perl::Critic dies because PPI can't\n    parsee the input code.\n\n    Changed output of -help to be more terse.\n\n    Edited POD.\n\n[0.12_02] Not released\n\n    Added -Policy option to perlcritic.  The idea is to provide a\n    compact interface for selecting Policy modules at the command-line.\n    This feature is experimental and subject to change.\n\n    Added a warning message if -verbose value looks strange.  In most\n    applications, the -verbose option does not require a value, so people\n    might be puzzled when they write 'perlcritic -verbose my_file.pm' and\n    nothing seems to happen.\n\n    Command-line options to perlcritic are now case-sensitive.  This\n    makes it easier to abbreviate options that start with the same letters\n    (e.g. 'Version' and 'verbose')\n\n    Fixed the new Policy modules that were misnamed and misplaced in the\n    previous distribution.\n\n[0.12_01] Not released\n\n    Rewrote some of the ControlStructures and BuiltinFunction\n    policies to be simpler (and probably a little faster).\n\n    Edited POD.  Fixed some typos.  Added PREREQUISITES section\n    to Perl::Critic documentation.\n\n    Fixed the -verbose FORMAT option so that you can put metachars\n    in the FORMAT specification.  If using perlcritic, be careful to\n    protect them from getting munged by the shell first.\n\n    Replaced ProhibitRequireStatements with RequireBarewordIncludes\n    module. Courtesy of Chris Dolan <cdolan\@cpan.org>\n\n    Added configuration to ProhibitInterpolationOfLiterals so that\n    certain flavors of quotes can be exempt.  This is for folks who\n    have configured their editor to use special syntax highlighting\n    for certain kinds of strings (SQL, for example).\n\n    perlcritic now accepts multiple file arguments, so now you can\n    critique your entire distribution in one shot.  As a result, the\n    output-formats have changed slightly.\n\n    New Policy modules:\n    * BuiltinFunctions::ProhibitLvalueSubstr\n    * BuiltinFunctions::ProhibitSleepViaSelect\n    * ClassHierarchies::ProhibitOneArgBless\n    * CodeLayout::RequireTrailingCommas\n    * CodeLayout::RequireQuotedWordLists\n    * InputOutput::ProhibitTwoArgOpen\n    * InputOutput::ProhibitOneArgSelect\n    * InputOutput::ProhibitBarewordFileHandles\n    * Miscellanea::RequireRcsKeywords\n    * Modules::RequireVersionVar\n    * RegularExpressions::RequireExtendedFormatting\n    * RegularExpressions::RequireLineBoundaryMatching\n\n\n    Bug fixes:\n    14923: 'require' is now permitted. See RequireBarewordIncludes.\n    15022: Fixed false-positives when keywords are used as hash keys.\n    15023: Fixed spurious Violations by removing magic shebang.\n    15031: Fixed spelling mistakes (and probably added some new ones).\n    15233: Postfix 'if' is now allowed with 'die', 'croak', etc.\n\n[0.12] Released 2005-10-10\n\n    Redesigned the 'verbose' feature.  Now the output format\n    can be user-defined using a sprintf-like specification.\n    perlciritc also has a predefined output format that is\n    compatible with grep mode in editors like vim and emacs.\n\n    'return' is now exempt from ProhibitParensWithBuiltins.  I may\n    extend this exemption to all unary functions.\n\n    Edited POD. Added a super brief description of each policy\n    in the main Perl::Critic documentation.  Added details about\n    editor integration.\n\n    Additional Prerequisites:\n    * String::Format\n\n[0.11] Not released\n\n    The internal dynamics and API of Perl::Critic have changed\n    considerably.  The result is a 300% increase in performance.\n    See the POD in Perl::Critic::Policy for details.\n\n    New Features:\n    * Added -verbose option to put more stuff in the output.  In the\n      extreme, you can get the POD from Policy attached to each\n      and every violation.\n\n    Additional Prerequisites:\n    * IO::String\n    * Pod::PlainText\n\n[0.10] Released 2005-10-05\n\n    Fixed stupid bug in newest Policy modules.  They were returning\n    PPI objects instead of Perl::Critic::Violation objects.  Doh!\n\n    Fixed test scripts to prevent failures if the user already has a\n    .perlcriticrc file.\n\n    'ProhibitHardTabs' now allows leading tabs by default.\n\n    Put the Changes file in reverse-chronological order, so the most\n    recent stuff is easy to find at the top of the file\n\n[0.09] Released 2005-10-04\n\n    Fixed several bugs:\n    * 14810: Now you are allowed to create your own 'import' function,\n             since this is frequently done with fancy modules.\n    * 14817: Parens, brackets, and braces are now excluded from\n             'ProhibitNoisyQuotes' since they look better in quotes anyway.\n    * 14787: \$1..\$9 and '_' are exempt from ProhibitPunctuationVars\n    * 14899: Object methods with the same name as a built-in can\n             be called with parens (ProhibitParensWithBuiltins).\n    * 14901: Normalized the exit status of perlcritic to 0, 1, or 2.\n             See documentation for explanation.\n    * 14855: Partially fixed home directory discovery.  Still not\n             completely portable, but at least doesn't create warnings.\n\n    New features:\n    * 14734: Limit for number separators is now configurable\n\n    New Policy modules:\n    * CodeLayout::ProhibitHardTabs\n    * ControlStructures::ProhibitUnlessBlocks\n    * ControlStructures::ProhibitUntilBlocks\n    * ControlStructures::ProhibitCStyleForLoops\n\n    Changed the syntax for the magic comments.  Adam had the\n    idea of using a pragma-like notation.  I liked it.\n\n[0.08_2] Released 2005-09-27\n\n    Fixed problems with Perl::Critic::Config that caused File::Spec\n    to emit 'uninitialized value' warnings during the build.\n\n    Added 1 Policy module contributed by Graham TerMarsch\n\n    Switched from File::Spec::Functions to plain File::Spec because\n    I think its usage is more common.\n\n    Removed 'FindBin' from the test files so I can be sure that the\n    right libraries are getting loaded.  This means I'll have to\n    use the -l option with C<prove>.\n\n    Edited more POD.\n\n[0.08_01] Not released\n\n    Fixed \"ProhibitParensWithBuiltins\" to allow parens to be used with\n    object method calls that have the same name as a builtin functions.\n\n    Introduced magical comments that allow developers to configure\n    Perl::Critic on-the-fly from within their code.\n\n    Added META.yml files and POD tests to the build.  I did this\n    mostly just to boost the Kwalitee score on CPANTS.\n\n    Switched from \"Config::Std\" to \"Config::Tiny\" because it doesn't\n    require those fancy Damian modules that don't seem to work on\n    some older versions of Perl.\n\n[0.07] Released on 2005-09-21\n\n    Fixed bugs in the ProhibitCascadingIfElse policy.\n\n    Added ProhibitExplicitReturnUndef policy\n\n    Made ProhibitUnpackagedCode configurable so you can exempt scripts,\n    which typically don't have an explicit 'package' statement.\n\n    ProhibitPackageVars policy now exempts vars in ALL_CAPS.  This\n    is to permit common package variables like \@EXPORT and \$VERSION.\n\n    Renamed \"ProhibitStringyGrep and \"ProhibitStringyMap\" because\n    the so-called string form doesn't really exist.  Now called\n    \"RequireBlockGrep\" and \"RequireBlockMap\"\n\n    Corrected documentation on defining Policy names within the\n    configuration file.  This still isn't very clear and needs\n    to be rewritten.\n\n    Perl::Critic now requires PPI version 1.003, which has a few bug\n    fixes of its own.\n\n    Rewrite some code just to make Perl::Critic more self-compliant.\n\n    Added test cases to verify the configuration functionality.  These\n    are not completely thorough and need more work.\n\n[0.06] Released on 2005-09-17\n\n    Now called 'Perl::Critic'.\n\n    Added 4 new policy modules.\n\n    Fixed bugs in build process.\n\n    Added support for Module::Build.\n\n[0.05] Released on 2005-09-17\n\n    End of 'Perl::Review' releases.  I have changed the name to\n    'Perl::Critic' to avoid possible confusion with \"The Perl Review\"\n    magazine.\n\n[0.04] Released on 2005-09-14\n\n    Version 0.03 was a bust because I uploaded the wrong tarball to PAUSE.\n\n[0.03] Released on 2005-09-13.\n\n    Fixed some POD links.\n\n    Removed test cases for missing policy module.\n\n[0.02] Released on 2005-09-13.\n\n    Major overhaul based on feedback from Perl community.\n\n    Factored coding standards into separate modules (known as\n    Policies).  The idea here is to allow other developers to easily\n    contribute additional coding standards.\n\n    Reworked Perl::Review into a simple engine for loading and running\n    Policy modules.\n\n    Gave perlreview a command-line interface and configuration file\n    for selecting which Policy modules to use.\n\n[0.01] Released on 2005-08-16.\n\n    Initial version.\n\n##############################################################################\n#      \$URL: http://perlcritic.tigris.org/svn/perlcritic/trunk/distributions/Perl-Critic/Changes \$\n#     \$Date: 2013-09-25 21:18:04 -0700 (Wed, 25 Sep 2013) \$\n#   \$Author: thaljef \$\n# \$Revision: 4169 \$\n##############################################################################\n\n# ex: set ts=8 sts=4 sw=4 tw=78 ft= expandtab shiftround :\n",
  "releases" => []
}
